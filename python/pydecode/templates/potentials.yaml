semirings:
  - type: Viterbi
    cvalue: double
    npvalue: np.double
    viterbi: Yes
    description:
      Real-valued max probability potentials.
      Uses the operations :math:`(+, *) = (\max, *)`.
  - type: LogViterbi
    cvalue: double
    npvalue: np.double
    viterbi: True
    description:
      Real-valued max log-probability potentials.

      Uses the operations :math:`(+, *) = (\max, *)`.
  - type: Real
    cvalue: double
    npvalue: np.double
    viterbi: False
    description:
      Real-valued inside log-probability potentials.
  - type: Log
    cvalue: double
    npvalue: np.double
    viterbi: False
    description:
      Real-valued inside log-probability potentials.

  - type: Boolean
    npvalue: np.int8
    cvalue: char
    viterbi: Yes
    description:
      Boolean-valued logical potentials.

      Uses the operations :math:`(+, *) = (\land, \lor)`.
  - type: Counting
    cvalue: int
    npvalue: np.int32
    viterbi: False,
    description:
      Natural-valued counting potentials.

      Uses the operations :math:`(+, *) = (+, *)`.
  - type: MinMax
    cvalue: double
    npvalue: np.double
    viterbi: No
    description:
      Real-valued min value potentials.

      Uses the operations :math:`(+, *) = (\min, \max)`.

  # - type: Inside
  #   cvalue: double
  #   npvalue: np.double
  #   format: d
  #   viterbi: Yes
  #   description:
  #     Real-valued probability potentials.

  #     Uses the operations :math:`(+, *) = (+, *)`.


  # - type: Alphabet
  #   ctype: AlphabetPotential
  #   cvalue: vector[int]
  #   viterbi: No
  #   description:
  #     Alphabet valued weights.




  # - type: BinaryVector
  #   cvalue: cbitset
  #   pvalue: Bitset
  #   to_cpp: val.data
  #   from_cpp: Bitset().init(val)
  #   viterbi: No
  #   description:
  #     Binary vector potentials.

  # - type: MinSparseVector
  #   cvalue: vector[pair[int, int]]
  #   viterbi : False

  # - type: MaxSparseVector
  #   cvalue: vector[pair[int, int]]
  #   viterbi : No

  # - type: SparseVector
  #   ctype: SparseVectorPotential
  #   cvalue: vector[pair[int, int]]
  #   viterbi: No
  #   description:
  #     Sparse-vector valued weights.
