/* Generated by Cython 0.19.2 on Sun Dec 22 12:41:31 2013 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02040000
    #error Cython requires Python 2.4+.
#else
#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define CYTHON_FORMAT_SSIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   __Pyx_PyInt_AsInt(o)
  #define PyNumber_Index(o)    ((PyNumber_Check(o) && !PyFloat_Check(o)) ? PyNumber_Int(o) : \
                                (PyErr_Format(PyExc_TypeError, \
                                              "expected index value, got %.200s", Py_TYPE(o)->tp_name), \
                                 (PyObject*)0))
  #define __Pyx_PyIndex_Check(o) (PyNumber_Check(o) && !PyFloat_Check(o) && \
                                  !PyComplex_Check(o))
  #define PyIndex_Check __Pyx_PyIndex_Check
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
  #define __PYX_BUILD_PY_SSIZE_T "i"
#else
  #define __PYX_BUILD_PY_SSIZE_T "n"
  #define CYTHON_FORMAT_SSIZE_T "z"
  #define __Pyx_PyIndex_Check PyIndex_Check
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)
  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;
  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)
  #define PyBUF_RECORDS (PyBUF_STRIDES | PyBUF_FORMAT | PyBUF_WRITABLE)
  #define PyBUF_FULL (PyBUF_INDIRECT | PyBUF_FORMAT | PyBUF_WRITABLE)
  typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
  typedef void (*releasebufferproc)(PyObject *, Py_buffer *);
#endif
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#if PY_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6
  #define PyUnicode_FromString(s) PyUnicode_Decode(s, strlen(s), "UTF-8", "strict")
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_TPFLAGS_HAVE_VERSION_TAG 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((k=k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj) || \
                                         PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (Py_TYPE(obj) == &PyBaseString_Type)
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_VERSION_HEX < 0x03020000
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__pydecode__hyper
#define __PYX_HAVE_API__pydecode__hyper
#include "string.h"
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <list>
#include <utility>
#include <map>
#include "Hypergraph/Hypergraph.h"
#include <bitset>
#include "Hypergraph/Algorithms.h"
#include "Hypergraph/Semirings.h"
#include "Hypergraph/Potentials.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromUString(s)  __Pyx_PyObject_FromString((char*)s)
#define __Pyx_PyBytes_FromUString(s)   __Pyx_PyBytes_FromString((char*)s)
#define __Pyx_PyStr_FromUString(s)     __Pyx_PyStr_FromString((char*)s)
#define __Pyx_PyUnicode_FromUString(s) __Pyx_PyUnicode_FromString((char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return u_end - u - 1;
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params() {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    if (strcmp(PyBytes_AsString(default_encoding), "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        const char* default_encoding_c = PyBytes_AS_STRING(default_encoding);
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (ascii_chars_u == NULL) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (ascii_chars_b == NULL || strncmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
    }
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params() {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    default_encoding_c = PyBytes_AS_STRING(default_encoding);
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(sys);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


#ifdef __GNUC__
  /* Test for GCC > 2.95 */
  #if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
    #define likely(x)   __builtin_expect(!!(x), 1)
    #define unlikely(x) __builtin_expect(!!(x), 0)
  #else /* __GNUC__ > 2 ... */
    #define likely(x)   (x)
    #define unlikely(x) (x)
  #endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "hyper.pyx",
  "stringsource",
  "stringsource",
  "stringsource",
  "stringsource",
  "hypergraph.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_8pydecode_5hyper_Bitset;
struct __pyx_obj_8pydecode_5hyper__SparseVectorW;
struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials;
struct __pyx_obj_8pydecode_5hyper__BinaryVectorW;
struct __pyx_obj_8pydecode_5hyper_CountingChart;
struct __pyx_obj_8pydecode_5hyper__CountingMarginals;
struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart;
struct __pyx_obj_8pydecode_10hypergraph_Edge;
struct __pyx_obj_8pydecode_5hyper_ViterbiChart;
struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals;
struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials;
struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials;
struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials;
struct __pyx_obj_8pydecode_5hyper_BoolChart;
struct __pyx_obj_8pydecode_5hyper_InsidePotentials;
struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorW;
struct __pyx_obj_8pydecode_5hyper__InsideW;
struct __pyx_obj_8pydecode_5hyper_InsideChart;
struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals;
struct __pyx_obj_8pydecode_5hyper_BoolPotentials;
struct __pyx_obj_8pydecode_5hyper__MinSparseVectorW;
struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals;
struct __pyx_obj_8pydecode_5hyper__InsideMarginals;
struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart;
struct __pyx_obj_8pydecode_10hypergraph_Path;
struct __pyx_obj_8pydecode_10hypergraph_Node;
struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials;
struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals;
struct __pyx_obj_8pydecode_5hyper__ViterbiW;
struct __pyx_obj_8pydecode_5hyper__LogViterbiW;
struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart;
struct __pyx_obj_8pydecode_5hyper_CountingPotentials;
struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials;
struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals;
struct __pyx_obj_8pydecode_10hypergraph_GraphBuilder;
struct __pyx_obj_8pydecode_5hyper__CountingW;
struct __pyx_obj_8pydecode_10hypergraph_Hypergraph;
struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals;
struct __pyx_obj_8pydecode_5hyper__BoolW;
struct __pyx_obj_8pydecode_5hyper_LogViterbiChart;
struct __pyx_obj_8pydecode_5hyper_Projection;
struct __pyx_obj_8pydecode_5hyper__BoolMarginals;
struct __pyx_obj_8pydecode_5hyper_SparseVectorChart;

/* "pydecode/hyper.pxd":20
 *         bool& operator[](int)
 * 
 * cdef class Bitset:             # <<<<<<<<<<<<<<
 *     cdef cbitset data
 *     cdef init(self, cbitset data)
 */
struct __pyx_obj_8pydecode_5hyper_Bitset {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_Bitset *__pyx_vtab;
  bitset<500> data;
};


/* "pydecode/hyper.pyx":1508
 *         #return _SparseVectorW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 * cdef class _SparseVectorW:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     def one():
 */
struct __pyx_obj_8pydecode_5hyper__SparseVectorW {
  PyObject_HEAD
};


/* "pydecode/hyper.pxd":120
 * 
 * 
 * cdef class ViterbiPotentials:             # <<<<<<<<<<<<<<
 *     cdef Hypergraph hypergraph
 *     cdef CHypergraphViterbiPotentials *thisptr
 */
struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_ViterbiPotentials *__pyx_vtab;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *hypergraph;
  HypergraphPotentials<ViterbiPotential> *thisptr;
  struct __pyx_obj_8pydecode_5hyper_Projection *projection;
  PyObject *kind;
};


/* "pydecode/hyper.pyx":2402
 *         #return _BinaryVectorW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 * cdef class _BinaryVectorW:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     def one():
 */
struct __pyx_obj_8pydecode_5hyper__BinaryVectorW {
  PyObject_HEAD
};


/* "pydecode/hyper.pxd":985
 *               Projection projection)
 * 
 * cdef class CountingChart:             # <<<<<<<<<<<<<<
 *     cdef CCountingChart *chart
 *     cdef kind
 */
struct __pyx_obj_8pydecode_5hyper_CountingChart {
  PyObject_HEAD
  Chart<CountingPotential> *chart;
  PyObject *kind;
};


/* "pydecode/hyper.pyx":2772
 *         self.chart = NULL
 * 
 * cdef class _CountingMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CCountingMarginals *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_5hyper__CountingMarginals {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper__CountingMarginals *__pyx_vtab;
  Marginals<CountingPotential> const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pxd":771
 *               Projection projection)
 * 
 * cdef class MaxSparseVectorChart:             # <<<<<<<<<<<<<<
 *     cdef CMaxSparseVectorChart *chart
 *     cdef kind
 */
struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart {
  PyObject_HEAD
  Chart<MaxSparseVectorPotential> *chart;
  PyObject *kind;
};


/* "hypergraph.pxd":30
 *                    Hypergraph graph)
 * 
 * cdef class Edge:             # <<<<<<<<<<<<<<
 *     cdef const CHyperedge *edgeptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_10hypergraph_Edge {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_10hypergraph_Edge *__pyx_vtab;
  Hyperedge const *edgeptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pxd":129
 *               Projection projection)
 * 
 * cdef class ViterbiChart:             # <<<<<<<<<<<<<<
 *     cdef CViterbiChart *chart
 *     cdef kind
 */
struct __pyx_obj_8pydecode_5hyper_ViterbiChart {
  PyObject_HEAD
  Chart<ViterbiPotential> *chart;
  PyObject *kind;
};


/* "pydecode/hyper.pyx":256
 *         self.chart = NULL
 * 
 * cdef class _ViterbiMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CViterbiMarginals *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper__ViterbiMarginals *__pyx_vtab;
  Marginals<ViterbiPotential> const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pxd":762
 * 
 * 
 * cdef class MaxSparseVectorPotentials:             # <<<<<<<<<<<<<<
 *     cdef Hypergraph hypergraph
 *     cdef CHypergraphMaxSparseVectorPotentials *thisptr
 */
struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_vtab;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *hypergraph;
  HypergraphPotentials<MaxSparseVectorPotential> *thisptr;
  struct __pyx_obj_8pydecode_5hyper_Projection *projection;
  PyObject *kind;
};


/* "pydecode/hyper.pxd":227
 * 
 * 
 * cdef class LogViterbiPotentials:             # <<<<<<<<<<<<<<
 *     cdef Hypergraph hypergraph
 *     cdef CHypergraphLogViterbiPotentials *thisptr
 */
struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_LogViterbiPotentials *__pyx_vtab;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *hypergraph;
  HypergraphPotentials<LogViterbiPotential> *thisptr;
  struct __pyx_obj_8pydecode_5hyper_Projection *projection;
  PyObject *kind;
};


/* "pydecode/hyper.pxd":869
 * 
 * 
 * cdef class BinaryVectorPotentials:             # <<<<<<<<<<<<<<
 *     cdef Hypergraph hypergraph
 *     cdef CHypergraphBinaryVectorPotentials *thisptr
 */
struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_BinaryVectorPotentials *__pyx_vtab;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *hypergraph;
  HypergraphPotentials<BinaryVectorPotential> *thisptr;
  struct __pyx_obj_8pydecode_5hyper_Projection *projection;
  PyObject *kind;
};


/* "pydecode/hyper.pxd":450
 *               Projection projection)
 * 
 * cdef class BoolChart:             # <<<<<<<<<<<<<<
 *     cdef CBoolChart *chart
 *     cdef kind
 */
struct __pyx_obj_8pydecode_5hyper_BoolChart {
  PyObject_HEAD
  Chart<BoolPotential> *chart;
  PyObject *kind;
};


/* "pydecode/hyper.pxd":334
 * 
 * 
 * cdef class InsidePotentials:             # <<<<<<<<<<<<<<
 *     cdef Hypergraph hypergraph
 *     cdef CHypergraphInsidePotentials *thisptr
 */
struct __pyx_obj_8pydecode_5hyper_InsidePotentials {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_InsidePotentials *__pyx_vtab;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *hypergraph;
  HypergraphPotentials<InsidePotential> *thisptr;
  struct __pyx_obj_8pydecode_5hyper_Projection *projection;
  PyObject *kind;
};


/* "pydecode/hyper.pyx":2104
 *         #return _MaxSparseVectorW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 * cdef class _MaxSparseVectorW:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     def one():
 */
struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorW {
  PyObject_HEAD
};


/* "pydecode/hyper.pyx":846
 *         #return _InsideW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 * cdef class _InsideW:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     def one():
 */
struct __pyx_obj_8pydecode_5hyper__InsideW {
  PyObject_HEAD
};


/* "pydecode/hyper.pxd":343
 *               Projection projection)
 * 
 * cdef class InsideChart:             # <<<<<<<<<<<<<<
 *     cdef CInsideChart *chart
 *     cdef kind
 */
struct __pyx_obj_8pydecode_5hyper_InsideChart {
  PyObject_HEAD
  Chart<InsidePotential> *chart;
  PyObject *kind;
};


/* "pydecode/hyper.pyx":1580
 *         self.chart = NULL
 * 
 * cdef class _SparseVectorMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CSparseVectorMarginals *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper__SparseVectorMarginals *__pyx_vtab;
  Marginals<SparseVectorPotential> const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pxd":441
 * 
 * 
 * cdef class BoolPotentials:             # <<<<<<<<<<<<<<
 *     cdef Hypergraph hypergraph
 *     cdef CHypergraphBoolPotentials *thisptr
 */
struct __pyx_obj_8pydecode_5hyper_BoolPotentials {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *__pyx_vtab;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *hypergraph;
  HypergraphPotentials<BoolPotential> *thisptr;
  struct __pyx_obj_8pydecode_5hyper_Projection *projection;
  PyObject *kind;
};


/* "pydecode/hyper.pyx":1806
 *         #return _MinSparseVectorW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 * cdef class _MinSparseVectorW:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     def one():
 */
struct __pyx_obj_8pydecode_5hyper__MinSparseVectorW {
  PyObject_HEAD
};


/* "pydecode/hyper.pyx":587
 *         self.chart = NULL
 * 
 * cdef class _LogViterbiMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CLogViterbiMarginals *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper__LogViterbiMarginals *__pyx_vtab;
  Marginals<LogViterbiPotential> const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pyx":918
 *         self.chart = NULL
 * 
 * cdef class _InsideMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CInsideMarginals *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_5hyper__InsideMarginals {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper__InsideMarginals *__pyx_vtab;
  Marginals<InsidePotential> const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pxd":664
 *               Projection projection)
 * 
 * cdef class MinSparseVectorChart:             # <<<<<<<<<<<<<<
 *     cdef CMinSparseVectorChart *chart
 *     cdef kind
 */
struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart {
  PyObject_HEAD
  Chart<MinSparseVectorPotential> *chart;
  PyObject *kind;
};


/* "hypergraph.pxd":36
 *     cdef Edge init(self, const CHyperedge *ptr, Hypergraph graph)
 * 
 * cdef class Path:             # <<<<<<<<<<<<<<
 *     cdef const CHyperpath *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_10hypergraph_Path {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *__pyx_vtab;
  Hyperpath const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "hypergraph.pxd":22
 *     cdef GraphBuilder init(self, Hypergraph hyper, CHypergraph *ptr)
 * 
 * cdef class Node:             # <<<<<<<<<<<<<<
 *     cdef const CHypernode *nodeptr
 *     cdef CHypergraph *graphptr
 */
struct __pyx_obj_8pydecode_10hypergraph_Node {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_10hypergraph_Node *__pyx_vtab;
  Hypernode const *nodeptr;
  Hypergraph *graphptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pxd":655
 * 
 * 
 * cdef class MinSparseVectorPotentials:             # <<<<<<<<<<<<<<
 *     cdef Hypergraph hypergraph
 *     cdef CHypergraphMinSparseVectorPotentials *thisptr
 */
struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_vtab;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *hypergraph;
  HypergraphPotentials<MinSparseVectorPotential> *thisptr;
  struct __pyx_obj_8pydecode_5hyper_Projection *projection;
  PyObject *kind;
};


/* "pydecode/hyper.pyx":2176
 *         self.chart = NULL
 * 
 * cdef class _MaxSparseVectorMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CMaxSparseVectorMarginals *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper__MaxSparseVectorMarginals *__pyx_vtab;
  Marginals<MaxSparseVectorPotential> const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pyx":184
 *         #return _ViterbiW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 * cdef class _ViterbiW:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     def one():
 */
struct __pyx_obj_8pydecode_5hyper__ViterbiW {
  PyObject_HEAD
};


/* "pydecode/hyper.pyx":515
 *         #return _LogViterbiW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 * cdef class _LogViterbiW:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     def one():
 */
struct __pyx_obj_8pydecode_5hyper__LogViterbiW {
  PyObject_HEAD
};


/* "pydecode/hyper.pxd":878
 *               Projection projection)
 * 
 * cdef class BinaryVectorChart:             # <<<<<<<<<<<<<<
 *     cdef CBinaryVectorChart *chart
 *     cdef kind
 */
struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart {
  PyObject_HEAD
  Chart<BinaryVectorPotential> *chart;
  PyObject *kind;
};


/* "pydecode/hyper.pxd":976
 * 
 * 
 * cdef class CountingPotentials:             # <<<<<<<<<<<<<<
 *     cdef Hypergraph hypergraph
 *     cdef CHypergraphCountingPotentials *thisptr
 */
struct __pyx_obj_8pydecode_5hyper_CountingPotentials {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_CountingPotentials *__pyx_vtab;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *hypergraph;
  HypergraphPotentials<CountingPotential> *thisptr;
  struct __pyx_obj_8pydecode_5hyper_Projection *projection;
  PyObject *kind;
};


/* "pydecode/hyper.pxd":548
 * 
 * 
 * cdef class SparseVectorPotentials:             # <<<<<<<<<<<<<<
 *     cdef Hypergraph hypergraph
 *     cdef CHypergraphSparseVectorPotentials *thisptr
 */
struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_SparseVectorPotentials *__pyx_vtab;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *hypergraph;
  HypergraphPotentials<SparseVectorPotential> *thisptr;
  struct __pyx_obj_8pydecode_5hyper_Projection *projection;
  PyObject *kind;
};


/* "pydecode/hyper.pyx":1878
 *         self.chart = NULL
 * 
 * cdef class _MinSparseVectorMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CMinSparseVectorMarginals *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper__MinSparseVectorMarginals *__pyx_vtab;
  Marginals<MinSparseVectorPotential> const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "hypergraph.pxd":13
 * 
 * 
 * cdef class GraphBuilder:             # <<<<<<<<<<<<<<
 *     cdef CHypergraph *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_10hypergraph_GraphBuilder {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_10hypergraph_GraphBuilder *__pyx_vtab;
  Hypergraph *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
  PyObject *edge_labels;
  PyObject *node_labels;
  PyObject *started;
};


/* "pydecode/hyper.pyx":2700
 *         #return _CountingW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 * cdef class _CountingW:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     def one():
 */
struct __pyx_obj_8pydecode_5hyper__CountingW {
  PyObject_HEAD
};


/* "hypergraph.pxd":4
 * from wrap cimport *
 * 
 * cdef class Hypergraph:             # <<<<<<<<<<<<<<
 *     cdef CHypergraph *thisptr
 *     cdef edge_labels
 */
struct __pyx_obj_8pydecode_10hypergraph_Hypergraph {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_10hypergraph_Hypergraph *__pyx_vtab;
  Hypergraph *thisptr;
  PyObject *edge_labels;
  PyObject *node_labels;
  PyObject *_cached_edges;
};


/* "pydecode/hyper.pyx":2474
 *         self.chart = NULL
 * 
 * cdef class _BinaryVectorMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CBinaryVectorMarginals *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper__BinaryVectorMarginals *__pyx_vtab;
  Marginals<BinaryVectorPotential> const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pyx":1177
 *         #return _BoolW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 * cdef class _BoolW:             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     def one():
 */
struct __pyx_obj_8pydecode_5hyper__BoolW {
  PyObject_HEAD
};


/* "pydecode/hyper.pxd":236
 *               Projection projection)
 * 
 * cdef class LogViterbiChart:             # <<<<<<<<<<<<<<
 *     cdef CLogViterbiChart *chart
 *     cdef kind
 */
struct __pyx_obj_8pydecode_5hyper_LogViterbiChart {
  PyObject_HEAD
  Chart<LogViterbiPotential> *chart;
  PyObject *kind;
};


/* "pydecode/hyper.pxd":993
 * #
 * 
 * cdef class Projection:             # <<<<<<<<<<<<<<
 *     cdef const CHypergraphProjection *thisptr
 *     cdef Hypergraph small_graph
 */
struct __pyx_obj_8pydecode_5hyper_Projection {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper_Projection *__pyx_vtab;
  HypergraphProjection const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *small_graph;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *big_graph;
};


/* "pydecode/hyper.pyx":1249
 *         self.chart = NULL
 * 
 * cdef class _BoolMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CBoolMarginals *thisptr
 *     cdef Hypergraph graph
 */
struct __pyx_obj_8pydecode_5hyper__BoolMarginals {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pydecode_5hyper__BoolMarginals *__pyx_vtab;
  Marginals<BoolPotential> const *thisptr;
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *graph;
};


/* "pydecode/hyper.pxd":557
 *               Projection projection)
 * 
 * cdef class SparseVectorChart:             # <<<<<<<<<<<<<<
 *     cdef CSparseVectorChart *chart
 *     cdef kind
 */
struct __pyx_obj_8pydecode_5hyper_SparseVectorChart {
  PyObject_HEAD
  Chart<SparseVectorPotential> *chart;
  PyObject *kind;
};



/* "pydecode/hyper.pyx":30
 * 
 * 
 * cdef class ViterbiPotentials:             # <<<<<<<<<<<<<<
 *     r"""
 *     Potential vector :math:`\theta \in R^{|{\cal E}|}` associated with a hypergraph.
 */

struct __pyx_vtabstruct_8pydecode_5hyper_ViterbiPotentials {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *, HypergraphPotentials<ViterbiPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_ViterbiPotentials *__pyx_vtabptr_8pydecode_5hyper_ViterbiPotentials;


/* "hypergraph.pxd":4
 * from wrap cimport *
 * 
 * cdef class Hypergraph:             # <<<<<<<<<<<<<<
 *     cdef CHypergraph *thisptr
 *     cdef edge_labels
 */

struct __pyx_vtabstruct_8pydecode_10hypergraph_Hypergraph {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *(*init)(struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *, Hypergraph const *, PyObject *, PyObject *);
};
static struct __pyx_vtabstruct_8pydecode_10hypergraph_Hypergraph *__pyx_vtabptr_8pydecode_10hypergraph_Hypergraph;


/* "pydecode/hyper.pyx":2176
 *         self.chart = NULL
 * 
 * cdef class _MaxSparseVectorMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CMaxSparseVectorMarginals *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_5hyper__MaxSparseVectorMarginals {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *, Marginals<MaxSparseVectorPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper__MaxSparseVectorMarginals *__pyx_vtabptr_8pydecode_5hyper__MaxSparseVectorMarginals;


/* "hypergraph.pxd":13
 * 
 * 
 * cdef class GraphBuilder:             # <<<<<<<<<<<<<<
 *     cdef CHypergraph *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_10hypergraph_GraphBuilder {
  struct __pyx_obj_8pydecode_10hypergraph_GraphBuilder *(*init)(struct __pyx_obj_8pydecode_10hypergraph_GraphBuilder *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *, Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_10hypergraph_GraphBuilder *__pyx_vtabptr_8pydecode_10hypergraph_GraphBuilder;


/* "pydecode/hyper.pyx":2999
 * 
 * 
 * cdef class Projection:             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.thisptr = NULL
 */

struct __pyx_vtabstruct_8pydecode_5hyper_Projection {
  struct __pyx_obj_8pydecode_5hyper_Projection *(*init)(struct __pyx_obj_8pydecode_5hyper_Projection *, HypergraphProjection const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_Projection *__pyx_vtabptr_8pydecode_5hyper_Projection;


/* "pydecode/hyper.pyx":15
 * 
 * 
 * cdef class Bitset:             # <<<<<<<<<<<<<<
 *     cdef init(self, cbitset data):
 *         self.data = data
 */

struct __pyx_vtabstruct_8pydecode_5hyper_Bitset {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_Bitset *, bitset<500>);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_Bitset *__pyx_vtabptr_8pydecode_5hyper_Bitset;


/* "pydecode/hyper.pyx":361
 * 
 * 
 * cdef class LogViterbiPotentials:             # <<<<<<<<<<<<<<
 *     r"""
 *     Potential vector :math:`\theta \in R^{|{\cal E}|}` associated with a hypergraph.
 */

struct __pyx_vtabstruct_8pydecode_5hyper_LogViterbiPotentials {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *, HypergraphPotentials<LogViterbiPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_LogViterbiPotentials *__pyx_vtabptr_8pydecode_5hyper_LogViterbiPotentials;


/* "pydecode/hyper.pyx":1249
 *         self.chart = NULL
 * 
 * cdef class _BoolMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CBoolMarginals *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_5hyper__BoolMarginals {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper__BoolMarginals *, Marginals<BoolPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper__BoolMarginals *__pyx_vtabptr_8pydecode_5hyper__BoolMarginals;


/* "pydecode/hyper.pyx":1652
 * 
 * 
 * cdef class MinSparseVectorPotentials:             # <<<<<<<<<<<<<<
 *     r"""
 *     Potential vector :math:`\theta \in R^{|{\cal E}|}` associated with a hypergraph.
 */

struct __pyx_vtabstruct_8pydecode_5hyper_MinSparseVectorPotentials {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *, HypergraphPotentials<MinSparseVectorPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_vtabptr_8pydecode_5hyper_MinSparseVectorPotentials;


/* "hypergraph.pxd":36
 *     cdef Edge init(self, const CHyperedge *ptr, Hypergraph graph)
 * 
 * cdef class Path:             # <<<<<<<<<<<<<<
 *     cdef const CHyperpath *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_10hypergraph_Path {
  struct __pyx_obj_8pydecode_10hypergraph_Path *(*init)(struct __pyx_obj_8pydecode_10hypergraph_Path *, Hyperpath const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
  PyObject *(*equal)(struct __pyx_obj_8pydecode_10hypergraph_Path *, struct __pyx_obj_8pydecode_10hypergraph_Path *);
};
static struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *__pyx_vtabptr_8pydecode_10hypergraph_Path;


/* "hypergraph.pxd":30
 *                    Hypergraph graph)
 * 
 * cdef class Edge:             # <<<<<<<<<<<<<<
 *     cdef const CHyperedge *edgeptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_10hypergraph_Edge {
  struct __pyx_obj_8pydecode_10hypergraph_Edge *(*init)(struct __pyx_obj_8pydecode_10hypergraph_Edge *, Hyperedge const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_10hypergraph_Edge *__pyx_vtabptr_8pydecode_10hypergraph_Edge;


/* "pydecode/hyper.pyx":2772
 *         self.chart = NULL
 * 
 * cdef class _CountingMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CCountingMarginals *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_5hyper__CountingMarginals {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper__CountingMarginals *, Marginals<CountingPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper__CountingMarginals *__pyx_vtabptr_8pydecode_5hyper__CountingMarginals;


/* "pydecode/hyper.pyx":1950
 * 
 * 
 * cdef class MaxSparseVectorPotentials:             # <<<<<<<<<<<<<<
 *     r"""
 *     Potential vector :math:`\theta \in R^{|{\cal E}|}` associated with a hypergraph.
 */

struct __pyx_vtabstruct_8pydecode_5hyper_MaxSparseVectorPotentials {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *, HypergraphPotentials<MaxSparseVectorPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_vtabptr_8pydecode_5hyper_MaxSparseVectorPotentials;


/* "pydecode/hyper.pyx":256
 *         self.chart = NULL
 * 
 * cdef class _ViterbiMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CViterbiMarginals *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_5hyper__ViterbiMarginals {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *, Marginals<ViterbiPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper__ViterbiMarginals *__pyx_vtabptr_8pydecode_5hyper__ViterbiMarginals;


/* "pydecode/hyper.pyx":2546
 * 
 * 
 * cdef class CountingPotentials:             # <<<<<<<<<<<<<<
 *     r"""
 *     Potential vector :math:`\theta \in R^{|{\cal E}|}` associated with a hypergraph.
 */

struct __pyx_vtabstruct_8pydecode_5hyper_CountingPotentials {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *, HypergraphPotentials<CountingPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_CountingPotentials *__pyx_vtabptr_8pydecode_5hyper_CountingPotentials;


/* "pydecode/hyper.pyx":1023
 * 
 * 
 * cdef class BoolPotentials:             # <<<<<<<<<<<<<<
 *     r"""
 *     Potential vector :math:`\theta \in R^{|{\cal E}|}` associated with a hypergraph.
 */

struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *, HypergraphPotentials<BoolPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *__pyx_vtabptr_8pydecode_5hyper_BoolPotentials;


/* "pydecode/hyper.pyx":2474
 *         self.chart = NULL
 * 
 * cdef class _BinaryVectorMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CBinaryVectorMarginals *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_5hyper__BinaryVectorMarginals {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *, Marginals<BinaryVectorPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper__BinaryVectorMarginals *__pyx_vtabptr_8pydecode_5hyper__BinaryVectorMarginals;


/* "pydecode/hyper.pyx":918
 *         self.chart = NULL
 * 
 * cdef class _InsideMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CInsideMarginals *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_5hyper__InsideMarginals {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper__InsideMarginals *, Marginals<InsidePotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper__InsideMarginals *__pyx_vtabptr_8pydecode_5hyper__InsideMarginals;


/* "pydecode/hyper.pyx":2248
 * 
 * 
 * cdef class BinaryVectorPotentials:             # <<<<<<<<<<<<<<
 *     r"""
 *     Potential vector :math:`\theta \in R^{|{\cal E}|}` associated with a hypergraph.
 */

struct __pyx_vtabstruct_8pydecode_5hyper_BinaryVectorPotentials {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *, HypergraphPotentials<BinaryVectorPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_BinaryVectorPotentials *__pyx_vtabptr_8pydecode_5hyper_BinaryVectorPotentials;


/* "pydecode/hyper.pyx":1354
 * 
 * 
 * cdef class SparseVectorPotentials:             # <<<<<<<<<<<<<<
 *     r"""
 *     Potential vector :math:`\theta \in R^{|{\cal E}|}` associated with a hypergraph.
 */

struct __pyx_vtabstruct_8pydecode_5hyper_SparseVectorPotentials {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *, HypergraphPotentials<SparseVectorPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_SparseVectorPotentials *__pyx_vtabptr_8pydecode_5hyper_SparseVectorPotentials;


/* "pydecode/hyper.pyx":1580
 *         self.chart = NULL
 * 
 * cdef class _SparseVectorMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CSparseVectorMarginals *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_5hyper__SparseVectorMarginals {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *, Marginals<SparseVectorPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper__SparseVectorMarginals *__pyx_vtabptr_8pydecode_5hyper__SparseVectorMarginals;


/* "hypergraph.pxd":22
 *     cdef GraphBuilder init(self, Hypergraph hyper, CHypergraph *ptr)
 * 
 * cdef class Node:             # <<<<<<<<<<<<<<
 *     cdef const CHypernode *nodeptr
 *     cdef CHypergraph *graphptr
 */

struct __pyx_vtabstruct_8pydecode_10hypergraph_Node {
  struct __pyx_obj_8pydecode_10hypergraph_Node *(*init)(struct __pyx_obj_8pydecode_10hypergraph_Node *, Hypernode const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_10hypergraph_Node *__pyx_vtabptr_8pydecode_10hypergraph_Node;


/* "pydecode/hyper.pyx":587
 *         self.chart = NULL
 * 
 * cdef class _LogViterbiMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CLogViterbiMarginals *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_5hyper__LogViterbiMarginals {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *, Marginals<LogViterbiPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper__LogViterbiMarginals *__pyx_vtabptr_8pydecode_5hyper__LogViterbiMarginals;


/* "pydecode/hyper.pyx":692
 * 
 * 
 * cdef class InsidePotentials:             # <<<<<<<<<<<<<<
 *     r"""
 *     Potential vector :math:`\theta \in R^{|{\cal E}|}` associated with a hypergraph.
 */

struct __pyx_vtabstruct_8pydecode_5hyper_InsidePotentials {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *, HypergraphPotentials<InsidePotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper_InsidePotentials *__pyx_vtabptr_8pydecode_5hyper_InsidePotentials;


/* "pydecode/hyper.pyx":1878
 *         self.chart = NULL
 * 
 * cdef class _MinSparseVectorMarginals:             # <<<<<<<<<<<<<<
 *     cdef const CMinSparseVectorMarginals *thisptr
 *     cdef Hypergraph graph
 */

struct __pyx_vtabstruct_8pydecode_5hyper__MinSparseVectorMarginals {
  PyObject *(*init)(struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *, Marginals<MinSparseVectorPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *);
};
static struct __pyx_vtabstruct_8pydecode_5hyper__MinSparseVectorMarginals *__pyx_vtabptr_8pydecode_5hyper__MinSparseVectorMarginals;
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname); /*proto*/
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name); /*proto*/

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

static CYTHON_INLINE int __Pyx_IterFinish(void); /*proto*/

static PyObject* __Pyx_PyObject_CallMethodTuple(PyObject* obj, PyObject* method_name, PyObject* args) {
    PyObject *method, *result = NULL;
    if (unlikely(!args)) return NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
    result = PyObject_Call(method, args, NULL);
    Py_DECREF(method);
bad:
    Py_DECREF(args);
    return result;
}
#define __Pyx_PyObject_CallMethod3(obj, name, arg1, arg2, arg3) \
    __Pyx_PyObject_CallMethodTuple(obj, name, PyTuple_Pack(3, arg1, arg2, arg3))
#define __Pyx_PyObject_CallMethod2(obj, name, arg1, arg2) \
    __Pyx_PyObject_CallMethodTuple(obj, name, PyTuple_Pack(2, arg1, arg2))
#define __Pyx_PyObject_CallMethod1(obj, name, arg1) \
    __Pyx_PyObject_CallMethodTuple(obj, name, PyTuple_Pack(1, arg1))
#define __Pyx_PyObject_CallMethod0(obj, name) \
    __Pyx_PyObject_CallMethodTuple(obj, name, (Py_INCREF(__pyx_empty_tuple), __pyx_empty_tuple))

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index); /*proto*/

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected); /*proto*/

static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** value1, PyObject** value2,
                                             int is_tuple, int has_known_size, int decref_tuple);

static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed); /*proto*/

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause); /*proto*/

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

#define __Pyx_GetItemInt(o, i, size, to_py_func, is_list, wraparound, boundscheck) \
    (((size) <= sizeof(Py_ssize_t)) ? \
    __Pyx_GetItemInt_Fast(o, i, is_list, wraparound, boundscheck) : \
    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
#define __Pyx_GetItemInt_List(o, i, size, to_py_func, is_list, wraparound, boundscheck) \
    (((size) <= sizeof(Py_ssize_t)) ? \
    __Pyx_GetItemInt_List_Fast(o, i, wraparound, boundscheck) : \
    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func, is_list, wraparound, boundscheck) \
    (((size) <= sizeof(Py_ssize_t)) ? \
    __Pyx_GetItemInt_Tuple_Fast(o, i, wraparound, boundscheck) : \
    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

#define __Pyx_SetItemInt(o, i, v, size, to_py_func, is_list, wraparound, boundscheck) \
    (((size) <= sizeof(Py_ssize_t)) ? \
    __Pyx_SetItemInt_Fast(o, i, v, is_list, wraparound, boundscheck) : \
    __Pyx_SetItemInt_Generic(o, to_py_func(i), v))
static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

static void* __Pyx_GetVtable(PyObject *dict); /*proto*/

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name); /*proto*/

#define __Pyx_CyFunction_USED 1
#include <structmember.h>
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f) \
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f) \
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f) \
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g) \
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
    int flags;
    PyObject *func_dict;
    PyObject *func_weakreflist;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj; /* No-args super() class cell */
    void *defaults;
    int defaults_pyobjects;
    PyObject *defaults_tuple;   /* Const defaults tuple */
    PyObject *defaults_kwdict;  /* Const kwonly defaults dict */
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations; /* function annotations dict */
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_NewEx(ml, flags, qualname, self, module, code) \
    __Pyx_CyFunction_New(__pyx_CyFunctionType, ml, flags, qualname, self, module, code)
static PyObject *__Pyx_CyFunction_New(PyTypeObject *, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self, PyObject *module,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __Pyx_CyFunction_init(void);

#include <new>

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level); /*proto*/

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases); /*proto*/

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *qualname, PyObject *modname); /*proto*/

#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);  /*proto*/

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/


/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp.list' */

/* Module declarations from 'libcpp.utility' */

/* Module declarations from 'libcpp.map' */

/* Module declarations from 'libcpp.pair' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'pydecode.wrap' */

/* Module declarations from 'pydecode.hypergraph' */
static PyTypeObject *__pyx_ptype_8pydecode_10hypergraph_Hypergraph = 0;
static PyTypeObject *__pyx_ptype_8pydecode_10hypergraph_GraphBuilder = 0;
static PyTypeObject *__pyx_ptype_8pydecode_10hypergraph_Node = 0;
static PyTypeObject *__pyx_ptype_8pydecode_10hypergraph_Edge = 0;
static PyTypeObject *__pyx_ptype_8pydecode_10hypergraph_Path = 0;

/* Module declarations from 'pydecode.hyper' */
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_Bitset = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__SparseVectorW = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__BinaryVectorW = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__CountingMarginals = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_MaxSparseVectorChart = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__ViterbiMarginals = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_ViterbiChart = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_LogViterbiPotentials = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_ViterbiPotentials = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_BoolChart = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_CountingChart = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__InsideW = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_InsideChart = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__SparseVectorMarginals = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_BoolPotentials = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__MinSparseVectorW = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__LogViterbiMarginals = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__InsideMarginals = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_MinSparseVectorChart = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__MaxSparseVectorMarginals = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__ViterbiW = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_InsidePotentials = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__LogViterbiW = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_BinaryVectorChart = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_CountingPotentials = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_SparseVectorPotentials = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__MinSparseVectorMarginals = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__CountingW = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__BinaryVectorMarginals = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__BoolW = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_LogViterbiChart = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_Projection = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper__BoolMarginals = 0;
static PyTypeObject *__pyx_ptype_8pydecode_5hyper_SparseVectorChart = 0;
static double __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(double); /*proto*/
static PyObject *__pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(double); /*proto*/
static double __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(double); /*proto*/
static PyObject *__pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(double); /*proto*/
static double __pyx_f_8pydecode_5hyper__InsideW_to_cpp(double); /*proto*/
static PyObject *__pyx_f_8pydecode_5hyper__InsideW_from_cpp(double); /*proto*/
static bool __pyx_f_8pydecode_5hyper__BoolW_to_cpp(bool); /*proto*/
static PyObject *__pyx_f_8pydecode_5hyper__BoolW_from_cpp(bool); /*proto*/
static std::vector<std::pair<int,int> > __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(std::vector<std::pair<int,int> >); /*proto*/
static PyObject *__pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(std::vector<std::pair<int,int> >); /*proto*/
static std::vector<std::pair<int,int> > __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(std::vector<std::pair<int,int> >); /*proto*/
static PyObject *__pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(std::vector<std::pair<int,int> >); /*proto*/
static std::vector<std::pair<int,int> > __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(std::vector<std::pair<int,int> >); /*proto*/
static PyObject *__pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(std::vector<std::pair<int,int> >); /*proto*/
static bitset<500> __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(struct __pyx_obj_8pydecode_5hyper_Bitset *); /*proto*/
static PyObject *__pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(bitset<500>); /*proto*/
static int __pyx_f_8pydecode_5hyper__CountingW_to_cpp(int); /*proto*/
static PyObject *__pyx_f_8pydecode_5hyper__CountingW_from_cpp(int); /*proto*/
static std::pair<int,int> __pyx_convert_pair_from_py_int____int(PyObject *); /*proto*/
static std::vector<std::pair<int,int> > __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(PyObject *); /*proto*/
static PyObject *__pyx_convert_pair_to_py_int____int(const std::pair<int,int> &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_(const std::vector<std::pair<int,int> > &); /*proto*/
#define __Pyx_MODULE_NAME "pydecode.hyper"
int __pyx_module_is_main_pydecode__hyper = 0;

/* Implementation of 'pydecode.hyper' */
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_range;
static int __pyx_pf_8pydecode_5hyper_6Bitset___setitem__(struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_self, int __pyx_v_position, bool __pyx_v_val); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6Bitset_2__getitem__(struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_self, int __pyx_v_position); /* proto */
static void __pyx_pf_8pydecode_5hyper_17ViterbiPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_4times(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_8project(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_12show(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_14build(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_9_ViterbiW_one(); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_9_ViterbiW_2zero(); /* proto */
static int __pyx_pf_8pydecode_5hyper_12ViterbiChart___init__(struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12ViterbiChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node); /* proto */
static void __pyx_pf_8pydecode_5hyper_12ViterbiChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_17_ViterbiMarginals___init__(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *__pyx_v_self); /* proto */
static void __pyx_pf_8pydecode_5hyper_17_ViterbiMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17_ViterbiMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17_ViterbiMarginals_6threshold(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *__pyx_v_self, double __pyx_v_semi); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_4viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_6count_constrained_viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials, int __pyx_v_limit); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_10prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold); /* proto */
static void __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_4times(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_8project(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_12show(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_14build(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12_LogViterbiW_one(); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12_LogViterbiW_2zero(); /* proto */
static int __pyx_pf_8pydecode_5hyper_15LogViterbiChart___init__(struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_15LogViterbiChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node); /* proto */
static void __pyx_pf_8pydecode_5hyper_15LogViterbiChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals___init__(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *__pyx_v_self); /* proto */
static void __pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals_6threshold(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *__pyx_v_self, double __pyx_v_semi); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_4viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_6count_constrained_viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials, int __pyx_v_limit); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_10prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold); /* proto */
static void __pyx_pf_8pydecode_5hyper_16InsidePotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_16InsidePotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_4times(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_6clone(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_8project(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_12show(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_14build(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_24dot(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_8_InsideW_one(); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_8_InsideW_2zero(); /* proto */
static int __pyx_pf_8pydecode_5hyper_11InsideChart___init__(struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_11InsideChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node); /* proto */
static void __pyx_pf_8pydecode_5hyper_11InsideChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_16_InsideMarginals___init__(struct __pyx_obj_8pydecode_5hyper__InsideMarginals *__pyx_v_self); /* proto */
static void __pyx_pf_8pydecode_5hyper_16_InsideMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__InsideMarginals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16_InsideMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__InsideMarginals *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16_InsideMarginals_6threshold(struct __pyx_obj_8pydecode_5hyper__InsideMarginals *__pyx_v_self, double __pyx_v_semi); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_4viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_6count_constrained_viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials, int __pyx_v_limit); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_10prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold); /* proto */
static void __pyx_pf_8pydecode_5hyper_14BoolPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_14BoolPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_4times(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_8project(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_12show(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_14build(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6_BoolW_one(); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6_BoolW_2zero(); /* proto */
static int __pyx_pf_8pydecode_5hyper_9BoolChart___init__(struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_9BoolChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node); /* proto */
static void __pyx_pf_8pydecode_5hyper_9BoolChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_14_BoolMarginals___init__(struct __pyx_obj_8pydecode_5hyper__BoolMarginals *__pyx_v_self); /* proto */
static void __pyx_pf_8pydecode_5hyper_14_BoolMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__BoolMarginals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14_BoolMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__BoolMarginals *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14_BoolMarginals_6threshold(struct __pyx_obj_8pydecode_5hyper__BoolMarginals *__pyx_v_self, bool __pyx_v_semi); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_4viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_6count_constrained_viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials, int __pyx_v_limit); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_10prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold); /* proto */
static void __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_4times(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_8project(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_12show(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_14build(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14_SparseVectorW_one(); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14_SparseVectorW_2zero(); /* proto */
static int __pyx_pf_8pydecode_5hyper_17SparseVectorChart___init__(struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17SparseVectorChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node); /* proto */
static void __pyx_pf_8pydecode_5hyper_17SparseVectorChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_22_SparseVectorMarginals___init__(struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *__pyx_v_self); /* proto */
static void __pyx_pf_8pydecode_5hyper_22_SparseVectorMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22_SparseVectorMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12SparseVector_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12SparseVector_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12SparseVector_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12SparseVector_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold); /* proto */
static void __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_4times(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_8project(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_12show(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_14build(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17_MinSparseVectorW_one(); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17_MinSparseVectorW_2zero(); /* proto */
static int __pyx_pf_8pydecode_5hyper_20MinSparseVectorChart___init__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20MinSparseVectorChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node); /* proto */
static void __pyx_pf_8pydecode_5hyper_20MinSparseVectorChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_25_MinSparseVectorMarginals___init__(struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *__pyx_v_self); /* proto */
static void __pyx_pf_8pydecode_5hyper_25_MinSparseVectorMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25_MinSparseVectorMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_15MinSparseVector_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_15MinSparseVector_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_15MinSparseVector_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_15MinSparseVector_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold); /* proto */
static void __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_4times(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_8project(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_12show(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_14build(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17_MaxSparseVectorW_one(); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17_MaxSparseVectorW_2zero(); /* proto */
static int __pyx_pf_8pydecode_5hyper_20MaxSparseVectorChart___init__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_20MaxSparseVectorChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node); /* proto */
static void __pyx_pf_8pydecode_5hyper_20MaxSparseVectorChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_25_MaxSparseVectorMarginals___init__(struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *__pyx_v_self); /* proto */
static void __pyx_pf_8pydecode_5hyper_25_MaxSparseVectorMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_25_MaxSparseVectorMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_15MaxSparseVector_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_15MaxSparseVector_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_15MaxSparseVector_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_15MaxSparseVector_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold); /* proto */
static void __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_4times(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_8project(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_12show(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_14build(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14_BinaryVectorW_one(); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14_BinaryVectorW_2zero(); /* proto */
static int __pyx_pf_8pydecode_5hyper_17BinaryVectorChart___init__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_17BinaryVectorChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node); /* proto */
static void __pyx_pf_8pydecode_5hyper_17BinaryVectorChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_22_BinaryVectorMarginals___init__(struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *__pyx_v_self); /* proto */
static void __pyx_pf_8pydecode_5hyper_22_BinaryVectorMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_22_BinaryVectorMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12BinaryVector_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12BinaryVector_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12BinaryVector_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12BinaryVector_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold); /* proto */
static void __pyx_pf_8pydecode_5hyper_18CountingPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_18CountingPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_4times(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_8project(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_12show(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_14build(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10_CountingW_one(); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10_CountingW_2zero(); /* proto */
static int __pyx_pf_8pydecode_5hyper_13CountingChart___init__(struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_13CountingChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node); /* proto */
static void __pyx_pf_8pydecode_5hyper_13CountingChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_self); /* proto */
static int __pyx_pf_8pydecode_5hyper_18_CountingMarginals___init__(struct __pyx_obj_8pydecode_5hyper__CountingMarginals *__pyx_v_self); /* proto */
static void __pyx_pf_8pydecode_5hyper_18_CountingMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__CountingMarginals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_18_CountingMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__CountingMarginals *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_8Counting_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_8Counting_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_8Counting_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_8Counting_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials, PyObject *__pyx_v_inside_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_4best_path(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials, PyObject *__pyx_v_chart); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials, PyObject *__pyx_v_thres); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10pairwise_dot(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_vec, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_weights); /* proto */
static int __pyx_pf_8pydecode_5hyper_10Projection___cinit__(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_2compose(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_other, bool __pyx_v_reverse); /* proto */
static void __pyx_pf_8pydecode_5hyper_10Projection_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_6__getitem__(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_8project(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_10small_hypergraph(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_12big_hypergraph(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_12make_pruning_projections(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_filt); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_14valid_binary_vectors(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_lhs, struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_rhs); /* proto */
static PyObject *__pyx_pf_8pydecode_5hyper_16extend_hypergraph_by_count(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials, int __pyx_v_lower_limit, int __pyx_v_upper_limit, int __pyx_v_goal); /* proto */
static PyObject *__pyx_tp_new_8pydecode_5hyper_Bitset(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__SparseVectorW(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_BinaryVectorPotentials(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__BinaryVectorW(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__CountingMarginals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_MaxSparseVectorChart(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__ViterbiMarginals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_ViterbiChart(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_MaxSparseVectorPotentials(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_LogViterbiPotentials(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_ViterbiPotentials(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_BoolChart(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_CountingChart(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__MaxSparseVectorW(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__InsideW(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_InsideChart(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__SparseVectorMarginals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_BoolPotentials(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__MinSparseVectorW(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__LogViterbiMarginals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__InsideMarginals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_MinSparseVectorChart(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_MinSparseVectorPotentials(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__MaxSparseVectorMarginals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__ViterbiW(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_InsidePotentials(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__LogViterbiW(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_BinaryVectorChart(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_CountingPotentials(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_SparseVectorPotentials(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__MinSparseVectorMarginals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__CountingW(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__BinaryVectorMarginals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__BoolW(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_LogViterbiChart(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_Projection(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper__BoolMarginals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_8pydecode_5hyper_SparseVectorChart(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_1[] = "\n";
static char __pyx_k_2[] = "%20s : %s";
static char __pyx_k_3[] = "HypergraphAccessException";
static char __pyx_k_4[] = "Only nodes and edges have Viterbi marginal values.";
static char __pyx_k_5[] = "Passed %s.";
static char __pyx_k_6[] = "make_pruning_projections";
static char __pyx_k_7[] = "Only nodes and edges have LogViterbi marginal values.";
static char __pyx_k_8[] = "Only nodes and edges have Inside marginal values.";
static char __pyx_k_9[] = "Only nodes and edges have Bool marginal values.";
static char __pyx_k_10[] = "Only nodes and edges have SparseVector marginal values.";
static char __pyx_k_11[] = "Only nodes and edges have MinSparseVector marginal values.";
static char __pyx_k_12[] = "Only nodes and edges have MaxSparseVector marginal values.";
static char __pyx_k_13[] = "Only nodes and edges have BinaryVector marginal values.";
static char __pyx_k_14[] = "Only nodes and edges have Counting marginal values.";
static char __pyx_k_16[] = "/home/srush/Projects/decoding/python/pydecode/hyper.pyx";
static char __pyx_k_17[] = "pydecode.hyper";
static char __pyx_k_21[] = "Viterbi.inside";
static char __pyx_k_24[] = "Viterbi.outside";
static char __pyx_k_28[] = "Viterbi.viterbi";
static char __pyx_k_31[] = "count_constrained_viterbi";
static char __pyx_k_32[] = "Viterbi.count_constrained_viterbi";
static char __pyx_k_35[] = "Viterbi.compute_marginals";
static char __pyx_k_38[] = "Viterbi.prune_hypergraph";
static char __pyx_k_43[] = "LogViterbi.inside";
static char __pyx_k_46[] = "LogViterbi.outside";
static char __pyx_k_50[] = "LogViterbi.viterbi";
static char __pyx_k_53[] = "LogViterbi.count_constrained_viterbi";
static char __pyx_k_56[] = "LogViterbi.compute_marginals";
static char __pyx_k_59[] = "LogViterbi.prune_hypergraph";
static char __pyx_k_64[] = "Inside.inside";
static char __pyx_k_67[] = "Inside.outside";
static char __pyx_k_71[] = "Inside.viterbi";
static char __pyx_k_74[] = "Inside.count_constrained_viterbi";
static char __pyx_k_77[] = "Inside.compute_marginals";
static char __pyx_k_80[] = "Inside.prune_hypergraph";
static char __pyx_k_85[] = "Bool.inside";
static char __pyx_k_88[] = "Bool.outside";
static char __pyx_k_92[] = "Bool.viterbi";
static char __pyx_k_95[] = "Bool.count_constrained_viterbi";
static char __pyx_k_98[] = "Bool.compute_marginals";
static char __pyx_k__i[] = "i";
static char __pyx_k_101[] = "Bool.prune_hypergraph";
static char __pyx_k_106[] = "SparseVector.inside";
static char __pyx_k_109[] = "SparseVector.outside";
static char __pyx_k_112[] = "SparseVector.compute_marginals";
static char __pyx_k_115[] = "SparseVector.prune_hypergraph";
static char __pyx_k_120[] = "MinSparseVector.inside";
static char __pyx_k_123[] = "MinSparseVector.outside";
static char __pyx_k_126[] = "MinSparseVector.compute_marginals";
static char __pyx_k_129[] = "MinSparseVector.prune_hypergraph";
static char __pyx_k_134[] = "MaxSparseVector.inside";
static char __pyx_k_137[] = "MaxSparseVector.outside";
static char __pyx_k_140[] = "MaxSparseVector.compute_marginals";
static char __pyx_k_143[] = "MaxSparseVector.prune_hypergraph";
static char __pyx_k_148[] = "BinaryVector.inside";
static char __pyx_k_151[] = "BinaryVector.outside";
static char __pyx_k_154[] = "BinaryVector.compute_marginals";
static char __pyx_k_157[] = "BinaryVector.prune_hypergraph";
static char __pyx_k_162[] = "Counting.inside";
static char __pyx_k_165[] = "Counting.outside";
static char __pyx_k_168[] = "Counting.compute_marginals";
static char __pyx_k_171[] = "Counting.prune_hypergraph";
static char __pyx_k_182[] = "\n    Chart :math:`S^{|{\\cal V}|}` associated with a hypergraph (V, E) and semiring S.\n\n    Acts as a vector::\n       >> print chart[node]\n    ";
static char __pyx_k_183[] = "\n    Marginal values :math:`S^{|{\\cal E} \\times {\\cal V}|}` associated with a hypergraph ({\\cal V}, {\\cal E}) and semiring S.\n\n    Acts as a dictionary::\n       >> print marginals[edge]\n       >> print marginals[node]\n    ";
static char __pyx_k_190[] = "valid_binary_vectors";
static char __pyx_k_193[] = "extend_hypergraph_by_count";
static char __pyx_k__fn[] = "fn";
static char __pyx_k__id[] = "id";
static char __pyx_k__lhs[] = "lhs";
static char __pyx_k__one[] = "one";
static char __pyx_k__rhs[] = "rhs";
static char __pyx_k__vec[] = "vec";
static char __pyx_k__Bool[] = "Bool";
static char __pyx_k__bias[] = "bias";
static char __pyx_k__filt[] = "filt";
static char __pyx_k__goal[] = "goal";
static char __pyx_k__join[] = "join";
static char __pyx_k__kind[] = "kind";
static char __pyx_k__path[] = "path";
static char __pyx_k__rvec[] = "rvec";
static char __pyx_k__zero[] = "zero";
static char __pyx_k__Chart[] = "Chart";
static char __pyx_k__chart[] = "chart";
static char __pyx_k__edges[] = "edges";
static char __pyx_k__graph[] = "graph";
static char __pyx_k__label[] = "label";
static char __pyx_k__limit[] = "limit";
static char __pyx_k__nodes[] = "nodes";
static char __pyx_k__other[] = "other";
static char __pyx_k__range[] = "range";
static char __pyx_k__thres[] = "thres";
static char __pyx_k__Inside[] = "Inside";
static char __pyx_k__in_map[] = "in_map";
static char __pyx_k__in_vec[] = "in_vec";
static char __pyx_k__inside[] = "inside";
static char __pyx_k__Viterbi[] = "Viterbi";
static char __pyx_k__outside[] = "outside";
static char __pyx_k__reverse[] = "reverse";
static char __pyx_k__viterbi[] = "viterbi";
static char __pyx_k__weights[] = "weights";
static char __pyx_k__Counting[] = "Counting";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__Marginals[] = "Marginals";
static char __pyx_k____class__[] = "__class__";
static char __pyx_k__best_path[] = "best_path";
static char __pyx_k__enumerate[] = "enumerate";
static char __pyx_k__iteritems[] = "iteritems";
static char __pyx_k__marginals[] = "marginals";
static char __pyx_k__out_chart[] = "out_chart";
static char __pyx_k__threshold[] = "threshold";
static char __pyx_k__LogViterbi[] = "LogViterbi";
static char __pyx_k__Potentials[] = "Potentials";
static char __pyx_k____import__[] = "__import__";
static char __pyx_k____module__[] = "__module__";
static char __pyx_k__hypergraph[] = "hypergraph";
static char __pyx_k__potentials[] = "potentials";
static char __pyx_k__projection[] = "projection";
static char __pyx_k__used_chart[] = "used_chart";
static char __pyx_k__lower_limit[] = "lower_limit";
static char __pyx_k__upper_limit[] = "upper_limit";
static char __pyx_k__BinaryVector[] = "BinaryVector";
static char __pyx_k__SparseVector[] = "SparseVector";
static char __pyx_k____qualname__[] = "__qualname__";
static char __pyx_k__inside_chart[] = "inside_chart";
static char __pyx_k__pairwise_dot[] = "pairwise_dot";
static char __pyx_k__staticmethod[] = "staticmethod";
static char __pyx_k____metaclass__[] = "__metaclass__";
static char __pyx_k__inside_values[] = "inside_values";
static char __pyx_k__py_hypergraph[] = "py_hypergraph";
static char __pyx_k____pyx_vtable__[] = "__pyx_vtable__";
static char __pyx_k__big_hypergraph[] = "big_hypergraph";
static char __pyx_k__outside_values[] = "outside_values";
static char __pyx_k__MaxSparseVector[] = "MaxSparseVector";
static char __pyx_k__MinSparseVector[] = "MinSparseVector";
static char __pyx_k__bool_potentials[] = "bool_potentials";
static char __pyx_k__count_potentials[] = "count_potentials";
static char __pyx_k__prune_hypergraph[] = "prune_hypergraph";
static char __pyx_k__small_hypergraph[] = "small_hypergraph";
static char __pyx_k__compute_marginals[] = "compute_marginals";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_kp_s_10;
static PyObject *__pyx_n_s_101;
static PyObject *__pyx_n_s_106;
static PyObject *__pyx_n_s_109;
static PyObject *__pyx_kp_s_11;
static PyObject *__pyx_n_s_112;
static PyObject *__pyx_n_s_115;
static PyObject *__pyx_kp_s_12;
static PyObject *__pyx_n_s_120;
static PyObject *__pyx_n_s_123;
static PyObject *__pyx_n_s_126;
static PyObject *__pyx_n_s_129;
static PyObject *__pyx_kp_s_13;
static PyObject *__pyx_n_s_134;
static PyObject *__pyx_n_s_137;
static PyObject *__pyx_kp_s_14;
static PyObject *__pyx_n_s_140;
static PyObject *__pyx_n_s_143;
static PyObject *__pyx_n_s_148;
static PyObject *__pyx_n_s_151;
static PyObject *__pyx_n_s_154;
static PyObject *__pyx_n_s_157;
static PyObject *__pyx_kp_s_16;
static PyObject *__pyx_n_s_162;
static PyObject *__pyx_n_s_165;
static PyObject *__pyx_n_s_168;
static PyObject *__pyx_n_s_17;
static PyObject *__pyx_n_s_171;
static PyObject *__pyx_kp_s_182;
static PyObject *__pyx_kp_s_183;
static PyObject *__pyx_n_s_190;
static PyObject *__pyx_n_s_193;
static PyObject *__pyx_kp_s_2;
static PyObject *__pyx_n_s_21;
static PyObject *__pyx_n_s_24;
static PyObject *__pyx_n_s_28;
static PyObject *__pyx_n_s_3;
static PyObject *__pyx_n_s_31;
static PyObject *__pyx_n_s_32;
static PyObject *__pyx_n_s_35;
static PyObject *__pyx_n_s_38;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_n_s_43;
static PyObject *__pyx_n_s_46;
static PyObject *__pyx_kp_s_5;
static PyObject *__pyx_n_s_50;
static PyObject *__pyx_n_s_53;
static PyObject *__pyx_n_s_56;
static PyObject *__pyx_n_s_59;
static PyObject *__pyx_n_s_6;
static PyObject *__pyx_n_s_64;
static PyObject *__pyx_n_s_67;
static PyObject *__pyx_kp_s_7;
static PyObject *__pyx_n_s_71;
static PyObject *__pyx_n_s_74;
static PyObject *__pyx_n_s_77;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_n_s_80;
static PyObject *__pyx_n_s_85;
static PyObject *__pyx_n_s_88;
static PyObject *__pyx_kp_s_9;
static PyObject *__pyx_n_s_92;
static PyObject *__pyx_n_s_95;
static PyObject *__pyx_n_s_98;
static PyObject *__pyx_n_s__BinaryVector;
static PyObject *__pyx_n_s__Bool;
static PyObject *__pyx_n_s__Chart;
static PyObject *__pyx_n_s__Counting;
static PyObject *__pyx_n_s__Inside;
static PyObject *__pyx_n_s__LogViterbi;
static PyObject *__pyx_n_s__Marginals;
static PyObject *__pyx_n_s__MaxSparseVector;
static PyObject *__pyx_n_s__MinSparseVector;
static PyObject *__pyx_n_s__Potentials;
static PyObject *__pyx_n_s__SparseVector;
static PyObject *__pyx_n_s__Viterbi;
static PyObject *__pyx_n_s____class__;
static PyObject *__pyx_n_s____import__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____metaclass__;
static PyObject *__pyx_n_s____module__;
static PyObject *__pyx_n_s____pyx_vtable__;
static PyObject *__pyx_n_s____qualname__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s__best_path;
static PyObject *__pyx_n_s__bias;
static PyObject *__pyx_n_s__big_hypergraph;
static PyObject *__pyx_n_s__bool_potentials;
static PyObject *__pyx_n_s__chart;
static PyObject *__pyx_n_s__compute_marginals;
static PyObject *__pyx_n_s__count_potentials;
static PyObject *__pyx_n_s__edges;
static PyObject *__pyx_n_s__enumerate;
static PyObject *__pyx_n_s__filt;
static PyObject *__pyx_n_s__fn;
static PyObject *__pyx_n_s__goal;
static PyObject *__pyx_n_s__graph;
static PyObject *__pyx_n_s__hypergraph;
static PyObject *__pyx_n_s__i;
static PyObject *__pyx_n_s__id;
static PyObject *__pyx_n_s__in_map;
static PyObject *__pyx_n_s__in_vec;
static PyObject *__pyx_n_s__inside;
static PyObject *__pyx_n_s__inside_chart;
static PyObject *__pyx_n_s__inside_values;
static PyObject *__pyx_n_s__iteritems;
static PyObject *__pyx_n_s__join;
static PyObject *__pyx_n_s__kind;
static PyObject *__pyx_n_s__label;
static PyObject *__pyx_n_s__lhs;
static PyObject *__pyx_n_s__limit;
static PyObject *__pyx_n_s__lower_limit;
static PyObject *__pyx_n_s__marginals;
static PyObject *__pyx_n_s__nodes;
static PyObject *__pyx_n_s__one;
static PyObject *__pyx_n_s__other;
static PyObject *__pyx_n_s__out_chart;
static PyObject *__pyx_n_s__outside;
static PyObject *__pyx_n_s__outside_values;
static PyObject *__pyx_n_s__pairwise_dot;
static PyObject *__pyx_n_s__path;
static PyObject *__pyx_n_s__potentials;
static PyObject *__pyx_n_s__projection;
static PyObject *__pyx_n_s__prune_hypergraph;
static PyObject *__pyx_n_s__py_hypergraph;
static PyObject *__pyx_n_s__range;
static PyObject *__pyx_n_s__reverse;
static PyObject *__pyx_n_s__rhs;
static PyObject *__pyx_n_s__rvec;
static PyObject *__pyx_n_s__small_hypergraph;
static PyObject *__pyx_n_s__staticmethod;
static PyObject *__pyx_n_s__thres;
static PyObject *__pyx_n_s__threshold;
static PyObject *__pyx_n_s__upper_limit;
static PyObject *__pyx_n_s__used_chart;
static PyObject *__pyx_n_s__vec;
static PyObject *__pyx_n_s__viterbi;
static PyObject *__pyx_n_s__weights;
static PyObject *__pyx_n_s__zero;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_k_tuple_19;
static PyObject *__pyx_k_tuple_22;
static PyObject *__pyx_k_tuple_25;
static PyObject *__pyx_k_tuple_27;
static PyObject *__pyx_k_tuple_29;
static PyObject *__pyx_k_tuple_33;
static PyObject *__pyx_k_tuple_36;
static PyObject *__pyx_k_tuple_41;
static PyObject *__pyx_k_tuple_44;
static PyObject *__pyx_k_tuple_47;
static PyObject *__pyx_k_tuple_49;
static PyObject *__pyx_k_tuple_51;
static PyObject *__pyx_k_tuple_54;
static PyObject *__pyx_k_tuple_57;
static PyObject *__pyx_k_tuple_62;
static PyObject *__pyx_k_tuple_65;
static PyObject *__pyx_k_tuple_68;
static PyObject *__pyx_k_tuple_70;
static PyObject *__pyx_k_tuple_72;
static PyObject *__pyx_k_tuple_75;
static PyObject *__pyx_k_tuple_78;
static PyObject *__pyx_k_tuple_83;
static PyObject *__pyx_k_tuple_86;
static PyObject *__pyx_k_tuple_89;
static PyObject *__pyx_k_tuple_91;
static PyObject *__pyx_k_tuple_93;
static PyObject *__pyx_k_tuple_96;
static PyObject *__pyx_k_tuple_99;
static PyObject *__pyx_k_tuple_104;
static PyObject *__pyx_k_tuple_107;
static PyObject *__pyx_k_tuple_110;
static PyObject *__pyx_k_tuple_113;
static PyObject *__pyx_k_tuple_118;
static PyObject *__pyx_k_tuple_121;
static PyObject *__pyx_k_tuple_124;
static PyObject *__pyx_k_tuple_127;
static PyObject *__pyx_k_tuple_132;
static PyObject *__pyx_k_tuple_135;
static PyObject *__pyx_k_tuple_138;
static PyObject *__pyx_k_tuple_141;
static PyObject *__pyx_k_tuple_146;
static PyObject *__pyx_k_tuple_149;
static PyObject *__pyx_k_tuple_152;
static PyObject *__pyx_k_tuple_155;
static PyObject *__pyx_k_tuple_160;
static PyObject *__pyx_k_tuple_163;
static PyObject *__pyx_k_tuple_166;
static PyObject *__pyx_k_tuple_169;
static PyObject *__pyx_k_tuple_172;
static PyObject *__pyx_k_tuple_174;
static PyObject *__pyx_k_tuple_176;
static PyObject *__pyx_k_tuple_178;
static PyObject *__pyx_k_tuple_180;
static PyObject *__pyx_k_tuple_184;
static PyObject *__pyx_k_tuple_186;
static PyObject *__pyx_k_tuple_188;
static PyObject *__pyx_k_tuple_191;
static PyObject *__pyx_k_codeobj_15;
static PyObject *__pyx_k_codeobj_18;
static PyObject *__pyx_k_codeobj_20;
static PyObject *__pyx_k_codeobj_23;
static PyObject *__pyx_k_codeobj_26;
static PyObject *__pyx_k_codeobj_30;
static PyObject *__pyx_k_codeobj_34;
static PyObject *__pyx_k_codeobj_37;
static PyObject *__pyx_k_codeobj_39;
static PyObject *__pyx_k_codeobj_40;
static PyObject *__pyx_k_codeobj_42;
static PyObject *__pyx_k_codeobj_45;
static PyObject *__pyx_k_codeobj_48;
static PyObject *__pyx_k_codeobj_52;
static PyObject *__pyx_k_codeobj_55;
static PyObject *__pyx_k_codeobj_58;
static PyObject *__pyx_k_codeobj_60;
static PyObject *__pyx_k_codeobj_61;
static PyObject *__pyx_k_codeobj_63;
static PyObject *__pyx_k_codeobj_66;
static PyObject *__pyx_k_codeobj_69;
static PyObject *__pyx_k_codeobj_73;
static PyObject *__pyx_k_codeobj_76;
static PyObject *__pyx_k_codeobj_79;
static PyObject *__pyx_k_codeobj_81;
static PyObject *__pyx_k_codeobj_82;
static PyObject *__pyx_k_codeobj_84;
static PyObject *__pyx_k_codeobj_87;
static PyObject *__pyx_k_codeobj_90;
static PyObject *__pyx_k_codeobj_94;
static PyObject *__pyx_k_codeobj_97;
static PyObject *__pyx_k_codeobj_100;
static PyObject *__pyx_k_codeobj_102;
static PyObject *__pyx_k_codeobj_103;
static PyObject *__pyx_k_codeobj_105;
static PyObject *__pyx_k_codeobj_108;
static PyObject *__pyx_k_codeobj_111;
static PyObject *__pyx_k_codeobj_114;
static PyObject *__pyx_k_codeobj_116;
static PyObject *__pyx_k_codeobj_117;
static PyObject *__pyx_k_codeobj_119;
static PyObject *__pyx_k_codeobj_122;
static PyObject *__pyx_k_codeobj_125;
static PyObject *__pyx_k_codeobj_128;
static PyObject *__pyx_k_codeobj_130;
static PyObject *__pyx_k_codeobj_131;
static PyObject *__pyx_k_codeobj_133;
static PyObject *__pyx_k_codeobj_136;
static PyObject *__pyx_k_codeobj_139;
static PyObject *__pyx_k_codeobj_142;
static PyObject *__pyx_k_codeobj_144;
static PyObject *__pyx_k_codeobj_145;
static PyObject *__pyx_k_codeobj_147;
static PyObject *__pyx_k_codeobj_150;
static PyObject *__pyx_k_codeobj_153;
static PyObject *__pyx_k_codeobj_156;
static PyObject *__pyx_k_codeobj_158;
static PyObject *__pyx_k_codeobj_159;
static PyObject *__pyx_k_codeobj_161;
static PyObject *__pyx_k_codeobj_164;
static PyObject *__pyx_k_codeobj_167;
static PyObject *__pyx_k_codeobj_170;
static PyObject *__pyx_k_codeobj_173;
static PyObject *__pyx_k_codeobj_175;
static PyObject *__pyx_k_codeobj_177;
static PyObject *__pyx_k_codeobj_179;
static PyObject *__pyx_k_codeobj_181;
static PyObject *__pyx_k_codeobj_185;
static PyObject *__pyx_k_codeobj_187;
static PyObject *__pyx_k_codeobj_189;
static PyObject *__pyx_k_codeobj_192;

/* "pydecode/hyper.pyx":16
 * 
 * cdef class Bitset:
 *     cdef init(self, cbitset data):             # <<<<<<<<<<<<<<
 *         self.data = data
 *         return self
 */

static PyObject *__pyx_f_8pydecode_5hyper_6Bitset_init(struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_self, bitset<500> __pyx_v_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":17
 * cdef class Bitset:
 *     cdef init(self, cbitset data):
 *         self.data = data             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_v_self->data = __pyx_v_data;

  /* "pydecode/hyper.pyx":18
 *     cdef init(self, cbitset data):
 *         self.data = data
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, int position, bool val):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_6Bitset_1__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_position, PyObject *__pyx_arg_val); /*proto*/
static int __pyx_pw_8pydecode_5hyper_6Bitset_1__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_position, PyObject *__pyx_arg_val) {
  int __pyx_v_position;
  bool __pyx_v_val;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  assert(__pyx_arg_position); {
    __pyx_v_position = __Pyx_PyInt_AsInt(__pyx_arg_position); if (unlikely((__pyx_v_position == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  assert(__pyx_arg_val); {
    __pyx_v_val = __Pyx_PyObject_IsTrue(__pyx_arg_val); if (unlikely((__pyx_v_val == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Bitset.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_6Bitset___setitem__(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_v_self), ((int)__pyx_v_position), ((bool)__pyx_v_val));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":20
 *         return self
 * 
 *     def __setitem__(self, int position, bool val):             # <<<<<<<<<<<<<<
 *         self.data.set(position, val)
 * 
 */

static int __pyx_pf_8pydecode_5hyper_6Bitset___setitem__(struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_self, int __pyx_v_position, bool __pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "pydecode/hyper.pyx":21
 * 
 *     def __setitem__(self, int position, bool val):
 *         self.data.set(position, val)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, int position):
 */
  __pyx_v_self->data.set(__pyx_v_position, __pyx_v_val);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_6Bitset_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_position); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_6Bitset_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_position) {
  int __pyx_v_position;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  assert(__pyx_arg_position); {
    __pyx_v_position = __Pyx_PyInt_AsInt(__pyx_arg_position); if (unlikely((__pyx_v_position == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Bitset.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_6Bitset_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_v_self), ((int)__pyx_v_position));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":23
 *         self.data.set(position, val)
 * 
 *     def __getitem__(self, int position):             # <<<<<<<<<<<<<<
 *         return self.data[position]
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6Bitset_2__getitem__(struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_self, int __pyx_v_position) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":24
 * 
 *     def __getitem__(self, int position):
 *         return self.data[position]             # <<<<<<<<<<<<<<
 * 
 * ############# This is the templated semiring part. ##############
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->data[__pyx_v_position])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Bitset.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_17ViterbiPotentials_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_17ViterbiPotentials_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_17ViterbiPotentials___dealloc__(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":38
 *     """
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = NULL
 */

static void __pyx_pf_8pydecode_5hyper_17ViterbiPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":39
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "pydecode/hyper.pyx":40
 *     def __dealloc__(self):
 *         del self.thisptr
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_17ViterbiPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_17ViterbiPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_2__cinit__(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":43
 * 
 * 
 *     def __cinit__(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         """
 *         Build the potential vector for a hypergraph.
 */

static int __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":49
 *         :param hypergraph: The underlying hypergraph.
 *         """
 *         self.hypergraph = graph             # <<<<<<<<<<<<<<
 *         self.kind = Viterbi
 *         self.thisptr = NULL
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->hypergraph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_v_self->hypergraph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":50
 *         """
 *         self.hypergraph = graph
 *         self.kind = Viterbi             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__Viterbi); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":51
 *         self.hypergraph = graph
 *         self.kind = Viterbi
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def times(self, ViterbiPotentials other):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_4times[] = "ViterbiPotentials.times(self, ViterbiPotentials other)";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("times (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_ViterbiPotentials, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_4times(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":53
 *         self.thisptr = NULL
 * 
 *     def times(self, ViterbiPotentials other):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphViterbiPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_4times(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_other) {
  HypergraphPotentials<ViterbiPotential> *__pyx_v_new_potentials;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("times", 0);

  /* "pydecode/hyper.pyx":55
 *     def times(self, ViterbiPotentials other):
 *         cdef CHypergraphViterbiPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))             # <<<<<<<<<<<<<<
 *         return ViterbiPotentials(self.hypergraph).init(new_potentials, None)
 * 
 */
  __pyx_v_new_potentials = __pyx_v_self->thisptr->times((*__pyx_v_other->thisptr));

  /* "pydecode/hyper.pyx":56
 *         cdef CHypergraphViterbiPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 *         return ViterbiPotentials(self.hypergraph).init(new_potentials, None)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_ViterbiPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_ViterbiPotentials *)((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_t_2), __pyx_v_new_potentials, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_6clone[] = "ViterbiPotentials.clone(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_6clone(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":58
 *         return ViterbiPotentials(self.hypergraph).init(new_potentials, None)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         return ViterbiPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pydecode/hyper.pyx":59
 * 
 *     def clone(self):
 *         return ViterbiPotentials(self.hypergraph).init(self.thisptr.clone(), None)             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_ViterbiPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_ViterbiPotentials *)((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_t_2), __pyx_v_self->thisptr->clone(), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_8project[] = "ViterbiPotentials.project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_8project(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":61
 *         return ViterbiPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 *     def project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphViterbiPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_8project(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<ViterbiPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":63
 *     def project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphViterbiPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))             # <<<<<<<<<<<<<<
 *         return ViterbiPotentials(graph).init(ptr, None)
 * 
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->project_potentials((*__pyx_v_projection->thisptr));

  /* "pydecode/hyper.pyx":64
 *         cdef CHypergraphViterbiPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 *         return ViterbiPotentials(graph).init(ptr, None)             # <<<<<<<<<<<<<<
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_ViterbiPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_ViterbiPotentials *)((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_t_2), __pyx_v_ptr, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_10up_project[] = "ViterbiPotentials.up_project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("up_project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "up_project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_10up_project(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":66
 *         return ViterbiPotentials(graph).init(ptr, None)
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphViterbiPotentials *ptr = \
 *             cmake_projected_potentials_Viterbi(self.thisptr, projection.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<ViterbiPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  HypergraphPotentials<ViterbiPotential> *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("up_project", 0);

  /* "pydecode/hyper.pyx":68
 *     def up_project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphViterbiPotentials *ptr = \
 *             cmake_projected_potentials_Viterbi(self.thisptr, projection.thisptr)             # <<<<<<<<<<<<<<
 *         return ViterbiPotentials(graph).init(ptr, projection)
 * 
 */
  try {
    __pyx_t_1 = HypergraphProjectedPotentials<ViterbiPotential>::make_potentials(__pyx_v_self->thisptr, __pyx_v_projection->thisptr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_ptr = __pyx_t_1;

  /* "pydecode/hyper.pyx":69
 *         cdef CHypergraphViterbiPotentials *ptr = \
 *             cmake_projected_potentials_Viterbi(self.thisptr, projection.thisptr)
 *         return ViterbiPotentials(graph).init(ptr, projection)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, Hypergraph graph):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_ViterbiPotentials)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_ViterbiPotentials *)((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_t_3)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_t_3), __pyx_v_ptr, __pyx_v_projection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_12show[] = "ViterbiPotentials.show(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_12show(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":71
 *         return ViterbiPotentials(graph).init(ptr, projection)
 * 
 *     def show(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_12show(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "pydecode/hyper.pyx":72
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__join); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pydecode/hyper.pyx":73
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":72
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__label); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_edge);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_edge);
    __Pyx_GIVEREF(__pyx_v_edge);
    __pyx_t_8 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_edge); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_8 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_4kind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_4kind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_4kind___get__(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":77
 * 
 *     property kind:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.kind
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":78
 *     property kind:
 *         def __get__(self):
 *             return self.kind             # <<<<<<<<<<<<<<
 * 
 *     property bias:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kind);
  __pyx_r = __pyx_v_self->kind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_4bias_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_4bias_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_4bias___get__(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":81
 * 
 *     property bias:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return _ViterbiW_from_cpp(self.thisptr.bias())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":82
 *     property bias:
 *         def __get__(self):
 *             return _ViterbiW_from_cpp(self.thisptr.bias())             # <<<<<<<<<<<<<<
 * 
 *     def build(self, fn, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(__pyx_v_self->thisptr->bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.bias.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_14build[] = "ViterbiPotentials.build(self, fn, bias=None)\n\n        build(fn)\n\n        Build the potential vector for a hypergraph.\n\n        :param fn: A function from edge labels to potentials.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fn = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":84
 *             return _ViterbiW_from_cpp(self.thisptr.bias())
 * 
 *     def build(self, fn, bias=None):             # <<<<<<<<<<<<<<
 *         """
 *         build(fn)
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fn = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("build", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_14build(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), __pyx_v_fn, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_14build(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias) {
  double __pyx_v_my_bias;
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ty = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  std::vector<double> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  size_t __pyx_t_11;
  HypergraphPotentials<ViterbiPotential> *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build", 0);

  /* "pydecode/hyper.pyx":93
 *         """
 *         cdef double my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Viterbi_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":94
 *         cdef double my_bias
 *         if bias is None:
 *             my_bias = Viterbi_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _ViterbiW_to_cpp(bias)
 */
    __pyx_v_my_bias = ViterbiPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":96
 *             my_bias = Viterbi_one()
 *         else:
 *             my_bias = _ViterbiW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[double] potentials = \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_bias); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":100
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size(),
 *              Viterbi_zero())             # <<<<<<<<<<<<<<
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 */
  try {
    __pyx_t_4 = std::vector<double>(__pyx_v_self->hypergraph->thisptr->edges().size(), ViterbiPotential::zero());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":102
 *              Viterbi_zero())
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):             # <<<<<<<<<<<<<<
 *             result = fn(ty)
 *             if result is None: potentials[i] = Viterbi_zero()
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_self->hypergraph->edge_labels) || PyTuple_CheckExact(__pyx_v_self->hypergraph->edge_labels)) {
    __pyx_t_6 = __pyx_v_self->hypergraph->edge_labels; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_self->hypergraph->edge_labels); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_ty, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":103
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)             # <<<<<<<<<<<<<<
 *             if result is None: potentials[i] = Viterbi_zero()
 *             potentials[i] = _ViterbiW_to_cpp(result)
 */
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_ty);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_ty);
    __Pyx_GIVEREF(__pyx_v_ty);
    __pyx_t_10 = PyObject_Call(__pyx_v_fn, ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_result, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":104
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)
 *             if result is None: potentials[i] = Viterbi_zero()             # <<<<<<<<<<<<<<
 *             potentials[i] = _ViterbiW_to_cpp(result)
 *         self.thisptr =  \
 */
    __pyx_t_2 = (__pyx_v_result == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {
      __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_potentials[__pyx_t_11]) = ViterbiPotential::zero();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "pydecode/hyper.pyx":105
 *             result = fn(ty)
 *             if result is None: potentials[i] = Viterbi_zero()
 *             potentials[i] = _ViterbiW_to_cpp(result)             # <<<<<<<<<<<<<<
 *         self.thisptr =  \
 *             cmake_potentials_Viterbi(self.hypergraph.thisptr,
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_result); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_11]) = __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":108
 *         self.thisptr =  \
 *             cmake_potentials_Viterbi(self.hypergraph.thisptr,
 *                                        potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_12 = HypergraphVectorPotentials<ViterbiPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":106
 *             if result is None: potentials[i] = Viterbi_zero()
 *             potentials[i] = _ViterbiW_to_cpp(result)
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *             cmake_potentials_Viterbi(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_12;

  /* "pydecode/hyper.pyx":109
 *             cmake_potentials_Viterbi(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_potentials(self, other_potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ty);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_16from_potentials[] = "ViterbiPotentials.from_potentials(self, other_potentials)";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_potentials (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_16from_potentials(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), ((PyObject *)__pyx_v_other_potentials));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":111
 *         return self
 * 
 *     def from_potentials(self, other_potentials):             # <<<<<<<<<<<<<<
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size())
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<double> __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  double __pyx_t_7;
  size_t __pyx_t_8;
  HypergraphPotentials<ViterbiPotential> *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_potentials", 0);

  /* "pydecode/hyper.pyx":113
 *     def from_potentials(self, other_potentials):
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 */
  try {
    __pyx_t_1 = std::vector<double>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_1;

  /* "pydecode/hyper.pyx":115
 *              vector[double](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):             # <<<<<<<<<<<<<<
 *             potentials[i] = _ViterbiW_to_cpp(other_potentials[edge])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->hypergraph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":116
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 *             potentials[i] = _ViterbiW_to_cpp(other_potentials[edge])             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_other_potentials, __pyx_v_edge); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_8]) = __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(__pyx_t_7);
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":122
 *             self.hypergraph.thisptr,
 *             potentials,
 *             _ViterbiW_to_cpp(other_potentials.bias))             # <<<<<<<<<<<<<<
 * 
 *         return self
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_other_potentials, __pyx_n_s__bias); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_9 = HypergraphVectorPotentials<ViterbiPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(__pyx_t_7));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":118
 *             potentials[i] = _ViterbiW_to_cpp(other_potentials[edge])
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Viterbi(
 *             self.hypergraph.thisptr,
 */
  __pyx_v_self->thisptr = __pyx_t_9;

  /* "pydecode/hyper.pyx":124
 *             _ViterbiW_to_cpp(other_potentials.bias))
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_vector(self, in_vec, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.from_potentials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_18from_vector[] = "ViterbiPotentials.from_vector(self, in_vec, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_vec = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_vector (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_vec,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":126
 *         return self
 * 
 *     def from_vector(self, in_vec, bias=None):             # <<<<<<<<<<<<<<
 *         cdef double my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_vector") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_vec = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_vector", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_18from_vector(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), __pyx_v_in_vec, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias) {
  double __pyx_v_my_bias;
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  std::vector<double> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  HypergraphPotentials<ViterbiPotential> *__pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_vector", 0);

  /* "pydecode/hyper.pyx":128
 *     def from_vector(self, in_vec, bias=None):
 *         cdef double my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Viterbi_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":129
 *         cdef double my_bias
 *         if bias is None:
 *             my_bias = Viterbi_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _ViterbiW_to_cpp(bias)
 */
    __pyx_v_my_bias = ViterbiPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":131
 *             my_bias = Viterbi_one()
 *         else:
 *             my_bias = _ViterbiW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[double] potentials = \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_bias); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":134
 * 
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, v in enumerate(in_vec):
 */
  try {
    __pyx_t_4 = std::vector<double>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":136
 *              vector[double](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, v in enumerate(in_vec):             # <<<<<<<<<<<<<<
 *             potentials[i] = _ViterbiW_to_cpp(v)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_in_vec) || PyTuple_CheckExact(__pyx_v_in_vec)) {
    __pyx_t_6 = __pyx_v_in_vec; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_in_vec); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":137
 * 
 *         for i, v in enumerate(in_vec):
 *             potentials[i] = _ViterbiW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_v); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_10]) = __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":141
 *         self.thisptr =  \
 *           cmake_potentials_Viterbi(self.hypergraph.thisptr,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_11 = HypergraphVectorPotentials<ViterbiPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":139
 *             potentials[i] = _ViterbiW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Viterbi(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_11;

  /* "pydecode/hyper.pyx":142
 *           cmake_potentials_Viterbi(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_map(self, in_map, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_20from_map[] = "ViterbiPotentials.from_map(self, in_map, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_map = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_map (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_map,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":144
 *         return self
 * 
 *     def from_map(self, in_map, bias=None):             # <<<<<<<<<<<<<<
 *         cdef double my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_map)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_map") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_map = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_map", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_20from_map(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), __pyx_v_in_map, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias) {
  double __pyx_v_my_bias;
  std::map<int,int> __pyx_v_map_potentials;
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  std::vector<double> __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  size_t __pyx_t_14;
  HypergraphPotentials<ViterbiPotential> *__pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_map", 0);

  /* "pydecode/hyper.pyx":146
 *     def from_map(self, in_map, bias=None):
 *         cdef double my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Viterbi_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":147
 *         cdef double my_bias
 *         if bias is None:
 *             my_bias = Viterbi_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _ViterbiW_to_cpp(bias)
 */
    __pyx_v_my_bias = ViterbiPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":149
 *             my_bias = Viterbi_one()
 *         else:
 *             my_bias = _ViterbiW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef c_map.map[int,int] map_potentials
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_bias); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":153
 *         cdef c_map.map[int,int] map_potentials
 *         cdef vector[double] potentials = \
 *             vector[double](len(in_map))             # <<<<<<<<<<<<<<
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_in_map); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_5 = std::vector<double>(__pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_5;

  /* "pydecode/hyper.pyx":155
 *             vector[double](len(in_map))
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):             # <<<<<<<<<<<<<<
 *             map_potentials[key] = j
 *             potentials[j] = _ViterbiW_to_cpp(v)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_6 = __pyx_int_0;
  __pyx_t_4 = 0;
  if (unlikely(__pyx_v_in_map == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_10 = __Pyx_dict_iterator(__pyx_v_in_map, 0, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_10;
  __pyx_t_10 = 0;
  while (1) {
    __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_8, &__pyx_t_4, &__pyx_t_10, &__pyx_t_11, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_12 == 0)) break;
    if (unlikely(__pyx_t_12 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_11);
    __pyx_t_11 = 0;
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_6);
    __pyx_t_11 = PyNumber_Add(__pyx_t_6, __pyx_int_1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_11;
    __pyx_t_11 = 0;

    /* "pydecode/hyper.pyx":156
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j             # <<<<<<<<<<<<<<
 *             potentials[j] = _ViterbiW_to_cpp(v)
 * 
 */
    __pyx_t_12 = __Pyx_PyInt_AsInt(__pyx_v_j); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_map_potentials[__pyx_t_13]) = __pyx_t_12;

    /* "pydecode/hyper.pyx":157
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j
 *             potentials[j] = _ViterbiW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_v); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_14 = __Pyx_PyInt_AsSize_t(__pyx_v_j); if (unlikely((__pyx_t_14 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_14]) = __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "pydecode/hyper.pyx":162
 *           cmake_potentials_Viterbi(self.hypergraph.thisptr,
 *                                       map_potentials,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_15 = HypergraphMapPotentials<ViterbiPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_map_potentials, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":159
 *             potentials[j] = _ViterbiW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Viterbi(self.hypergraph.thisptr,
 *                                       map_potentials,
 */
  __pyx_v_self->thisptr = __pyx_t_15;

  /* "pydecode/hyper.pyx":163
 *                                       map_potentials,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, CHypergraphViterbiPotentials *ptr,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":165
 *         return self
 * 
 *     cdef init(self, CHypergraphViterbiPotentials *ptr,             # <<<<<<<<<<<<<<
 *               Projection projection):
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_8pydecode_5hyper_17ViterbiPotentials_init(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, HypergraphPotentials<ViterbiPotential> *__pyx_v_ptr, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":167
 *     cdef init(self, CHypergraphViterbiPotentials *ptr,
 *               Projection projection):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.projection = projection
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":168
 *               Projection projection):
 *         self.thisptr = ptr
 *         self.projection = projection             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_projection));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_projection));
  __Pyx_GOTREF(__pyx_v_self->projection);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->projection));
  __pyx_v_self->projection = __pyx_v_projection;

  /* "pydecode/hyper.pyx":169
 *         self.thisptr = ptr
 *         self.projection = projection
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Edge edge not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), __pyx_ptype_8pydecode_10hypergraph_Edge, 0, "edge", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_22__getitem__(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_edge));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":171
 *         return self
 * 
 *     def __getitem__(self, Edge edge not None):             # <<<<<<<<<<<<<<
 *         return _ViterbiW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":172
 * 
 *     def __getitem__(self, Edge edge not None):
 *         return _ViterbiW_from_cpp(self.thisptr.score(edge.edgeptr))             # <<<<<<<<<<<<<<
 * 
 *     def dot(self, Path path not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(__pyx_v_self->thisptr->score(__pyx_v_edge->edgeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17ViterbiPotentials_24dot[] = "ViterbiPotentials.dot(self, Path path)\n\n        dot(path)\n\n        Take the dot product with `path` :math:`\\theta^{\\top} y`.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), __pyx_ptype_8pydecode_10hypergraph_Path, 0, "path", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17ViterbiPotentials_24dot(((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_v_path));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":174
 *         return _ViterbiW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 *     def dot(self, Path path not None):             # <<<<<<<<<<<<<<
 *         r"""
 *         dot(path)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17ViterbiPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "pydecode/hyper.pyx":181
 *         """
 * 
 *         return _ViterbiW_from_cpp(self.thisptr.dot(deref(path.thisptr)))             # <<<<<<<<<<<<<<
 *         #return _ViterbiW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->dot((*__pyx_v_path->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiPotentials.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_9_ViterbiW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_9_ViterbiW_one[] = "_ViterbiW.one()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_9_ViterbiW_1one = {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_9_ViterbiW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_9_ViterbiW_one)};
static PyObject *__pyx_pw_8pydecode_5hyper_9_ViterbiW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("one (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("one", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "one", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_9_ViterbiW_one();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":186
 * cdef class _ViterbiW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _ViterbiW_from_cpp(Viterbi_one())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_9_ViterbiW_one() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("one", 0);

  /* "pydecode/hyper.pyx":187
 *     @staticmethod
 *     def one():
 *         return _ViterbiW_from_cpp(Viterbi_one())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(ViterbiPotential::one()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._ViterbiW.one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_9_ViterbiW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_9_ViterbiW_2zero[] = "_ViterbiW.zero()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_9_ViterbiW_3zero = {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_9_ViterbiW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_9_ViterbiW_2zero)};
static PyObject *__pyx_pw_8pydecode_5hyper_9_ViterbiW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zero (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("zero", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "zero", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_9_ViterbiW_2zero();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":190
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _ViterbiW_from_cpp(Viterbi_zero())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_9_ViterbiW_2zero() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zero", 0);

  /* "pydecode/hyper.pyx":191
 *     @staticmethod
 *     def zero():
 *         return _ViterbiW_from_cpp(Viterbi_zero())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(ViterbiPotential::zero()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._ViterbiW.zero", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":194
 * 
 * 
 * cdef double _ViterbiW_to_cpp(double val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static double __pyx_f_8pydecode_5hyper__ViterbiW_to_cpp(double __pyx_v_val) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_ViterbiW_to_cpp", 0);

  /* "pydecode/hyper.pyx":196
 * cdef double _ViterbiW_to_cpp(double val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_val;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":200
 * 
 * 
 * cdef _ViterbiW_from_cpp(double val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static PyObject *__pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(double __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_ViterbiW_from_cpp", 0);

  /* "pydecode/hyper.pyx":202
 * cdef _ViterbiW_from_cpp(double val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._ViterbiW_from_cpp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_12ViterbiChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_12ViterbiChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};

    /* "pydecode/hyper.pyx":243
 * cdef class ViterbiChart:
 * 
 *     def __init__(self, Hypergraph graph=None):             # <<<<<<<<<<<<<<
 *         self.kind = Viterbi
 *         self.chart = NULL
 */
    values[0] = (PyObject *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.ViterbiChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12ViterbiChart___init__(((struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pydecode_5hyper_12ViterbiChart___init__(struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":244
 * 
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = Viterbi             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 *         if graph is not None:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__Viterbi); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":245
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = Viterbi
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 *         if graph is not None:
 *             self.chart = new CViterbiChart(graph.thisptr)
 */
  __pyx_v_self->chart = NULL;

  /* "pydecode/hyper.pyx":246
 *         self.kind = Viterbi
 *         self.chart = NULL
 *         if graph is not None:             # <<<<<<<<<<<<<<
 *             self.chart = new CViterbiChart(graph.thisptr)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_graph) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pydecode/hyper.pyx":247
 *         self.chart = NULL
 *         if graph is not None:
 *             self.chart = new CViterbiChart(graph.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Node node):
 */
    __pyx_v_self->chart = new Chart<ViterbiPotential>(__pyx_v_graph->thisptr);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12ViterbiChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_12ViterbiChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_8pydecode_10hypergraph_Node, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12ViterbiChart_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_node));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":249
 *             self.chart = new CViterbiChart(graph.thisptr)
 * 
 *     def __getitem__(self, Node node):             # <<<<<<<<<<<<<<
 *         return _ViterbiW_from_cpp(self.chart.get(node.nodeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12ViterbiChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":250
 * 
 *     def __getitem__(self, Node node):
 *         return _ViterbiW_from_cpp(self.chart.get(node.nodeptr))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(__pyx_v_self->chart->get(__pyx_v_node->nodeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.ViterbiChart.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_12ViterbiChart_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_12ViterbiChart_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_12ViterbiChart_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":252
 *         return _ViterbiW_from_cpp(self.chart.get(node.nodeptr))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.chart
 *         self.chart = NULL
 */

static void __pyx_pf_8pydecode_5hyper_12ViterbiChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":253
 * 
 *     def __dealloc__(self):
 *         del self.chart             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 * 
 */
  delete __pyx_v_self->chart;

  /* "pydecode/hyper.pyx":254
 *     def __dealloc__(self):
 *         del self.chart
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _ViterbiMarginals:
 */
  __pyx_v_self->chart = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_17_ViterbiMarginals___init__(((struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":260
 *     cdef Hypergraph graph
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_17_ViterbiMarginals___init__(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":261
 * 
 *     def __init__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_17_ViterbiMarginals_2__dealloc__(((struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":263
 *         self.thisptr = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_8pydecode_5hyper_17_ViterbiMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":264
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, const CViterbiMarginals *ptr, Hypergraph graph):
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":266
 *         del self.thisptr
 * 
 *     cdef init(self, const CViterbiMarginals *ptr, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         self.graph = graph
 */

static PyObject *__pyx_f_8pydecode_5hyper_17_ViterbiMarginals_init(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *__pyx_v_self, Marginals<ViterbiPotential> const *__pyx_v_ptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":267
 * 
 *     cdef init(self, const CViterbiMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.graph = graph
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":268
 *     cdef init(self, const CViterbiMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr
 *         self.graph = graph             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->graph));
  __pyx_v_self->graph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":269
 *         self.thisptr = ptr
 *         self.graph = graph
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_17_ViterbiMarginals_4__getitem__(((struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":271
 *         return self
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Edge):
 *             return _ViterbiW_from_cpp(
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17_ViterbiMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":272
 * 
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             return _ViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":273
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):
 *             return _ViterbiW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":274
 *         if isinstance(obj, Edge):
 *             return _ViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))             # <<<<<<<<<<<<<<
 *         elif isinstance(obj, Node):
 *             return _ViterbiW_from_cpp(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "pydecode/hyper.pyx":275
 *             return _ViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             return _ViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":276
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 *             return _ViterbiW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":277
 *         elif isinstance(obj, Node):
 *             return _ViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))             # <<<<<<<<<<<<<<
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__ViterbiW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":279
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(             # <<<<<<<<<<<<<<
 *                 "Only nodes and edges have Viterbi marginal values." + \
 *                 "Passed %s."%obj)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__py_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":281
 *             raise py_hypergraph.HypergraphAccessException(
 *                 "Only nodes and edges have Viterbi marginal values." + \
 *                 "Passed %s."%obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_4), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pydecode.hyper._ViterbiMarginals.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_7threshold(PyObject *__pyx_v_self, PyObject *__pyx_arg_semi); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17_ViterbiMarginals_6threshold[] = "_ViterbiMarginals.threshold(self, double semi)";
static PyObject *__pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_7threshold(PyObject *__pyx_v_self, PyObject *__pyx_arg_semi) {
  double __pyx_v_semi;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("threshold (wrapper)", 0);
  assert(__pyx_arg_semi); {
    __pyx_v_semi = __pyx_PyFloat_AsDouble(__pyx_arg_semi); if (unlikely((__pyx_v_semi == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper._ViterbiMarginals.threshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_17_ViterbiMarginals_6threshold(((struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)__pyx_v_self), ((double)__pyx_v_semi));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":284
 * 
 * 
 *     def threshold(self, double semi):             # <<<<<<<<<<<<<<
 *         return BoolPotentials(self.graph).init(self.thisptr.threshold(semi), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17_ViterbiMarginals_6threshold(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *__pyx_v_self, double __pyx_v_semi) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("threshold", 0);

  /* "pydecode/hyper.pyx":285
 * 
 *     def threshold(self, double semi):
 *         return BoolPotentials(self.graph).init(self.thisptr.threshold(semi), None)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *)((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2), __pyx_v_self->thisptr->threshold(__pyx_v_semi), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper._ViterbiMarginals.threshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_7Viterbi_inside[] = "Viterbi.inside(Hypergraph graph, ViterbiPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_7Viterbi_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_7Viterbi_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_7Viterbi_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_ViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_7Viterbi_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":295
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                ViterbiPotentials potentials):
 *         cdef ViterbiChart chart = ViterbiChart()
 */

static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials) {
  struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<ViterbiPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":297
 *     def inside(Hypergraph graph,
 *                ViterbiPotentials potentials):
 *         cdef ViterbiChart chart = ViterbiChart()             # <<<<<<<<<<<<<<
 *         chart.chart = inside_Viterbi(graph.thisptr, deref(potentials.thisptr))
 *         return chart
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_ViterbiChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":298
 *                ViterbiPotentials potentials):
 *         cdef ViterbiChart chart = ViterbiChart()
 *         chart.chart = inside_Viterbi(graph.thisptr, deref(potentials.thisptr))             # <<<<<<<<<<<<<<
 *         return chart
 * 
 */
  try {
    __pyx_t_2 = general_inside<ViterbiPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":299
 *         cdef ViterbiChart chart = ViterbiChart()
 *         chart.chart = inside_Viterbi(graph.thisptr, deref(potentials.thisptr))
 *         return chart             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_chart));
  __pyx_r = ((PyObject *)__pyx_v_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_7Viterbi_2outside[] = "Viterbi.outside(Hypergraph graph, ViterbiPotentials potentials, ViterbiChart inside_chart)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_7Viterbi_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_7Viterbi_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_7Viterbi_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)values[1]);
    __pyx_v_inside_chart = ((struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_ViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inside_chart), __pyx_ptype_8pydecode_5hyper_ViterbiChart, 1, "inside_chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_7Viterbi_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":302
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 ViterbiPotentials potentials,
 *                 ViterbiChart inside_chart):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_inside_chart) {
  struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_out_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<ViterbiPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":305
 *                 ViterbiPotentials potentials,
 *                 ViterbiChart inside_chart):
 *         cdef ViterbiChart out_chart = ViterbiChart()             # <<<<<<<<<<<<<<
 *         out_chart.chart = outside_Viterbi(graph.thisptr,
 *                                              deref(potentials.thisptr),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_ViterbiChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out_chart = ((struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":308
 *         out_chart.chart = outside_Viterbi(graph.thisptr,
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))             # <<<<<<<<<<<<<<
 *         return out_chart
 * 
 */
  try {
    __pyx_t_2 = general_outside<ViterbiPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_inside_chart->chart));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":306
 *                 ViterbiChart inside_chart):
 *         cdef ViterbiChart out_chart = ViterbiChart()
 *         out_chart.chart = outside_Viterbi(graph.thisptr,             # <<<<<<<<<<<<<<
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 */
  __pyx_v_out_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":309
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 *         return out_chart             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out_chart));
  __pyx_r = ((PyObject *)__pyx_v_out_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_5viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_7Viterbi_4viterbi[] = "Viterbi.viterbi(Hypergraph graph, ViterbiPotentials potentials, ViterbiChart chart=None)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_7Viterbi_5viterbi = {__Pyx_NAMESTR("viterbi"), (PyCFunction)__pyx_pw_8pydecode_5hyper_7Viterbi_5viterbi, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_7Viterbi_4viterbi)};
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_5viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("viterbi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__chart,0};
    PyObject* values[3] = {0,0,0};

    /* "pydecode/hyper.pyx":315
 *     def viterbi(Hypergraph graph,
 *                 ViterbiPotentials potentials,
 *                 ViterbiChart chart=None):             # <<<<<<<<<<<<<<
 *         cdef CViterbiChart *used_chart
 *         if chart is not None:
 */
    values[2] = (PyObject *)((struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)((PyObject *)Py_None));
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("viterbi", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__chart);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "viterbi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)values[1]);
    __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("viterbi", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_ViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_chart), __pyx_ptype_8pydecode_5hyper_ViterbiChart, 1, "chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_7Viterbi_4viterbi(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":313
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 ViterbiPotentials potentials,
 *                 ViterbiChart chart=None):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_4viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_ViterbiChart *__pyx_v_chart) {
  Chart<ViterbiPotential> *__pyx_v_used_chart;
  Hyperpath *__pyx_v_path;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Chart<ViterbiPotential> *__pyx_t_3;
  Hyperpath *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("viterbi", 0);

  /* "pydecode/hyper.pyx":317
 *                 ViterbiChart chart=None):
 *         cdef CViterbiChart *used_chart
 *         if chart is not None:             # <<<<<<<<<<<<<<
 *             used_chart = chart.chart
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_chart) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":318
 *         cdef CViterbiChart *used_chart
 *         if chart is not None:
 *             used_chart = chart.chart             # <<<<<<<<<<<<<<
 *         else:
 *             used_chart = new CViterbiChart(graph.thisptr)
 */
    __pyx_t_3 = __pyx_v_chart->chart;
    __pyx_v_used_chart = __pyx_t_3;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":320
 *             used_chart = chart.chart
 *         else:
 *             used_chart = new CViterbiChart(graph.thisptr)             # <<<<<<<<<<<<<<
 *         cdef CHyperpath *path = \
 *             viterbi_Viterbi(graph.thisptr,
 */
    __pyx_v_used_chart = new Chart<ViterbiPotential>(__pyx_v_graph->thisptr);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":324
 *             viterbi_Viterbi(graph.thisptr,
 *                                deref(potentials.thisptr),
 *                                used_chart)             # <<<<<<<<<<<<<<
 *         if chart is None:
 *             del used_chart
 */
  try {
    __pyx_t_4 = general_viterbi<ViterbiPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), __pyx_v_used_chart);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_path = __pyx_t_4;

  /* "pydecode/hyper.pyx":325
 *                                deref(potentials.thisptr),
 *                                used_chart)
 *         if chart is None:             # <<<<<<<<<<<<<<
 *             del used_chart
 *         return Path().init(path, graph)
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_chart) == Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":326
 *                                used_chart)
 *         if chart is None:
 *             del used_chart             # <<<<<<<<<<<<<<
 *         return Path().init(path, graph)
 * 
 */
    delete __pyx_v_used_chart;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "pydecode/hyper.pyx":327
 *         if chart is None:
 *             del used_chart
 *         return Path().init(path, graph)             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Path)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *)((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_5)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_5), __pyx_v_path, __pyx_v_graph)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_7count_constrained_viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_7Viterbi_6count_constrained_viterbi[] = "Viterbi.count_constrained_viterbi(Hypergraph graph, ViterbiPotentials potentials, CountingPotentials count_potentials, int limit)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_7Viterbi_7count_constrained_viterbi = {__Pyx_NAMESTR("count_constrained_viterbi"), (PyCFunction)__pyx_pw_8pydecode_5hyper_7Viterbi_7count_constrained_viterbi, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_7Viterbi_6count_constrained_viterbi)};
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_7count_constrained_viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials = 0;
  int __pyx_v_limit;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("count_constrained_viterbi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__count_potentials,&__pyx_n_s__limit,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__count_potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__limit)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "count_constrained_viterbi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)values[1]);
    __pyx_v_count_potentials = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)values[2]);
    __pyx_v_limit = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_limit == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.count_constrained_viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_ViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_count_potentials), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "count_potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_7Viterbi_6count_constrained_viterbi(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_count_potentials, __pyx_v_limit);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":330
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   ViterbiPotentials potentials,
 *                                   CountingPotentials count_potentials,
 */

static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_6count_constrained_viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials, int __pyx_v_limit) {
  Hyperpath *__pyx_v_path;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Hyperpath *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("count_constrained_viterbi", 0);

  /* "pydecode/hyper.pyx":338
 *                                                  deref(potentials.thisptr),
 *                                                  deref(count_potentials.thisptr),
 *                                                  limit)             # <<<<<<<<<<<<<<
 *         return Path().init(path, graph)
 * 
 */
  try {
    __pyx_t_1 = count_constrained_viterbi<ViterbiPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_count_potentials->thisptr), __pyx_v_limit);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_path = __pyx_t_1;

  /* "pydecode/hyper.pyx":339
 *                                                  deref(count_potentials.thisptr),
 *                                                  limit)
 *         return Path().init(path, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Path)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *)((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_2), __pyx_v_path, __pyx_v_graph)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.count_constrained_viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_7Viterbi_8compute_marginals[] = "Viterbi.compute_marginals(Hypergraph graph, ViterbiPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_7Viterbi_9compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_7Viterbi_9compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_7Viterbi_8compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_ViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_7Viterbi_8compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":344
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           ViterbiPotentials potentials):
 *         cdef const CViterbiMarginals *marginals = \
 */

static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials) {
  Marginals<ViterbiPotential> const *__pyx_v_marginals;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":347
 *                           ViterbiPotentials potentials):
 *         cdef const CViterbiMarginals *marginals = \
 *             Viterbi_compute(graph.thisptr, potentials.thisptr)             # <<<<<<<<<<<<<<
 *         return _ViterbiMarginals().init(marginals, graph)
 * 
 */
  __pyx_v_marginals = Marginals<ViterbiPotential>::compute(__pyx_v_graph->thisptr, __pyx_v_potentials->thisptr);

  /* "pydecode/hyper.pyx":348
 *         cdef const CViterbiMarginals *marginals = \
 *             Viterbi_compute(graph.thisptr, potentials.thisptr)
 *         return _ViterbiMarginals().init(marginals, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__ViterbiMarginals)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper__ViterbiMarginals *)((struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)__pyx_t_1), __pyx_v_marginals, __pyx_v_graph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_11prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_7Viterbi_10prune_hypergraph[] = "Viterbi.prune_hypergraph(Hypergraph graph, ViterbiPotentials potentials, threshold)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_7Viterbi_11prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_7Viterbi_11prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_7Viterbi_10prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_7Viterbi_11prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_threshold = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__threshold,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__threshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)values[1]);
    __pyx_v_threshold = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_ViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_7Viterbi_10prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_threshold);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":352
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          ViterbiPotentials potentials,
 *                          threshold):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_7Viterbi_10prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold) {
  PyObject *__pyx_v_marginals = NULL;
  PyObject *__pyx_v_bool_potentials = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":355
 *                          ViterbiPotentials potentials,
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(((PyObject *)__pyx_v_potentials));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_potentials));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_potentials));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_marginals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pydecode/hyper.pyx":356
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)             # <<<<<<<<<<<<<<
 *         return make_pruning_projections(graph, bool_potentials)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_marginals, __pyx_n_s__threshold); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_threshold);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_threshold);
  __Pyx_GIVEREF(__pyx_v_threshold);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_bool_potentials = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":357
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_bool_potentials);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_bool_potentials);
  __Pyx_GIVEREF(__pyx_v_bool_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.Viterbi.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_marginals);
  __Pyx_XDECREF(__pyx_v_bool_potentials);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials___dealloc__(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":369
 *     """
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = NULL
 */

static void __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":370
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "pydecode/hyper.pyx":371
 *     def __dealloc__(self):
 *         del self.thisptr
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_2__cinit__(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":374
 * 
 * 
 *     def __cinit__(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         """
 *         Build the potential vector for a hypergraph.
 */

static int __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":380
 *         :param hypergraph: The underlying hypergraph.
 *         """
 *         self.hypergraph = graph             # <<<<<<<<<<<<<<
 *         self.kind = LogViterbi
 *         self.thisptr = NULL
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->hypergraph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_v_self->hypergraph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":381
 *         """
 *         self.hypergraph = graph
 *         self.kind = LogViterbi             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__LogViterbi); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":382
 *         self.hypergraph = graph
 *         self.kind = LogViterbi
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def times(self, LogViterbiPotentials other):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_4times[] = "LogViterbiPotentials.times(self, LogViterbiPotentials other)";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("times (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_LogViterbiPotentials, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_4times(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":384
 *         self.thisptr = NULL
 * 
 *     def times(self, LogViterbiPotentials other):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphLogViterbiPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_4times(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_other) {
  HypergraphPotentials<LogViterbiPotential> *__pyx_v_new_potentials;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("times", 0);

  /* "pydecode/hyper.pyx":386
 *     def times(self, LogViterbiPotentials other):
 *         cdef CHypergraphLogViterbiPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))             # <<<<<<<<<<<<<<
 *         return LogViterbiPotentials(self.hypergraph).init(new_potentials, None)
 * 
 */
  __pyx_v_new_potentials = __pyx_v_self->thisptr->times((*__pyx_v_other->thisptr));

  /* "pydecode/hyper.pyx":387
 *         cdef CHypergraphLogViterbiPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 *         return LogViterbiPotentials(self.hypergraph).init(new_potentials, None)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_LogViterbiPotentials *)((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_t_2), __pyx_v_new_potentials, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_6clone[] = "LogViterbiPotentials.clone(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_6clone(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":389
 *         return LogViterbiPotentials(self.hypergraph).init(new_potentials, None)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         return LogViterbiPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pydecode/hyper.pyx":390
 * 
 *     def clone(self):
 *         return LogViterbiPotentials(self.hypergraph).init(self.thisptr.clone(), None)             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_LogViterbiPotentials *)((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_t_2), __pyx_v_self->thisptr->clone(), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_8project[] = "LogViterbiPotentials.project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_8project(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":392
 *         return LogViterbiPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 *     def project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphLogViterbiPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_8project(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<LogViterbiPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":394
 *     def project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphLogViterbiPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))             # <<<<<<<<<<<<<<
 *         return LogViterbiPotentials(graph).init(ptr, None)
 * 
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->project_potentials((*__pyx_v_projection->thisptr));

  /* "pydecode/hyper.pyx":395
 *         cdef CHypergraphLogViterbiPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 *         return LogViterbiPotentials(graph).init(ptr, None)             # <<<<<<<<<<<<<<
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_LogViterbiPotentials *)((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_t_2), __pyx_v_ptr, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_10up_project[] = "LogViterbiPotentials.up_project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("up_project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "up_project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_10up_project(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":397
 *         return LogViterbiPotentials(graph).init(ptr, None)
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphLogViterbiPotentials *ptr = \
 *             cmake_projected_potentials_LogViterbi(self.thisptr, projection.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<LogViterbiPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  HypergraphPotentials<LogViterbiPotential> *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("up_project", 0);

  /* "pydecode/hyper.pyx":399
 *     def up_project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphLogViterbiPotentials *ptr = \
 *             cmake_projected_potentials_LogViterbi(self.thisptr, projection.thisptr)             # <<<<<<<<<<<<<<
 *         return LogViterbiPotentials(graph).init(ptr, projection)
 * 
 */
  try {
    __pyx_t_1 = HypergraphProjectedPotentials<LogViterbiPotential>::make_potentials(__pyx_v_self->thisptr, __pyx_v_projection->thisptr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_ptr = __pyx_t_1;

  /* "pydecode/hyper.pyx":400
 *         cdef CHypergraphLogViterbiPotentials *ptr = \
 *             cmake_projected_potentials_LogViterbi(self.thisptr, projection.thisptr)
 *         return LogViterbiPotentials(graph).init(ptr, projection)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, Hypergraph graph):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiPotentials)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_LogViterbiPotentials *)((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_t_3)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_t_3), __pyx_v_ptr, __pyx_v_projection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_12show[] = "LogViterbiPotentials.show(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_12show(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":402
 *         return LogViterbiPotentials(graph).init(ptr, projection)
 * 
 *     def show(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_12show(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "pydecode/hyper.pyx":403
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__join); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pydecode/hyper.pyx":404
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":403
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__label); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_edge);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_edge);
    __Pyx_GIVEREF(__pyx_v_edge);
    __pyx_t_8 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_edge); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_8 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_4kind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_4kind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_4kind___get__(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":408
 * 
 *     property kind:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.kind
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":409
 *     property kind:
 *         def __get__(self):
 *             return self.kind             # <<<<<<<<<<<<<<
 * 
 *     property bias:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kind);
  __pyx_r = __pyx_v_self->kind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_4bias_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_4bias_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_4bias___get__(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":412
 * 
 *     property bias:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return _LogViterbiW_from_cpp(self.thisptr.bias())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":413
 *     property bias:
 *         def __get__(self):
 *             return _LogViterbiW_from_cpp(self.thisptr.bias())             # <<<<<<<<<<<<<<
 * 
 *     def build(self, fn, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(__pyx_v_self->thisptr->bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.bias.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_14build[] = "LogViterbiPotentials.build(self, fn, bias=None)\n\n        build(fn)\n\n        Build the potential vector for a hypergraph.\n\n        :param fn: A function from edge labels to potentials.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fn = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":415
 *             return _LogViterbiW_from_cpp(self.thisptr.bias())
 * 
 *     def build(self, fn, bias=None):             # <<<<<<<<<<<<<<
 *         """
 *         build(fn)
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fn = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("build", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_14build(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), __pyx_v_fn, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_14build(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias) {
  double __pyx_v_my_bias;
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ty = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  std::vector<double> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  size_t __pyx_t_11;
  HypergraphPotentials<LogViterbiPotential> *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build", 0);

  /* "pydecode/hyper.pyx":424
 *         """
 *         cdef double my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = LogViterbi_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":425
 *         cdef double my_bias
 *         if bias is None:
 *             my_bias = LogViterbi_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _LogViterbiW_to_cpp(bias)
 */
    __pyx_v_my_bias = LogViterbiPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":427
 *             my_bias = LogViterbi_one()
 *         else:
 *             my_bias = _LogViterbiW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[double] potentials = \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_bias); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":431
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size(),
 *              LogViterbi_zero())             # <<<<<<<<<<<<<<
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 */
  try {
    __pyx_t_4 = std::vector<double>(__pyx_v_self->hypergraph->thisptr->edges().size(), LogViterbiPotential::zero());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":433
 *              LogViterbi_zero())
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):             # <<<<<<<<<<<<<<
 *             result = fn(ty)
 *             if result is None: potentials[i] = LogViterbi_zero()
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_self->hypergraph->edge_labels) || PyTuple_CheckExact(__pyx_v_self->hypergraph->edge_labels)) {
    __pyx_t_6 = __pyx_v_self->hypergraph->edge_labels; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_self->hypergraph->edge_labels); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_ty, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":434
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)             # <<<<<<<<<<<<<<
 *             if result is None: potentials[i] = LogViterbi_zero()
 *             potentials[i] = _LogViterbiW_to_cpp(result)
 */
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_ty);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_ty);
    __Pyx_GIVEREF(__pyx_v_ty);
    __pyx_t_10 = PyObject_Call(__pyx_v_fn, ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_result, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":435
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)
 *             if result is None: potentials[i] = LogViterbi_zero()             # <<<<<<<<<<<<<<
 *             potentials[i] = _LogViterbiW_to_cpp(result)
 *         self.thisptr =  \
 */
    __pyx_t_2 = (__pyx_v_result == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {
      __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_potentials[__pyx_t_11]) = LogViterbiPotential::zero();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "pydecode/hyper.pyx":436
 *             result = fn(ty)
 *             if result is None: potentials[i] = LogViterbi_zero()
 *             potentials[i] = _LogViterbiW_to_cpp(result)             # <<<<<<<<<<<<<<
 *         self.thisptr =  \
 *             cmake_potentials_LogViterbi(self.hypergraph.thisptr,
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_result); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_11]) = __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":439
 *         self.thisptr =  \
 *             cmake_potentials_LogViterbi(self.hypergraph.thisptr,
 *                                        potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_12 = HypergraphVectorPotentials<LogViterbiPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":437
 *             if result is None: potentials[i] = LogViterbi_zero()
 *             potentials[i] = _LogViterbiW_to_cpp(result)
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *             cmake_potentials_LogViterbi(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_12;

  /* "pydecode/hyper.pyx":440
 *             cmake_potentials_LogViterbi(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_potentials(self, other_potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ty);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_16from_potentials[] = "LogViterbiPotentials.from_potentials(self, other_potentials)";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_potentials (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_16from_potentials(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), ((PyObject *)__pyx_v_other_potentials));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":442
 *         return self
 * 
 *     def from_potentials(self, other_potentials):             # <<<<<<<<<<<<<<
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size())
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<double> __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  double __pyx_t_7;
  size_t __pyx_t_8;
  HypergraphPotentials<LogViterbiPotential> *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_potentials", 0);

  /* "pydecode/hyper.pyx":444
 *     def from_potentials(self, other_potentials):
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 */
  try {
    __pyx_t_1 = std::vector<double>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_1;

  /* "pydecode/hyper.pyx":446
 *              vector[double](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):             # <<<<<<<<<<<<<<
 *             potentials[i] = _LogViterbiW_to_cpp(other_potentials[edge])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->hypergraph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":447
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 *             potentials[i] = _LogViterbiW_to_cpp(other_potentials[edge])             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_other_potentials, __pyx_v_edge); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_8]) = __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(__pyx_t_7);
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":453
 *             self.hypergraph.thisptr,
 *             potentials,
 *             _LogViterbiW_to_cpp(other_potentials.bias))             # <<<<<<<<<<<<<<
 * 
 *         return self
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_other_potentials, __pyx_n_s__bias); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_9 = HypergraphVectorPotentials<LogViterbiPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(__pyx_t_7));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":449
 *             potentials[i] = _LogViterbiW_to_cpp(other_potentials[edge])
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_LogViterbi(
 *             self.hypergraph.thisptr,
 */
  __pyx_v_self->thisptr = __pyx_t_9;

  /* "pydecode/hyper.pyx":455
 *             _LogViterbiW_to_cpp(other_potentials.bias))
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_vector(self, in_vec, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.from_potentials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_18from_vector[] = "LogViterbiPotentials.from_vector(self, in_vec, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_vec = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_vector (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_vec,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":457
 *         return self
 * 
 *     def from_vector(self, in_vec, bias=None):             # <<<<<<<<<<<<<<
 *         cdef double my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_vector") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_vec = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_vector", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_18from_vector(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), __pyx_v_in_vec, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias) {
  double __pyx_v_my_bias;
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  std::vector<double> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  HypergraphPotentials<LogViterbiPotential> *__pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_vector", 0);

  /* "pydecode/hyper.pyx":459
 *     def from_vector(self, in_vec, bias=None):
 *         cdef double my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = LogViterbi_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":460
 *         cdef double my_bias
 *         if bias is None:
 *             my_bias = LogViterbi_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _LogViterbiW_to_cpp(bias)
 */
    __pyx_v_my_bias = LogViterbiPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":462
 *             my_bias = LogViterbi_one()
 *         else:
 *             my_bias = _LogViterbiW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[double] potentials = \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_bias); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":465
 * 
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, v in enumerate(in_vec):
 */
  try {
    __pyx_t_4 = std::vector<double>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":467
 *              vector[double](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, v in enumerate(in_vec):             # <<<<<<<<<<<<<<
 *             potentials[i] = _LogViterbiW_to_cpp(v)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_in_vec) || PyTuple_CheckExact(__pyx_v_in_vec)) {
    __pyx_t_6 = __pyx_v_in_vec; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_in_vec); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":468
 * 
 *         for i, v in enumerate(in_vec):
 *             potentials[i] = _LogViterbiW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_v); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_10]) = __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":472
 *         self.thisptr =  \
 *           cmake_potentials_LogViterbi(self.hypergraph.thisptr,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_11 = HypergraphVectorPotentials<LogViterbiPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":470
 *             potentials[i] = _LogViterbiW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_LogViterbi(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_11;

  /* "pydecode/hyper.pyx":473
 *           cmake_potentials_LogViterbi(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_map(self, in_map, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_20from_map[] = "LogViterbiPotentials.from_map(self, in_map, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_map = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_map (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_map,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":475
 *         return self
 * 
 *     def from_map(self, in_map, bias=None):             # <<<<<<<<<<<<<<
 *         cdef double my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_map)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_map") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_map = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_map", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_20from_map(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), __pyx_v_in_map, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias) {
  double __pyx_v_my_bias;
  std::map<int,int> __pyx_v_map_potentials;
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  std::vector<double> __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  size_t __pyx_t_14;
  HypergraphPotentials<LogViterbiPotential> *__pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_map", 0);

  /* "pydecode/hyper.pyx":477
 *     def from_map(self, in_map, bias=None):
 *         cdef double my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = LogViterbi_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":478
 *         cdef double my_bias
 *         if bias is None:
 *             my_bias = LogViterbi_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _LogViterbiW_to_cpp(bias)
 */
    __pyx_v_my_bias = LogViterbiPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":480
 *             my_bias = LogViterbi_one()
 *         else:
 *             my_bias = _LogViterbiW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef c_map.map[int,int] map_potentials
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_bias); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":484
 *         cdef c_map.map[int,int] map_potentials
 *         cdef vector[double] potentials = \
 *             vector[double](len(in_map))             # <<<<<<<<<<<<<<
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_in_map); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_5 = std::vector<double>(__pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_5;

  /* "pydecode/hyper.pyx":486
 *             vector[double](len(in_map))
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):             # <<<<<<<<<<<<<<
 *             map_potentials[key] = j
 *             potentials[j] = _LogViterbiW_to_cpp(v)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_6 = __pyx_int_0;
  __pyx_t_4 = 0;
  if (unlikely(__pyx_v_in_map == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_10 = __Pyx_dict_iterator(__pyx_v_in_map, 0, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_10;
  __pyx_t_10 = 0;
  while (1) {
    __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_8, &__pyx_t_4, &__pyx_t_10, &__pyx_t_11, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_12 == 0)) break;
    if (unlikely(__pyx_t_12 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_11);
    __pyx_t_11 = 0;
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_6);
    __pyx_t_11 = PyNumber_Add(__pyx_t_6, __pyx_int_1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_11;
    __pyx_t_11 = 0;

    /* "pydecode/hyper.pyx":487
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j             # <<<<<<<<<<<<<<
 *             potentials[j] = _LogViterbiW_to_cpp(v)
 * 
 */
    __pyx_t_12 = __Pyx_PyInt_AsInt(__pyx_v_j); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_map_potentials[__pyx_t_13]) = __pyx_t_12;

    /* "pydecode/hyper.pyx":488
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j
 *             potentials[j] = _LogViterbiW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_v); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_14 = __Pyx_PyInt_AsSize_t(__pyx_v_j); if (unlikely((__pyx_t_14 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_14]) = __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "pydecode/hyper.pyx":493
 *           cmake_potentials_LogViterbi(self.hypergraph.thisptr,
 *                                       map_potentials,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_15 = HypergraphMapPotentials<LogViterbiPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_map_potentials, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":490
 *             potentials[j] = _LogViterbiW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_LogViterbi(self.hypergraph.thisptr,
 *                                       map_potentials,
 */
  __pyx_v_self->thisptr = __pyx_t_15;

  /* "pydecode/hyper.pyx":494
 *                                       map_potentials,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, CHypergraphLogViterbiPotentials *ptr,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":496
 *         return self
 * 
 *     cdef init(self, CHypergraphLogViterbiPotentials *ptr,             # <<<<<<<<<<<<<<
 *               Projection projection):
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_8pydecode_5hyper_20LogViterbiPotentials_init(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, HypergraphPotentials<LogViterbiPotential> *__pyx_v_ptr, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":498
 *     cdef init(self, CHypergraphLogViterbiPotentials *ptr,
 *               Projection projection):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.projection = projection
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":499
 *               Projection projection):
 *         self.thisptr = ptr
 *         self.projection = projection             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_projection));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_projection));
  __Pyx_GOTREF(__pyx_v_self->projection);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->projection));
  __pyx_v_self->projection = __pyx_v_projection;

  /* "pydecode/hyper.pyx":500
 *         self.thisptr = ptr
 *         self.projection = projection
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Edge edge not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), __pyx_ptype_8pydecode_10hypergraph_Edge, 0, "edge", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_22__getitem__(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_edge));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":502
 *         return self
 * 
 *     def __getitem__(self, Edge edge not None):             # <<<<<<<<<<<<<<
 *         return _LogViterbiW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":503
 * 
 *     def __getitem__(self, Edge edge not None):
 *         return _LogViterbiW_from_cpp(self.thisptr.score(edge.edgeptr))             # <<<<<<<<<<<<<<
 * 
 *     def dot(self, Path path not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(__pyx_v_self->thisptr->score(__pyx_v_edge->edgeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_24dot[] = "LogViterbiPotentials.dot(self, Path path)\n\n        dot(path)\n\n        Take the dot product with `path` :math:`\\theta^{\\top} y`.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), __pyx_ptype_8pydecode_10hypergraph_Path, 0, "path", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_24dot(((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_v_path));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":505
 *         return _LogViterbiW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 *     def dot(self, Path path not None):             # <<<<<<<<<<<<<<
 *         r"""
 *         dot(path)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20LogViterbiPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "pydecode/hyper.pyx":512
 *         """
 * 
 *         return _LogViterbiW_from_cpp(self.thisptr.dot(deref(path.thisptr)))             # <<<<<<<<<<<<<<
 *         #return _LogViterbiW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->dot((*__pyx_v_path->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiPotentials.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12_LogViterbiW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12_LogViterbiW_one[] = "_LogViterbiW.one()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12_LogViterbiW_1one = {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12_LogViterbiW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12_LogViterbiW_one)};
static PyObject *__pyx_pw_8pydecode_5hyper_12_LogViterbiW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("one (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("one", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "one", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_12_LogViterbiW_one();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":517
 * cdef class _LogViterbiW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _LogViterbiW_from_cpp(LogViterbi_one())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12_LogViterbiW_one() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("one", 0);

  /* "pydecode/hyper.pyx":518
 *     @staticmethod
 *     def one():
 *         return _LogViterbiW_from_cpp(LogViterbi_one())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(LogViterbiPotential::one()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._LogViterbiW.one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12_LogViterbiW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12_LogViterbiW_2zero[] = "_LogViterbiW.zero()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12_LogViterbiW_3zero = {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12_LogViterbiW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12_LogViterbiW_2zero)};
static PyObject *__pyx_pw_8pydecode_5hyper_12_LogViterbiW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zero (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("zero", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "zero", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_12_LogViterbiW_2zero();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":521
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _LogViterbiW_from_cpp(LogViterbi_zero())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12_LogViterbiW_2zero() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zero", 0);

  /* "pydecode/hyper.pyx":522
 *     @staticmethod
 *     def zero():
 *         return _LogViterbiW_from_cpp(LogViterbi_zero())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(LogViterbiPotential::zero()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._LogViterbiW.zero", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":525
 * 
 * 
 * cdef double _LogViterbiW_to_cpp(double val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static double __pyx_f_8pydecode_5hyper__LogViterbiW_to_cpp(double __pyx_v_val) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_LogViterbiW_to_cpp", 0);

  /* "pydecode/hyper.pyx":527
 * cdef double _LogViterbiW_to_cpp(double val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_val;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":531
 * 
 * 
 * cdef _LogViterbiW_from_cpp(double val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static PyObject *__pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(double __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_LogViterbiW_from_cpp", 0);

  /* "pydecode/hyper.pyx":533
 * cdef _LogViterbiW_from_cpp(double val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._LogViterbiW_from_cpp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_15LogViterbiChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_15LogViterbiChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};

    /* "pydecode/hyper.pyx":574
 * cdef class LogViterbiChart:
 * 
 *     def __init__(self, Hypergraph graph=None):             # <<<<<<<<<<<<<<
 *         self.kind = LogViterbi
 *         self.chart = NULL
 */
    values[0] = (PyObject *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15LogViterbiChart___init__(((struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pydecode_5hyper_15LogViterbiChart___init__(struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":575
 * 
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = LogViterbi             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 *         if graph is not None:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__LogViterbi); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":576
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = LogViterbi
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 *         if graph is not None:
 *             self.chart = new CLogViterbiChart(graph.thisptr)
 */
  __pyx_v_self->chart = NULL;

  /* "pydecode/hyper.pyx":577
 *         self.kind = LogViterbi
 *         self.chart = NULL
 *         if graph is not None:             # <<<<<<<<<<<<<<
 *             self.chart = new CLogViterbiChart(graph.thisptr)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_graph) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pydecode/hyper.pyx":578
 *         self.chart = NULL
 *         if graph is not None:
 *             self.chart = new CLogViterbiChart(graph.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Node node):
 */
    __pyx_v_self->chart = new Chart<LogViterbiPotential>(__pyx_v_graph->thisptr);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15LogViterbiChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_15LogViterbiChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_8pydecode_10hypergraph_Node, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15LogViterbiChart_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_node));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":580
 *             self.chart = new CLogViterbiChart(graph.thisptr)
 * 
 *     def __getitem__(self, Node node):             # <<<<<<<<<<<<<<
 *         return _LogViterbiW_from_cpp(self.chart.get(node.nodeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_15LogViterbiChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":581
 * 
 *     def __getitem__(self, Node node):
 *         return _LogViterbiW_from_cpp(self.chart.get(node.nodeptr))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(__pyx_v_self->chart->get(__pyx_v_node->nodeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbiChart.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_15LogViterbiChart_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_15LogViterbiChart_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_15LogViterbiChart_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":583
 *         return _LogViterbiW_from_cpp(self.chart.get(node.nodeptr))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.chart
 *         self.chart = NULL
 */

static void __pyx_pf_8pydecode_5hyper_15LogViterbiChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":584
 * 
 *     def __dealloc__(self):
 *         del self.chart             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 * 
 */
  delete __pyx_v_self->chart;

  /* "pydecode/hyper.pyx":585
 *     def __dealloc__(self):
 *         del self.chart
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _LogViterbiMarginals:
 */
  __pyx_v_self->chart = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals___init__(((struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":591
 *     cdef Hypergraph graph
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals___init__(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":592
 * 
 *     def __init__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals_2__dealloc__(((struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":594
 *         self.thisptr = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":595
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, const CLogViterbiMarginals *ptr, Hypergraph graph):
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":597
 *         del self.thisptr
 * 
 *     cdef init(self, const CLogViterbiMarginals *ptr, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         self.graph = graph
 */

static PyObject *__pyx_f_8pydecode_5hyper_20_LogViterbiMarginals_init(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *__pyx_v_self, Marginals<LogViterbiPotential> const *__pyx_v_ptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":598
 * 
 *     cdef init(self, const CLogViterbiMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.graph = graph
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":599
 *     cdef init(self, const CLogViterbiMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr
 *         self.graph = graph             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->graph));
  __pyx_v_self->graph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":600
 *         self.thisptr = ptr
 *         self.graph = graph
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals_4__getitem__(((struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":602
 *         return self
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Edge):
 *             return _LogViterbiW_from_cpp(
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":603
 * 
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             return _LogViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":604
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):
 *             return _LogViterbiW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":605
 *         if isinstance(obj, Edge):
 *             return _LogViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))             # <<<<<<<<<<<<<<
 *         elif isinstance(obj, Node):
 *             return _LogViterbiW_from_cpp(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "pydecode/hyper.pyx":606
 *             return _LogViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             return _LogViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":607
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 *             return _LogViterbiW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":608
 *         elif isinstance(obj, Node):
 *             return _LogViterbiW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))             # <<<<<<<<<<<<<<
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__LogViterbiW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":610
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(             # <<<<<<<<<<<<<<
 *                 "Only nodes and edges have LogViterbi marginal values." + \
 *                 "Passed %s."%obj)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__py_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":612
 *             raise py_hypergraph.HypergraphAccessException(
 *                 "Only nodes and edges have LogViterbi marginal values." + \
 *                 "Passed %s."%obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_7), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pydecode.hyper._LogViterbiMarginals.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_7threshold(PyObject *__pyx_v_self, PyObject *__pyx_arg_semi); /*proto*/
static char __pyx_doc_8pydecode_5hyper_20_LogViterbiMarginals_6threshold[] = "_LogViterbiMarginals.threshold(self, double semi)";
static PyObject *__pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_7threshold(PyObject *__pyx_v_self, PyObject *__pyx_arg_semi) {
  double __pyx_v_semi;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("threshold (wrapper)", 0);
  assert(__pyx_arg_semi); {
    __pyx_v_semi = __pyx_PyFloat_AsDouble(__pyx_arg_semi); if (unlikely((__pyx_v_semi == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper._LogViterbiMarginals.threshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals_6threshold(((struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)__pyx_v_self), ((double)__pyx_v_semi));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":615
 * 
 * 
 *     def threshold(self, double semi):             # <<<<<<<<<<<<<<
 *         return BoolPotentials(self.graph).init(self.thisptr.threshold(semi), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20_LogViterbiMarginals_6threshold(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *__pyx_v_self, double __pyx_v_semi) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("threshold", 0);

  /* "pydecode/hyper.pyx":616
 * 
 *     def threshold(self, double semi):
 *         return BoolPotentials(self.graph).init(self.thisptr.threshold(semi), None)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *)((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2), __pyx_v_self->thisptr->threshold(__pyx_v_semi), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper._LogViterbiMarginals.threshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10LogViterbi_inside[] = "LogViterbi.inside(Hypergraph graph, LogViterbiPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_10LogViterbi_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10LogViterbi_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10LogViterbi_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_LogViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_10LogViterbi_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":626
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                LogViterbiPotentials potentials):
 *         cdef LogViterbiChart chart = LogViterbiChart()
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials) {
  struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<LogViterbiPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":628
 *     def inside(Hypergraph graph,
 *                LogViterbiPotentials potentials):
 *         cdef LogViterbiChart chart = LogViterbiChart()             # <<<<<<<<<<<<<<
 *         chart.chart = inside_LogViterbi(graph.thisptr, deref(potentials.thisptr))
 *         return chart
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":629
 *                LogViterbiPotentials potentials):
 *         cdef LogViterbiChart chart = LogViterbiChart()
 *         chart.chart = inside_LogViterbi(graph.thisptr, deref(potentials.thisptr))             # <<<<<<<<<<<<<<
 *         return chart
 * 
 */
  try {
    __pyx_t_2 = general_inside<LogViterbiPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":630
 *         cdef LogViterbiChart chart = LogViterbiChart()
 *         chart.chart = inside_LogViterbi(graph.thisptr, deref(potentials.thisptr))
 *         return chart             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_chart));
  __pyx_r = ((PyObject *)__pyx_v_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10LogViterbi_2outside[] = "LogViterbi.outside(Hypergraph graph, LogViterbiPotentials potentials, LogViterbiChart inside_chart)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_10LogViterbi_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10LogViterbi_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10LogViterbi_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)values[1]);
    __pyx_v_inside_chart = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_LogViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inside_chart), __pyx_ptype_8pydecode_5hyper_LogViterbiChart, 1, "inside_chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_10LogViterbi_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":633
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 LogViterbiPotentials potentials,
 *                 LogViterbiChart inside_chart):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_inside_chart) {
  struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_out_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<LogViterbiPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":636
 *                 LogViterbiPotentials potentials,
 *                 LogViterbiChart inside_chart):
 *         cdef LogViterbiChart out_chart = LogViterbiChart()             # <<<<<<<<<<<<<<
 *         out_chart.chart = outside_LogViterbi(graph.thisptr,
 *                                              deref(potentials.thisptr),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out_chart = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":639
 *         out_chart.chart = outside_LogViterbi(graph.thisptr,
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))             # <<<<<<<<<<<<<<
 *         return out_chart
 * 
 */
  try {
    __pyx_t_2 = general_outside<LogViterbiPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_inside_chart->chart));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":637
 *                 LogViterbiChart inside_chart):
 *         cdef LogViterbiChart out_chart = LogViterbiChart()
 *         out_chart.chart = outside_LogViterbi(graph.thisptr,             # <<<<<<<<<<<<<<
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 */
  __pyx_v_out_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":640
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 *         return out_chart             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out_chart));
  __pyx_r = ((PyObject *)__pyx_v_out_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_5viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10LogViterbi_4viterbi[] = "LogViterbi.viterbi(Hypergraph graph, LogViterbiPotentials potentials, LogViterbiChart chart=None)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_10LogViterbi_5viterbi = {__Pyx_NAMESTR("viterbi"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10LogViterbi_5viterbi, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10LogViterbi_4viterbi)};
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_5viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("viterbi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__chart,0};
    PyObject* values[3] = {0,0,0};

    /* "pydecode/hyper.pyx":646
 *     def viterbi(Hypergraph graph,
 *                 LogViterbiPotentials potentials,
 *                 LogViterbiChart chart=None):             # <<<<<<<<<<<<<<
 *         cdef CLogViterbiChart *used_chart
 *         if chart is not None:
 */
    values[2] = (PyObject *)((struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)((PyObject *)Py_None));
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("viterbi", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__chart);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "viterbi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)values[1]);
    __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("viterbi", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_LogViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_chart), __pyx_ptype_8pydecode_5hyper_LogViterbiChart, 1, "chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_10LogViterbi_4viterbi(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":644
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 LogViterbiPotentials potentials,
 *                 LogViterbiChart chart=None):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_4viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *__pyx_v_chart) {
  Chart<LogViterbiPotential> *__pyx_v_used_chart;
  Hyperpath *__pyx_v_path;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Chart<LogViterbiPotential> *__pyx_t_3;
  Hyperpath *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("viterbi", 0);

  /* "pydecode/hyper.pyx":648
 *                 LogViterbiChart chart=None):
 *         cdef CLogViterbiChart *used_chart
 *         if chart is not None:             # <<<<<<<<<<<<<<
 *             used_chart = chart.chart
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_chart) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":649
 *         cdef CLogViterbiChart *used_chart
 *         if chart is not None:
 *             used_chart = chart.chart             # <<<<<<<<<<<<<<
 *         else:
 *             used_chart = new CLogViterbiChart(graph.thisptr)
 */
    __pyx_t_3 = __pyx_v_chart->chart;
    __pyx_v_used_chart = __pyx_t_3;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":651
 *             used_chart = chart.chart
 *         else:
 *             used_chart = new CLogViterbiChart(graph.thisptr)             # <<<<<<<<<<<<<<
 *         cdef CHyperpath *path = \
 *             viterbi_LogViterbi(graph.thisptr,
 */
    __pyx_v_used_chart = new Chart<LogViterbiPotential>(__pyx_v_graph->thisptr);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":655
 *             viterbi_LogViterbi(graph.thisptr,
 *                                deref(potentials.thisptr),
 *                                used_chart)             # <<<<<<<<<<<<<<
 *         if chart is None:
 *             del used_chart
 */
  try {
    __pyx_t_4 = general_viterbi<LogViterbiPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), __pyx_v_used_chart);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_path = __pyx_t_4;

  /* "pydecode/hyper.pyx":656
 *                                deref(potentials.thisptr),
 *                                used_chart)
 *         if chart is None:             # <<<<<<<<<<<<<<
 *             del used_chart
 *         return Path().init(path, graph)
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_chart) == Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":657
 *                                used_chart)
 *         if chart is None:
 *             del used_chart             # <<<<<<<<<<<<<<
 *         return Path().init(path, graph)
 * 
 */
    delete __pyx_v_used_chart;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "pydecode/hyper.pyx":658
 *         if chart is None:
 *             del used_chart
 *         return Path().init(path, graph)             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Path)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *)((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_5)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_5), __pyx_v_path, __pyx_v_graph)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_7count_constrained_viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10LogViterbi_6count_constrained_viterbi[] = "LogViterbi.count_constrained_viterbi(Hypergraph graph, LogViterbiPotentials potentials, CountingPotentials count_potentials, int limit)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_10LogViterbi_7count_constrained_viterbi = {__Pyx_NAMESTR("count_constrained_viterbi"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10LogViterbi_7count_constrained_viterbi, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10LogViterbi_6count_constrained_viterbi)};
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_7count_constrained_viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials = 0;
  int __pyx_v_limit;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("count_constrained_viterbi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__count_potentials,&__pyx_n_s__limit,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__count_potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__limit)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "count_constrained_viterbi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)values[1]);
    __pyx_v_count_potentials = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)values[2]);
    __pyx_v_limit = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_limit == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 664; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.count_constrained_viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_LogViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_count_potentials), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "count_potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_10LogViterbi_6count_constrained_viterbi(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_count_potentials, __pyx_v_limit);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":661
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   LogViterbiPotentials potentials,
 *                                   CountingPotentials count_potentials,
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_6count_constrained_viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials, int __pyx_v_limit) {
  Hyperpath *__pyx_v_path;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Hyperpath *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("count_constrained_viterbi", 0);

  /* "pydecode/hyper.pyx":669
 *                                                  deref(potentials.thisptr),
 *                                                  deref(count_potentials.thisptr),
 *                                                  limit)             # <<<<<<<<<<<<<<
 *         return Path().init(path, graph)
 * 
 */
  try {
    __pyx_t_1 = count_constrained_viterbi<LogViterbiPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_count_potentials->thisptr), __pyx_v_limit);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_path = __pyx_t_1;

  /* "pydecode/hyper.pyx":670
 *                                                  deref(count_potentials.thisptr),
 *                                                  limit)
 *         return Path().init(path, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Path)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *)((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_2), __pyx_v_path, __pyx_v_graph)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.count_constrained_viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10LogViterbi_8compute_marginals[] = "LogViterbi.compute_marginals(Hypergraph graph, LogViterbiPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_10LogViterbi_9compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10LogViterbi_9compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10LogViterbi_8compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_LogViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_10LogViterbi_8compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":675
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           LogViterbiPotentials potentials):
 *         cdef const CLogViterbiMarginals *marginals = \
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials) {
  Marginals<LogViterbiPotential> const *__pyx_v_marginals;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":678
 *                           LogViterbiPotentials potentials):
 *         cdef const CLogViterbiMarginals *marginals = \
 *             LogViterbi_compute(graph.thisptr, potentials.thisptr)             # <<<<<<<<<<<<<<
 *         return _LogViterbiMarginals().init(marginals, graph)
 * 
 */
  __pyx_v_marginals = Marginals<LogViterbiPotential>::compute(__pyx_v_graph->thisptr, __pyx_v_potentials->thisptr);

  /* "pydecode/hyper.pyx":679
 *         cdef const CLogViterbiMarginals *marginals = \
 *             LogViterbi_compute(graph.thisptr, potentials.thisptr)
 *         return _LogViterbiMarginals().init(marginals, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__LogViterbiMarginals)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper__LogViterbiMarginals *)((struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)__pyx_t_1), __pyx_v_marginals, __pyx_v_graph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_11prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10LogViterbi_10prune_hypergraph[] = "LogViterbi.prune_hypergraph(Hypergraph graph, LogViterbiPotentials potentials, threshold)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_10LogViterbi_11prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10LogViterbi_11prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10LogViterbi_10prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_10LogViterbi_11prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_threshold = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__threshold,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__threshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)values[1]);
    __pyx_v_threshold = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_LogViterbiPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_10LogViterbi_10prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_threshold);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":683
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          LogViterbiPotentials potentials,
 *                          threshold):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10LogViterbi_10prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold) {
  PyObject *__pyx_v_marginals = NULL;
  PyObject *__pyx_v_bool_potentials = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":686
 *                          LogViterbiPotentials potentials,
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(((PyObject *)__pyx_v_potentials));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_potentials));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_potentials));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_marginals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pydecode/hyper.pyx":687
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)             # <<<<<<<<<<<<<<
 *         return make_pruning_projections(graph, bool_potentials)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_marginals, __pyx_n_s__threshold); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_threshold);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_threshold);
  __Pyx_GIVEREF(__pyx_v_threshold);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_bool_potentials = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":688
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_bool_potentials);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_bool_potentials);
  __Pyx_GIVEREF(__pyx_v_bool_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.LogViterbi.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_marginals);
  __Pyx_XDECREF(__pyx_v_bool_potentials);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_16InsidePotentials_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_16InsidePotentials_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_16InsidePotentials___dealloc__(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":700
 *     """
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = NULL
 */

static void __pyx_pf_8pydecode_5hyper_16InsidePotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":701
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "pydecode/hyper.pyx":702
 *     def __dealloc__(self):
 *         del self.thisptr
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_16InsidePotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_16InsidePotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 705; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 705; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_2__cinit__(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":705
 * 
 * 
 *     def __cinit__(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         """
 *         Build the potential vector for a hypergraph.
 */

static int __pyx_pf_8pydecode_5hyper_16InsidePotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":711
 *         :param hypergraph: The underlying hypergraph.
 *         """
 *         self.hypergraph = graph             # <<<<<<<<<<<<<<
 *         self.kind = Inside
 *         self.thisptr = NULL
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->hypergraph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_v_self->hypergraph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":712
 *         """
 *         self.hypergraph = graph
 *         self.kind = Inside             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__Inside); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":713
 *         self.hypergraph = graph
 *         self.kind = Inside
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def times(self, InsidePotentials other):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_4times[] = "InsidePotentials.times(self, InsidePotentials other)";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("times (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_InsidePotentials, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_4times(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":715
 *         self.thisptr = NULL
 * 
 *     def times(self, InsidePotentials other):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphInsidePotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_4times(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_other) {
  HypergraphPotentials<InsidePotential> *__pyx_v_new_potentials;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("times", 0);

  /* "pydecode/hyper.pyx":717
 *     def times(self, InsidePotentials other):
 *         cdef CHypergraphInsidePotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))             # <<<<<<<<<<<<<<
 *         return InsidePotentials(self.hypergraph).init(new_potentials, None)
 * 
 */
  __pyx_v_new_potentials = __pyx_v_self->thisptr->times((*__pyx_v_other->thisptr));

  /* "pydecode/hyper.pyx":718
 *         cdef CHypergraphInsidePotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 *         return InsidePotentials(self.hypergraph).init(new_potentials, None)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_InsidePotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_InsidePotentials *)((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_t_2), __pyx_v_new_potentials, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_6clone[] = "InsidePotentials.clone(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_6clone(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":720
 *         return InsidePotentials(self.hypergraph).init(new_potentials, None)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         return InsidePotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_6clone(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pydecode/hyper.pyx":721
 * 
 *     def clone(self):
 *         return InsidePotentials(self.hypergraph).init(self.thisptr.clone(), None)             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_InsidePotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_InsidePotentials *)((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_t_2), __pyx_v_self->thisptr->clone(), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_8project[] = "InsidePotentials.project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_8project(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":723
 *         return InsidePotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 *     def project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphInsidePotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_8project(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<InsidePotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":725
 *     def project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphInsidePotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))             # <<<<<<<<<<<<<<
 *         return InsidePotentials(graph).init(ptr, None)
 * 
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->project_potentials((*__pyx_v_projection->thisptr));

  /* "pydecode/hyper.pyx":726
 *         cdef CHypergraphInsidePotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 *         return InsidePotentials(graph).init(ptr, None)             # <<<<<<<<<<<<<<
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_InsidePotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_InsidePotentials *)((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_t_2), __pyx_v_ptr, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_10up_project[] = "InsidePotentials.up_project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("up_project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "up_project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_10up_project(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":728
 *         return InsidePotentials(graph).init(ptr, None)
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphInsidePotentials *ptr = \
 *             cmake_projected_potentials_Inside(self.thisptr, projection.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<InsidePotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  HypergraphPotentials<InsidePotential> *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("up_project", 0);

  /* "pydecode/hyper.pyx":730
 *     def up_project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphInsidePotentials *ptr = \
 *             cmake_projected_potentials_Inside(self.thisptr, projection.thisptr)             # <<<<<<<<<<<<<<
 *         return InsidePotentials(graph).init(ptr, projection)
 * 
 */
  try {
    __pyx_t_1 = HypergraphProjectedPotentials<InsidePotential>::make_potentials(__pyx_v_self->thisptr, __pyx_v_projection->thisptr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_ptr = __pyx_t_1;

  /* "pydecode/hyper.pyx":731
 *         cdef CHypergraphInsidePotentials *ptr = \
 *             cmake_projected_potentials_Inside(self.thisptr, projection.thisptr)
 *         return InsidePotentials(graph).init(ptr, projection)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, Hypergraph graph):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_InsidePotentials)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_InsidePotentials *)((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_t_3)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_t_3), __pyx_v_ptr, __pyx_v_projection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_12show[] = "InsidePotentials.show(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_12show(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":733
 *         return InsidePotentials(graph).init(ptr, projection)
 * 
 *     def show(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_12show(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "pydecode/hyper.pyx":734
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__join); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pydecode/hyper.pyx":735
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":734
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__label); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_edge);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_edge);
    __Pyx_GIVEREF(__pyx_v_edge);
    __pyx_t_8 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_edge); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_8 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_4kind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_4kind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_4kind___get__(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":739
 * 
 *     property kind:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.kind
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":740
 *     property kind:
 *         def __get__(self):
 *             return self.kind             # <<<<<<<<<<<<<<
 * 
 *     property bias:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kind);
  __pyx_r = __pyx_v_self->kind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_4bias_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_4bias_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_4bias___get__(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":743
 * 
 *     property bias:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return _InsideW_from_cpp(self.thisptr.bias())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":744
 *     property bias:
 *         def __get__(self):
 *             return _InsideW_from_cpp(self.thisptr.bias())             # <<<<<<<<<<<<<<
 * 
 *     def build(self, fn, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__InsideW_from_cpp(__pyx_v_self->thisptr->bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.bias.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_14build[] = "InsidePotentials.build(self, fn, bias=None)\n\n        build(fn)\n\n        Build the potential vector for a hypergraph.\n\n        :param fn: A function from edge labels to potentials.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fn = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":746
 *             return _InsideW_from_cpp(self.thisptr.bias())
 * 
 *     def build(self, fn, bias=None):             # <<<<<<<<<<<<<<
 *         """
 *         build(fn)
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 746; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fn = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("build", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 746; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_14build(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), __pyx_v_fn, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_14build(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias) {
  double __pyx_v_my_bias;
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ty = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  std::vector<double> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  size_t __pyx_t_11;
  HypergraphPotentials<InsidePotential> *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build", 0);

  /* "pydecode/hyper.pyx":755
 *         """
 *         cdef double my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Inside_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":756
 *         cdef double my_bias
 *         if bias is None:
 *             my_bias = Inside_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _InsideW_to_cpp(bias)
 */
    __pyx_v_my_bias = InsidePotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":758
 *             my_bias = Inside_one()
 *         else:
 *             my_bias = _InsideW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[double] potentials = \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_bias); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__InsideW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":762
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size(),
 *              Inside_zero())             # <<<<<<<<<<<<<<
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 */
  try {
    __pyx_t_4 = std::vector<double>(__pyx_v_self->hypergraph->thisptr->edges().size(), InsidePotential::zero());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":764
 *              Inside_zero())
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):             # <<<<<<<<<<<<<<
 *             result = fn(ty)
 *             if result is None: potentials[i] = Inside_zero()
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_self->hypergraph->edge_labels) || PyTuple_CheckExact(__pyx_v_self->hypergraph->edge_labels)) {
    __pyx_t_6 = __pyx_v_self->hypergraph->edge_labels; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_self->hypergraph->edge_labels); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_ty, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":765
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)             # <<<<<<<<<<<<<<
 *             if result is None: potentials[i] = Inside_zero()
 *             potentials[i] = _InsideW_to_cpp(result)
 */
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_ty);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_ty);
    __Pyx_GIVEREF(__pyx_v_ty);
    __pyx_t_10 = PyObject_Call(__pyx_v_fn, ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_result, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":766
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)
 *             if result is None: potentials[i] = Inside_zero()             # <<<<<<<<<<<<<<
 *             potentials[i] = _InsideW_to_cpp(result)
 *         self.thisptr =  \
 */
    __pyx_t_2 = (__pyx_v_result == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {
      __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_potentials[__pyx_t_11]) = InsidePotential::zero();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "pydecode/hyper.pyx":767
 *             result = fn(ty)
 *             if result is None: potentials[i] = Inside_zero()
 *             potentials[i] = _InsideW_to_cpp(result)             # <<<<<<<<<<<<<<
 *         self.thisptr =  \
 *             cmake_potentials_Inside(self.hypergraph.thisptr,
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_result); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_11]) = __pyx_f_8pydecode_5hyper__InsideW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":770
 *         self.thisptr =  \
 *             cmake_potentials_Inside(self.hypergraph.thisptr,
 *                                        potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_12 = HypergraphVectorPotentials<InsidePotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":768
 *             if result is None: potentials[i] = Inside_zero()
 *             potentials[i] = _InsideW_to_cpp(result)
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *             cmake_potentials_Inside(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_12;

  /* "pydecode/hyper.pyx":771
 *             cmake_potentials_Inside(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_potentials(self, other_potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ty);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_16from_potentials[] = "InsidePotentials.from_potentials(self, other_potentials)";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_potentials (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_16from_potentials(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), ((PyObject *)__pyx_v_other_potentials));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":773
 *         return self
 * 
 *     def from_potentials(self, other_potentials):             # <<<<<<<<<<<<<<
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size())
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<double> __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  double __pyx_t_7;
  size_t __pyx_t_8;
  HypergraphPotentials<InsidePotential> *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_potentials", 0);

  /* "pydecode/hyper.pyx":775
 *     def from_potentials(self, other_potentials):
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 */
  try {
    __pyx_t_1 = std::vector<double>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_1;

  /* "pydecode/hyper.pyx":777
 *              vector[double](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):             # <<<<<<<<<<<<<<
 *             potentials[i] = _InsideW_to_cpp(other_potentials[edge])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->hypergraph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":778
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 *             potentials[i] = _InsideW_to_cpp(other_potentials[edge])             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_other_potentials, __pyx_v_edge); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_8]) = __pyx_f_8pydecode_5hyper__InsideW_to_cpp(__pyx_t_7);
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":784
 *             self.hypergraph.thisptr,
 *             potentials,
 *             _InsideW_to_cpp(other_potentials.bias))             # <<<<<<<<<<<<<<
 * 
 *         return self
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_other_potentials, __pyx_n_s__bias); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_9 = HypergraphVectorPotentials<InsidePotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_f_8pydecode_5hyper__InsideW_to_cpp(__pyx_t_7));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":780
 *             potentials[i] = _InsideW_to_cpp(other_potentials[edge])
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Inside(
 *             self.hypergraph.thisptr,
 */
  __pyx_v_self->thisptr = __pyx_t_9;

  /* "pydecode/hyper.pyx":786
 *             _InsideW_to_cpp(other_potentials.bias))
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_vector(self, in_vec, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.from_potentials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_18from_vector[] = "InsidePotentials.from_vector(self, in_vec, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_vec = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_vector (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_vec,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":788
 *         return self
 * 
 *     def from_vector(self, in_vec, bias=None):             # <<<<<<<<<<<<<<
 *         cdef double my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_vector") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 788; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_vec = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_vector", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 788; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_18from_vector(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), __pyx_v_in_vec, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias) {
  double __pyx_v_my_bias;
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  std::vector<double> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  HypergraphPotentials<InsidePotential> *__pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_vector", 0);

  /* "pydecode/hyper.pyx":790
 *     def from_vector(self, in_vec, bias=None):
 *         cdef double my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Inside_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":791
 *         cdef double my_bias
 *         if bias is None:
 *             my_bias = Inside_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _InsideW_to_cpp(bias)
 */
    __pyx_v_my_bias = InsidePotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":793
 *             my_bias = Inside_one()
 *         else:
 *             my_bias = _InsideW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[double] potentials = \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_bias); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__InsideW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":796
 * 
 *         cdef vector[double] potentials = \
 *              vector[double](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, v in enumerate(in_vec):
 */
  try {
    __pyx_t_4 = std::vector<double>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":798
 *              vector[double](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, v in enumerate(in_vec):             # <<<<<<<<<<<<<<
 *             potentials[i] = _InsideW_to_cpp(v)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_in_vec) || PyTuple_CheckExact(__pyx_v_in_vec)) {
    __pyx_t_6 = __pyx_v_in_vec; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_in_vec); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":799
 * 
 *         for i, v in enumerate(in_vec):
 *             potentials[i] = _InsideW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_v); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_10]) = __pyx_f_8pydecode_5hyper__InsideW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":803
 *         self.thisptr =  \
 *           cmake_potentials_Inside(self.hypergraph.thisptr,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_11 = HypergraphVectorPotentials<InsidePotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":801
 *             potentials[i] = _InsideW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Inside(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_11;

  /* "pydecode/hyper.pyx":804
 *           cmake_potentials_Inside(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_map(self, in_map, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_20from_map[] = "InsidePotentials.from_map(self, in_map, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_map = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_map (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_map,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":806
 *         return self
 * 
 *     def from_map(self, in_map, bias=None):             # <<<<<<<<<<<<<<
 *         cdef double my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_map)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_map") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_map = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_map", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_20from_map(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), __pyx_v_in_map, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias) {
  double __pyx_v_my_bias;
  std::map<int,int> __pyx_v_map_potentials;
  std::vector<double> __pyx_v_potentials;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  std::vector<double> __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  size_t __pyx_t_14;
  HypergraphPotentials<InsidePotential> *__pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_map", 0);

  /* "pydecode/hyper.pyx":808
 *     def from_map(self, in_map, bias=None):
 *         cdef double my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Inside_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":809
 *         cdef double my_bias
 *         if bias is None:
 *             my_bias = Inside_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _InsideW_to_cpp(bias)
 */
    __pyx_v_my_bias = InsidePotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":811
 *             my_bias = Inside_one()
 *         else:
 *             my_bias = _InsideW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef c_map.map[int,int] map_potentials
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_bias); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__InsideW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":815
 *         cdef c_map.map[int,int] map_potentials
 *         cdef vector[double] potentials = \
 *             vector[double](len(in_map))             # <<<<<<<<<<<<<<
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_in_map); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_5 = std::vector<double>(__pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_5;

  /* "pydecode/hyper.pyx":817
 *             vector[double](len(in_map))
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):             # <<<<<<<<<<<<<<
 *             map_potentials[key] = j
 *             potentials[j] = _InsideW_to_cpp(v)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_6 = __pyx_int_0;
  __pyx_t_4 = 0;
  if (unlikely(__pyx_v_in_map == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_10 = __Pyx_dict_iterator(__pyx_v_in_map, 0, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_10;
  __pyx_t_10 = 0;
  while (1) {
    __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_8, &__pyx_t_4, &__pyx_t_10, &__pyx_t_11, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_12 == 0)) break;
    if (unlikely(__pyx_t_12 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_11);
    __pyx_t_11 = 0;
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_6);
    __pyx_t_11 = PyNumber_Add(__pyx_t_6, __pyx_int_1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_11;
    __pyx_t_11 = 0;

    /* "pydecode/hyper.pyx":818
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j             # <<<<<<<<<<<<<<
 *             potentials[j] = _InsideW_to_cpp(v)
 * 
 */
    __pyx_t_12 = __Pyx_PyInt_AsInt(__pyx_v_j); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_map_potentials[__pyx_t_13]) = __pyx_t_12;

    /* "pydecode/hyper.pyx":819
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j
 *             potentials[j] = _InsideW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_v); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_14 = __Pyx_PyInt_AsSize_t(__pyx_v_j); if (unlikely((__pyx_t_14 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_14]) = __pyx_f_8pydecode_5hyper__InsideW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "pydecode/hyper.pyx":824
 *           cmake_potentials_Inside(self.hypergraph.thisptr,
 *                                       map_potentials,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_15 = HypergraphMapPotentials<InsidePotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_map_potentials, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":821
 *             potentials[j] = _InsideW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Inside(self.hypergraph.thisptr,
 *                                       map_potentials,
 */
  __pyx_v_self->thisptr = __pyx_t_15;

  /* "pydecode/hyper.pyx":825
 *                                       map_potentials,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, CHypergraphInsidePotentials *ptr,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":827
 *         return self
 * 
 *     cdef init(self, CHypergraphInsidePotentials *ptr,             # <<<<<<<<<<<<<<
 *               Projection projection):
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_8pydecode_5hyper_16InsidePotentials_init(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, HypergraphPotentials<InsidePotential> *__pyx_v_ptr, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":829
 *     cdef init(self, CHypergraphInsidePotentials *ptr,
 *               Projection projection):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.projection = projection
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":830
 *               Projection projection):
 *         self.thisptr = ptr
 *         self.projection = projection             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_projection));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_projection));
  __Pyx_GOTREF(__pyx_v_self->projection);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->projection));
  __pyx_v_self->projection = __pyx_v_projection;

  /* "pydecode/hyper.pyx":831
 *         self.thisptr = ptr
 *         self.projection = projection
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Edge edge not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), __pyx_ptype_8pydecode_10hypergraph_Edge, 0, "edge", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_22__getitem__(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_edge));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":833
 *         return self
 * 
 *     def __getitem__(self, Edge edge not None):             # <<<<<<<<<<<<<<
 *         return _InsideW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":834
 * 
 *     def __getitem__(self, Edge edge not None):
 *         return _InsideW_from_cpp(self.thisptr.score(edge.edgeptr))             # <<<<<<<<<<<<<<
 * 
 *     def dot(self, Path path not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__InsideW_from_cpp(__pyx_v_self->thisptr->score(__pyx_v_edge->edgeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16InsidePotentials_24dot[] = "InsidePotentials.dot(self, Path path)\n\n        dot(path)\n\n        Take the dot product with `path` :math:`\\theta^{\\top} y`.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_16InsidePotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), __pyx_ptype_8pydecode_10hypergraph_Path, 0, "path", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_16InsidePotentials_24dot(((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_v_path));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":836
 *         return _InsideW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 *     def dot(self, Path path not None):             # <<<<<<<<<<<<<<
 *         r"""
 *         dot(path)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16InsidePotentials_24dot(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "pydecode/hyper.pyx":843
 *         """
 * 
 *         return _InsideW_from_cpp(self.thisptr.dot(deref(path.thisptr)))             # <<<<<<<<<<<<<<
 *         #return _InsideW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->dot((*__pyx_v_path->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_f_8pydecode_5hyper__InsideW_from_cpp(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.InsidePotentials.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_8_InsideW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_8_InsideW_one[] = "_InsideW.one()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_8_InsideW_1one = {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_8_InsideW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_8_InsideW_one)};
static PyObject *__pyx_pw_8pydecode_5hyper_8_InsideW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("one (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("one", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "one", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_8_InsideW_one();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":848
 * cdef class _InsideW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _InsideW_from_cpp(Inside_one())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_8_InsideW_one() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("one", 0);

  /* "pydecode/hyper.pyx":849
 *     @staticmethod
 *     def one():
 *         return _InsideW_from_cpp(Inside_one())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__InsideW_from_cpp(InsidePotential::one()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._InsideW.one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_8_InsideW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_8_InsideW_2zero[] = "_InsideW.zero()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_8_InsideW_3zero = {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_8_InsideW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_8_InsideW_2zero)};
static PyObject *__pyx_pw_8pydecode_5hyper_8_InsideW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zero (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("zero", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "zero", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_8_InsideW_2zero();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":852
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _InsideW_from_cpp(Inside_zero())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_8_InsideW_2zero() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zero", 0);

  /* "pydecode/hyper.pyx":853
 *     @staticmethod
 *     def zero():
 *         return _InsideW_from_cpp(Inside_zero())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__InsideW_from_cpp(InsidePotential::zero()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._InsideW.zero", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":856
 * 
 * 
 * cdef double _InsideW_to_cpp(double val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static double __pyx_f_8pydecode_5hyper__InsideW_to_cpp(double __pyx_v_val) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_InsideW_to_cpp", 0);

  /* "pydecode/hyper.pyx":858
 * cdef double _InsideW_to_cpp(double val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_val;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":862
 * 
 * 
 * cdef _InsideW_from_cpp(double val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static PyObject *__pyx_f_8pydecode_5hyper__InsideW_from_cpp(double __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_InsideW_from_cpp", 0);

  /* "pydecode/hyper.pyx":864
 * cdef _InsideW_from_cpp(double val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._InsideW_from_cpp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_11InsideChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_11InsideChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};

    /* "pydecode/hyper.pyx":905
 * cdef class InsideChart:
 * 
 *     def __init__(self, Hypergraph graph=None):             # <<<<<<<<<<<<<<
 *         self.kind = Inside
 *         self.chart = NULL
 */
    values[0] = (PyObject *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 905; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 905; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.InsideChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 905; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_11InsideChart___init__(((struct __pyx_obj_8pydecode_5hyper_InsideChart *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pydecode_5hyper_11InsideChart___init__(struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":906
 * 
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = Inside             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 *         if graph is not None:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__Inside); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":907
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = Inside
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 *         if graph is not None:
 *             self.chart = new CInsideChart(graph.thisptr)
 */
  __pyx_v_self->chart = NULL;

  /* "pydecode/hyper.pyx":908
 *         self.kind = Inside
 *         self.chart = NULL
 *         if graph is not None:             # <<<<<<<<<<<<<<
 *             self.chart = new CInsideChart(graph.thisptr)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_graph) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pydecode/hyper.pyx":909
 *         self.chart = NULL
 *         if graph is not None:
 *             self.chart = new CInsideChart(graph.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Node node):
 */
    __pyx_v_self->chart = new Chart<InsidePotential>(__pyx_v_graph->thisptr);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.InsideChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_11InsideChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_11InsideChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_8pydecode_10hypergraph_Node, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_11InsideChart_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_InsideChart *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_node));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":911
 *             self.chart = new CInsideChart(graph.thisptr)
 * 
 *     def __getitem__(self, Node node):             # <<<<<<<<<<<<<<
 *         return _InsideW_from_cpp(self.chart.get(node.nodeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_11InsideChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":912
 * 
 *     def __getitem__(self, Node node):
 *         return _InsideW_from_cpp(self.chart.get(node.nodeptr))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__InsideW_from_cpp(__pyx_v_self->chart->get(__pyx_v_node->nodeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.InsideChart.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_11InsideChart_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_11InsideChart_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_11InsideChart_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_InsideChart *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":914
 *         return _InsideW_from_cpp(self.chart.get(node.nodeptr))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.chart
 *         self.chart = NULL
 */

static void __pyx_pf_8pydecode_5hyper_11InsideChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":915
 * 
 *     def __dealloc__(self):
 *         del self.chart             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 * 
 */
  delete __pyx_v_self->chart;

  /* "pydecode/hyper.pyx":916
 *     def __dealloc__(self):
 *         del self.chart
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _InsideMarginals:
 */
  __pyx_v_self->chart = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_16_InsideMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_16_InsideMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_16_InsideMarginals___init__(((struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":922
 *     cdef Hypergraph graph
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_16_InsideMarginals___init__(struct __pyx_obj_8pydecode_5hyper__InsideMarginals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":923
 * 
 *     def __init__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_16_InsideMarginals_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_16_InsideMarginals_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_16_InsideMarginals_2__dealloc__(((struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":925
 *         self.thisptr = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_8pydecode_5hyper_16_InsideMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__InsideMarginals *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":926
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, const CInsideMarginals *ptr, Hypergraph graph):
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":928
 *         del self.thisptr
 * 
 *     cdef init(self, const CInsideMarginals *ptr, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         self.graph = graph
 */

static PyObject *__pyx_f_8pydecode_5hyper_16_InsideMarginals_init(struct __pyx_obj_8pydecode_5hyper__InsideMarginals *__pyx_v_self, Marginals<InsidePotential> const *__pyx_v_ptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":929
 * 
 *     cdef init(self, const CInsideMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.graph = graph
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":930
 *     cdef init(self, const CInsideMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr
 *         self.graph = graph             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->graph));
  __pyx_v_self->graph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":931
 *         self.thisptr = ptr
 *         self.graph = graph
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16_InsideMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_16_InsideMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_16_InsideMarginals_4__getitem__(((struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":933
 *         return self
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Edge):
 *             return _InsideW_from_cpp(
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16_InsideMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__InsideMarginals *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":934
 * 
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             return _InsideW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":935
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):
 *             return _InsideW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":936
 *         if isinstance(obj, Edge):
 *             return _InsideW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))             # <<<<<<<<<<<<<<
 *         elif isinstance(obj, Node):
 *             return _InsideW_from_cpp(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__InsideW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 935; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "pydecode/hyper.pyx":937
 *             return _InsideW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             return _InsideW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":938
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 *             return _InsideW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":939
 *         elif isinstance(obj, Node):
 *             return _InsideW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))             # <<<<<<<<<<<<<<
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__InsideW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":941
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(             # <<<<<<<<<<<<<<
 *                 "Only nodes and edges have Inside marginal values." + \
 *                 "Passed %s."%obj)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__py_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":943
 *             raise py_hypergraph.HypergraphAccessException(
 *                 "Only nodes and edges have Inside marginal values." + \
 *                 "Passed %s."%obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_8), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pydecode.hyper._InsideMarginals.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_16_InsideMarginals_7threshold(PyObject *__pyx_v_self, PyObject *__pyx_arg_semi); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16_InsideMarginals_6threshold[] = "_InsideMarginals.threshold(self, double semi)";
static PyObject *__pyx_pw_8pydecode_5hyper_16_InsideMarginals_7threshold(PyObject *__pyx_v_self, PyObject *__pyx_arg_semi) {
  double __pyx_v_semi;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("threshold (wrapper)", 0);
  assert(__pyx_arg_semi); {
    __pyx_v_semi = __pyx_PyFloat_AsDouble(__pyx_arg_semi); if (unlikely((__pyx_v_semi == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper._InsideMarginals.threshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_16_InsideMarginals_6threshold(((struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)__pyx_v_self), ((double)__pyx_v_semi));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":946
 * 
 * 
 *     def threshold(self, double semi):             # <<<<<<<<<<<<<<
 *         return BoolPotentials(self.graph).init(self.thisptr.threshold(semi), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16_InsideMarginals_6threshold(struct __pyx_obj_8pydecode_5hyper__InsideMarginals *__pyx_v_self, double __pyx_v_semi) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("threshold", 0);

  /* "pydecode/hyper.pyx":947
 * 
 *     def threshold(self, double semi):
 *         return BoolPotentials(self.graph).init(self.thisptr.threshold(semi), None)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *)((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2), __pyx_v_self->thisptr->threshold(__pyx_v_semi), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper._InsideMarginals.threshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_6Inside_inside[] = "Inside.inside(Hypergraph graph, InsidePotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_6Inside_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6Inside_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6Inside_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Inside.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_InsidePotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 958; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_6Inside_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":957
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                InsidePotentials potentials):
 *         cdef InsideChart chart = InsideChart()
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials) {
  struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<InsidePotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":959
 *     def inside(Hypergraph graph,
 *                InsidePotentials potentials):
 *         cdef InsideChart chart = InsideChart()             # <<<<<<<<<<<<<<
 *         chart.chart = inside_Inside(graph.thisptr, deref(potentials.thisptr))
 *         return chart
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_InsideChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_InsideChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":960
 *                InsidePotentials potentials):
 *         cdef InsideChart chart = InsideChart()
 *         chart.chart = inside_Inside(graph.thisptr, deref(potentials.thisptr))             # <<<<<<<<<<<<<<
 *         return chart
 * 
 */
  try {
    __pyx_t_2 = general_inside<InsidePotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":961
 *         cdef InsideChart chart = InsideChart()
 *         chart.chart = inside_Inside(graph.thisptr, deref(potentials.thisptr))
 *         return chart             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_chart));
  __pyx_r = ((PyObject *)__pyx_v_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Inside.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_6Inside_2outside[] = "Inside.outside(Hypergraph graph, InsidePotentials potentials, InsideChart inside_chart)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_6Inside_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6Inside_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6Inside_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)values[1]);
    __pyx_v_inside_chart = ((struct __pyx_obj_8pydecode_5hyper_InsideChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Inside.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_InsidePotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inside_chart), __pyx_ptype_8pydecode_5hyper_InsideChart, 1, "inside_chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 966; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_6Inside_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":964
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 InsidePotentials potentials,
 *                 InsideChart inside_chart):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_inside_chart) {
  struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_out_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<InsidePotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":967
 *                 InsidePotentials potentials,
 *                 InsideChart inside_chart):
 *         cdef InsideChart out_chart = InsideChart()             # <<<<<<<<<<<<<<
 *         out_chart.chart = outside_Inside(graph.thisptr,
 *                                              deref(potentials.thisptr),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_InsideChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out_chart = ((struct __pyx_obj_8pydecode_5hyper_InsideChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":970
 *         out_chart.chart = outside_Inside(graph.thisptr,
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))             # <<<<<<<<<<<<<<
 *         return out_chart
 * 
 */
  try {
    __pyx_t_2 = general_outside<InsidePotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_inside_chart->chart));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":968
 *                 InsideChart inside_chart):
 *         cdef InsideChart out_chart = InsideChart()
 *         out_chart.chart = outside_Inside(graph.thisptr,             # <<<<<<<<<<<<<<
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 */
  __pyx_v_out_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":971
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 *         return out_chart             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out_chart));
  __pyx_r = ((PyObject *)__pyx_v_out_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Inside.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_5viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_6Inside_4viterbi[] = "Inside.viterbi(Hypergraph graph, InsidePotentials potentials, InsideChart chart=None)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_6Inside_5viterbi = {__Pyx_NAMESTR("viterbi"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6Inside_5viterbi, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6Inside_4viterbi)};
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_5viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("viterbi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__chart,0};
    PyObject* values[3] = {0,0,0};

    /* "pydecode/hyper.pyx":977
 *     def viterbi(Hypergraph graph,
 *                 InsidePotentials potentials,
 *                 InsideChart chart=None):             # <<<<<<<<<<<<<<
 *         cdef CInsideChart *used_chart
 *         if chart is not None:
 */
    values[2] = (PyObject *)((struct __pyx_obj_8pydecode_5hyper_InsideChart *)((PyObject *)Py_None));
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("viterbi", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__chart);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "viterbi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)values[1]);
    __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_InsideChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("viterbi", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Inside.viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_InsidePotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_chart), __pyx_ptype_8pydecode_5hyper_InsideChart, 1, "chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_6Inside_4viterbi(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":975
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 InsidePotentials potentials,
 *                 InsideChart chart=None):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_4viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_InsideChart *__pyx_v_chart) {
  Chart<InsidePotential> *__pyx_v_used_chart;
  Hyperpath *__pyx_v_path;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Chart<InsidePotential> *__pyx_t_3;
  Hyperpath *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("viterbi", 0);

  /* "pydecode/hyper.pyx":979
 *                 InsideChart chart=None):
 *         cdef CInsideChart *used_chart
 *         if chart is not None:             # <<<<<<<<<<<<<<
 *             used_chart = chart.chart
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_chart) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":980
 *         cdef CInsideChart *used_chart
 *         if chart is not None:
 *             used_chart = chart.chart             # <<<<<<<<<<<<<<
 *         else:
 *             used_chart = new CInsideChart(graph.thisptr)
 */
    __pyx_t_3 = __pyx_v_chart->chart;
    __pyx_v_used_chart = __pyx_t_3;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":982
 *             used_chart = chart.chart
 *         else:
 *             used_chart = new CInsideChart(graph.thisptr)             # <<<<<<<<<<<<<<
 *         cdef CHyperpath *path = \
 *             viterbi_Inside(graph.thisptr,
 */
    __pyx_v_used_chart = new Chart<InsidePotential>(__pyx_v_graph->thisptr);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":986
 *             viterbi_Inside(graph.thisptr,
 *                                deref(potentials.thisptr),
 *                                used_chart)             # <<<<<<<<<<<<<<
 *         if chart is None:
 *             del used_chart
 */
  try {
    __pyx_t_4 = general_viterbi<InsidePotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), __pyx_v_used_chart);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_path = __pyx_t_4;

  /* "pydecode/hyper.pyx":987
 *                                deref(potentials.thisptr),
 *                                used_chart)
 *         if chart is None:             # <<<<<<<<<<<<<<
 *             del used_chart
 *         return Path().init(path, graph)
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_chart) == Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":988
 *                                used_chart)
 *         if chart is None:
 *             del used_chart             # <<<<<<<<<<<<<<
 *         return Path().init(path, graph)
 * 
 */
    delete __pyx_v_used_chart;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "pydecode/hyper.pyx":989
 *         if chart is None:
 *             del used_chart
 *         return Path().init(path, graph)             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Path)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *)((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_5)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_5), __pyx_v_path, __pyx_v_graph)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pydecode.hyper.Inside.viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_7count_constrained_viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_6Inside_6count_constrained_viterbi[] = "Inside.count_constrained_viterbi(Hypergraph graph, InsidePotentials potentials, CountingPotentials count_potentials, int limit)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_6Inside_7count_constrained_viterbi = {__Pyx_NAMESTR("count_constrained_viterbi"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6Inside_7count_constrained_viterbi, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6Inside_6count_constrained_viterbi)};
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_7count_constrained_viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials = 0;
  int __pyx_v_limit;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("count_constrained_viterbi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__count_potentials,&__pyx_n_s__limit,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__count_potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__limit)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "count_constrained_viterbi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)values[1]);
    __pyx_v_count_potentials = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)values[2]);
    __pyx_v_limit = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_limit == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Inside.count_constrained_viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_InsidePotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_count_potentials), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "count_potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 994; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_6Inside_6count_constrained_viterbi(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_count_potentials, __pyx_v_limit);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":992
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   InsidePotentials potentials,
 *                                   CountingPotentials count_potentials,
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_6count_constrained_viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials, int __pyx_v_limit) {
  Hyperpath *__pyx_v_path;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Hyperpath *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("count_constrained_viterbi", 0);

  /* "pydecode/hyper.pyx":1000
 *                                                  deref(potentials.thisptr),
 *                                                  deref(count_potentials.thisptr),
 *                                                  limit)             # <<<<<<<<<<<<<<
 *         return Path().init(path, graph)
 * 
 */
  try {
    __pyx_t_1 = count_constrained_viterbi<InsidePotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_count_potentials->thisptr), __pyx_v_limit);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 997; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_path = __pyx_t_1;

  /* "pydecode/hyper.pyx":1001
 *                                                  deref(count_potentials.thisptr),
 *                                                  limit)
 *         return Path().init(path, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Path)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *)((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_2), __pyx_v_path, __pyx_v_graph)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.Inside.count_constrained_viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_6Inside_8compute_marginals[] = "Inside.compute_marginals(Hypergraph graph, InsidePotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_6Inside_9compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6Inside_9compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6Inside_8compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1006; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1006; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1006; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Inside.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_InsidePotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_6Inside_8compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1006
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           InsidePotentials potentials):
 *         cdef const CInsideMarginals *marginals = \
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials) {
  Marginals<InsidePotential> const *__pyx_v_marginals;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":1009
 *                           InsidePotentials potentials):
 *         cdef const CInsideMarginals *marginals = \
 *             Inside_compute(graph.thisptr, potentials.thisptr)             # <<<<<<<<<<<<<<
 *         return _InsideMarginals().init(marginals, graph)
 * 
 */
  __pyx_v_marginals = Marginals<InsidePotential>::compute(__pyx_v_graph->thisptr, __pyx_v_potentials->thisptr);

  /* "pydecode/hyper.pyx":1010
 *         cdef const CInsideMarginals *marginals = \
 *             Inside_compute(graph.thisptr, potentials.thisptr)
 *         return _InsideMarginals().init(marginals, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__InsideMarginals)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper__InsideMarginals *)((struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)__pyx_t_1), __pyx_v_marginals, __pyx_v_graph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.Inside.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_11prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_6Inside_10prune_hypergraph[] = "Inside.prune_hypergraph(Hypergraph graph, InsidePotentials potentials, threshold)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_6Inside_11prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6Inside_11prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6Inside_10prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_6Inside_11prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_threshold = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__threshold,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__threshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)values[1]);
    __pyx_v_threshold = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Inside.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_InsidePotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_6Inside_10prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_threshold);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1014
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          InsidePotentials potentials,
 *                          threshold):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6Inside_10prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_InsidePotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold) {
  PyObject *__pyx_v_marginals = NULL;
  PyObject *__pyx_v_bool_potentials = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":1017
 *                          InsidePotentials potentials,
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(((PyObject *)__pyx_v_potentials));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_potentials));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_potentials));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_marginals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pydecode/hyper.pyx":1018
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)             # <<<<<<<<<<<<<<
 *         return make_pruning_projections(graph, bool_potentials)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_marginals, __pyx_n_s__threshold); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_threshold);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_threshold);
  __Pyx_GIVEREF(__pyx_v_threshold);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_bool_potentials = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1019
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_bool_potentials);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_bool_potentials);
  __Pyx_GIVEREF(__pyx_v_bool_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.Inside.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_marginals);
  __Pyx_XDECREF(__pyx_v_bool_potentials);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_14BoolPotentials_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_14BoolPotentials_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_14BoolPotentials___dealloc__(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1031
 *     """
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = NULL
 */

static void __pyx_pf_8pydecode_5hyper_14BoolPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1032
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "pydecode/hyper.pyx":1033
 *     def __dealloc__(self):
 *         del self.thisptr
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_14BoolPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_14BoolPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1036; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1036; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_2__cinit__(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1036
 * 
 * 
 *     def __cinit__(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         """
 *         Build the potential vector for a hypergraph.
 */

static int __pyx_pf_8pydecode_5hyper_14BoolPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":1042
 *         :param hypergraph: The underlying hypergraph.
 *         """
 *         self.hypergraph = graph             # <<<<<<<<<<<<<<
 *         self.kind = Bool
 *         self.thisptr = NULL
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->hypergraph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_v_self->hypergraph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":1043
 *         """
 *         self.hypergraph = graph
 *         self.kind = Bool             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__Bool); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1044
 *         self.hypergraph = graph
 *         self.kind = Bool
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def times(self, BoolPotentials other):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_4times[] = "BoolPotentials.times(self, BoolPotentials other)";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("times (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_BoolPotentials, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_4times(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1046
 *         self.thisptr = NULL
 * 
 *     def times(self, BoolPotentials other):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphBoolPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_4times(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_other) {
  HypergraphPotentials<BoolPotential> *__pyx_v_new_potentials;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("times", 0);

  /* "pydecode/hyper.pyx":1048
 *     def times(self, BoolPotentials other):
 *         cdef CHypergraphBoolPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))             # <<<<<<<<<<<<<<
 *         return BoolPotentials(self.hypergraph).init(new_potentials, None)
 * 
 */
  __pyx_v_new_potentials = __pyx_v_self->thisptr->times((*__pyx_v_other->thisptr));

  /* "pydecode/hyper.pyx":1049
 *         cdef CHypergraphBoolPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 *         return BoolPotentials(self.hypergraph).init(new_potentials, None)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *)((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2), __pyx_v_new_potentials, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_6clone[] = "BoolPotentials.clone(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_6clone(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1051
 *         return BoolPotentials(self.hypergraph).init(new_potentials, None)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         return BoolPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pydecode/hyper.pyx":1052
 * 
 *     def clone(self):
 *         return BoolPotentials(self.hypergraph).init(self.thisptr.clone(), None)             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *)((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2), __pyx_v_self->thisptr->clone(), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_8project[] = "BoolPotentials.project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_8project(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1054
 *         return BoolPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 *     def project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphBoolPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_8project(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<BoolPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":1056
 *     def project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphBoolPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))             # <<<<<<<<<<<<<<
 *         return BoolPotentials(graph).init(ptr, None)
 * 
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->project_potentials((*__pyx_v_projection->thisptr));

  /* "pydecode/hyper.pyx":1057
 *         cdef CHypergraphBoolPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 *         return BoolPotentials(graph).init(ptr, None)             # <<<<<<<<<<<<<<
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *)((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2), __pyx_v_ptr, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_10up_project[] = "BoolPotentials.up_project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("up_project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "up_project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_10up_project(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1059
 *         return BoolPotentials(graph).init(ptr, None)
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphBoolPotentials *ptr = \
 *             cmake_projected_potentials_Bool(self.thisptr, projection.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<BoolPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  HypergraphPotentials<BoolPotential> *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("up_project", 0);

  /* "pydecode/hyper.pyx":1061
 *     def up_project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphBoolPotentials *ptr = \
 *             cmake_projected_potentials_Bool(self.thisptr, projection.thisptr)             # <<<<<<<<<<<<<<
 *         return BoolPotentials(graph).init(ptr, projection)
 * 
 */
  try {
    __pyx_t_1 = HypergraphProjectedPotentials<BoolPotential>::make_potentials(__pyx_v_self->thisptr, __pyx_v_projection->thisptr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_ptr = __pyx_t_1;

  /* "pydecode/hyper.pyx":1062
 *         cdef CHypergraphBoolPotentials *ptr = \
 *             cmake_projected_potentials_Bool(self.thisptr, projection.thisptr)
 *         return BoolPotentials(graph).init(ptr, projection)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, Hypergraph graph):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolPotentials)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *)((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_3)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_3), __pyx_v_ptr, __pyx_v_projection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_12show[] = "BoolPotentials.show(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1064; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_12show(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1064
 *         return BoolPotentials(graph).init(ptr, projection)
 * 
 *     def show(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_12show(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "pydecode/hyper.pyx":1065
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__join); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pydecode/hyper.pyx":1066
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1065
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__label); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_edge);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_edge);
    __Pyx_GIVEREF(__pyx_v_edge);
    __pyx_t_8 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_edge); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_8 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_4kind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_4kind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_4kind___get__(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1070
 * 
 *     property kind:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.kind
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":1071
 *     property kind:
 *         def __get__(self):
 *             return self.kind             # <<<<<<<<<<<<<<
 * 
 *     property bias:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kind);
  __pyx_r = __pyx_v_self->kind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_4bias_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_4bias_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_4bias___get__(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1074
 * 
 *     property bias:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return _BoolW_from_cpp(self.thisptr.bias())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":1075
 *     property bias:
 *         def __get__(self):
 *             return _BoolW_from_cpp(self.thisptr.bias())             # <<<<<<<<<<<<<<
 * 
 *     def build(self, fn, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BoolW_from_cpp(__pyx_v_self->thisptr->bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.bias.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_14build[] = "BoolPotentials.build(self, fn, bias=None)\n\n        build(fn)\n\n        Build the potential vector for a hypergraph.\n\n        :param fn: A function from edge labels to potentials.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fn = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":1077
 *             return _BoolW_from_cpp(self.thisptr.bias())
 * 
 *     def build(self, fn, bias=None):             # <<<<<<<<<<<<<<
 *         """
 *         build(fn)
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1077; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fn = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("build", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1077; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_14build(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), __pyx_v_fn, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_14build(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias) {
  bool __pyx_v_my_bias;
  std::vector<bool> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ty = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  bool __pyx_t_3;
  std::vector<bool> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  size_t __pyx_t_11;
  HypergraphPotentials<BoolPotential> *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build", 0);

  /* "pydecode/hyper.pyx":1086
 *         """
 *         cdef bool my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Bool_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1087
 *         cdef bool my_bias
 *         if bias is None:
 *             my_bias = Bool_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _BoolW_to_cpp(bias)
 */
    __pyx_v_my_bias = BoolPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1089
 *             my_bias = Bool_one()
 *         else:
 *             my_bias = _BoolW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[bool] potentials = \
 */
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_bias); if (unlikely((__pyx_t_3 == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__BoolW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1093
 *         cdef vector[bool] potentials = \
 *              vector[bool](self.hypergraph.thisptr.edges().size(),
 *              Bool_zero())             # <<<<<<<<<<<<<<
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 */
  try {
    __pyx_t_4 = std::vector<bool>(__pyx_v_self->hypergraph->thisptr->edges().size(), BoolPotential::zero());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":1095
 *              Bool_zero())
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):             # <<<<<<<<<<<<<<
 *             result = fn(ty)
 *             if result is None: potentials[i] = Bool_zero()
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_self->hypergraph->edge_labels) || PyTuple_CheckExact(__pyx_v_self->hypergraph->edge_labels)) {
    __pyx_t_6 = __pyx_v_self->hypergraph->edge_labels; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_self->hypergraph->edge_labels); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_ty, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":1096
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)             # <<<<<<<<<<<<<<
 *             if result is None: potentials[i] = Bool_zero()
 *             potentials[i] = _BoolW_to_cpp(result)
 */
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_ty);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_ty);
    __Pyx_GIVEREF(__pyx_v_ty);
    __pyx_t_10 = PyObject_Call(__pyx_v_fn, ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_result, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":1097
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)
 *             if result is None: potentials[i] = Bool_zero()             # <<<<<<<<<<<<<<
 *             potentials[i] = _BoolW_to_cpp(result)
 *         self.thisptr =  \
 */
    __pyx_t_2 = (__pyx_v_result == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {
      __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_potentials[__pyx_t_11]) = BoolPotential::zero();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "pydecode/hyper.pyx":1098
 *             result = fn(ty)
 *             if result is None: potentials[i] = Bool_zero()
 *             potentials[i] = _BoolW_to_cpp(result)             # <<<<<<<<<<<<<<
 *         self.thisptr =  \
 *             cmake_potentials_Bool(self.hypergraph.thisptr,
 */
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_result); if (unlikely((__pyx_t_3 == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1098; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1098; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_11]) = __pyx_f_8pydecode_5hyper__BoolW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":1101
 *         self.thisptr =  \
 *             cmake_potentials_Bool(self.hypergraph.thisptr,
 *                                        potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_12 = HypergraphVectorPotentials<BoolPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1099
 *             if result is None: potentials[i] = Bool_zero()
 *             potentials[i] = _BoolW_to_cpp(result)
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *             cmake_potentials_Bool(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_12;

  /* "pydecode/hyper.pyx":1102
 *             cmake_potentials_Bool(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_potentials(self, other_potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ty);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_16from_potentials[] = "BoolPotentials.from_potentials(self, other_potentials)";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_potentials (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_16from_potentials(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), ((PyObject *)__pyx_v_other_potentials));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1104
 *         return self
 * 
 *     def from_potentials(self, other_potentials):             # <<<<<<<<<<<<<<
 *         cdef vector[bool] potentials = \
 *              vector[bool](self.hypergraph.thisptr.edges().size())
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  std::vector<bool> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<bool> __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  bool __pyx_t_7;
  size_t __pyx_t_8;
  HypergraphPotentials<BoolPotential> *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_potentials", 0);

  /* "pydecode/hyper.pyx":1106
 *     def from_potentials(self, other_potentials):
 *         cdef vector[bool] potentials = \
 *              vector[bool](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 */
  try {
    __pyx_t_1 = std::vector<bool>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_1;

  /* "pydecode/hyper.pyx":1108
 *              vector[bool](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):             # <<<<<<<<<<<<<<
 *             potentials[i] = _BoolW_to_cpp(other_potentials[edge])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->hypergraph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1109
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 *             potentials[i] = _BoolW_to_cpp(other_potentials[edge])             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_other_potentials, __pyx_v_edge); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_7 == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_8]) = __pyx_f_8pydecode_5hyper__BoolW_to_cpp(__pyx_t_7);
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1115
 *             self.hypergraph.thisptr,
 *             potentials,
 *             _BoolW_to_cpp(other_potentials.bias))             # <<<<<<<<<<<<<<
 * 
 *         return self
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_other_potentials, __pyx_n_s__bias); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_7 == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_9 = HypergraphVectorPotentials<BoolPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_f_8pydecode_5hyper__BoolW_to_cpp(__pyx_t_7));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1111
 *             potentials[i] = _BoolW_to_cpp(other_potentials[edge])
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Bool(
 *             self.hypergraph.thisptr,
 */
  __pyx_v_self->thisptr = __pyx_t_9;

  /* "pydecode/hyper.pyx":1117
 *             _BoolW_to_cpp(other_potentials.bias))
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_vector(self, in_vec, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.from_potentials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_18from_vector[] = "BoolPotentials.from_vector(self, in_vec, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_vec = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_vector (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_vec,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":1119
 *         return self
 * 
 *     def from_vector(self, in_vec, bias=None):             # <<<<<<<<<<<<<<
 *         cdef bool my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_vector") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1119; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_vec = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_vector", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1119; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_18from_vector(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), __pyx_v_in_vec, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias) {
  bool __pyx_v_my_bias;
  std::vector<bool> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  bool __pyx_t_3;
  std::vector<bool> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  HypergraphPotentials<BoolPotential> *__pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_vector", 0);

  /* "pydecode/hyper.pyx":1121
 *     def from_vector(self, in_vec, bias=None):
 *         cdef bool my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Bool_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1122
 *         cdef bool my_bias
 *         if bias is None:
 *             my_bias = Bool_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _BoolW_to_cpp(bias)
 */
    __pyx_v_my_bias = BoolPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1124
 *             my_bias = Bool_one()
 *         else:
 *             my_bias = _BoolW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[bool] potentials = \
 */
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_bias); if (unlikely((__pyx_t_3 == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__BoolW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1127
 * 
 *         cdef vector[bool] potentials = \
 *              vector[bool](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, v in enumerate(in_vec):
 */
  try {
    __pyx_t_4 = std::vector<bool>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":1129
 *              vector[bool](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, v in enumerate(in_vec):             # <<<<<<<<<<<<<<
 *             potentials[i] = _BoolW_to_cpp(v)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_in_vec) || PyTuple_CheckExact(__pyx_v_in_vec)) {
    __pyx_t_6 = __pyx_v_in_vec; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_in_vec); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":1130
 * 
 *         for i, v in enumerate(in_vec):
 *             potentials[i] = _BoolW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_v); if (unlikely((__pyx_t_3 == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_10]) = __pyx_f_8pydecode_5hyper__BoolW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":1134
 *         self.thisptr =  \
 *           cmake_potentials_Bool(self.hypergraph.thisptr,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_11 = HypergraphVectorPotentials<BoolPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1132
 *             potentials[i] = _BoolW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Bool(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_11;

  /* "pydecode/hyper.pyx":1135
 *           cmake_potentials_Bool(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_map(self, in_map, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_20from_map[] = "BoolPotentials.from_map(self, in_map, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_map = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_map (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_map,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":1137
 *         return self
 * 
 *     def from_map(self, in_map, bias=None):             # <<<<<<<<<<<<<<
 *         cdef bool my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_map)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_map") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1137; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_map = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_map", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1137; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_20from_map(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), __pyx_v_in_map, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias) {
  bool __pyx_v_my_bias;
  std::map<int,int> __pyx_v_map_potentials;
  std::vector<bool> __pyx_v_potentials;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  bool __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  std::vector<bool> __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  size_t __pyx_t_14;
  HypergraphPotentials<BoolPotential> *__pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_map", 0);

  /* "pydecode/hyper.pyx":1139
 *     def from_map(self, in_map, bias=None):
 *         cdef bool my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Bool_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1140
 *         cdef bool my_bias
 *         if bias is None:
 *             my_bias = Bool_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _BoolW_to_cpp(bias)
 */
    __pyx_v_my_bias = BoolPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1142
 *             my_bias = Bool_one()
 *         else:
 *             my_bias = _BoolW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef c_map.map[int,int] map_potentials
 */
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_bias); if (unlikely((__pyx_t_3 == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__BoolW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1146
 *         cdef c_map.map[int,int] map_potentials
 *         cdef vector[bool] potentials = \
 *             vector[bool](len(in_map))             # <<<<<<<<<<<<<<
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_in_map); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_5 = std::vector<bool>(__pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_5;

  /* "pydecode/hyper.pyx":1148
 *             vector[bool](len(in_map))
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):             # <<<<<<<<<<<<<<
 *             map_potentials[key] = j
 *             potentials[j] = _BoolW_to_cpp(v)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_6 = __pyx_int_0;
  __pyx_t_4 = 0;
  if (unlikely(__pyx_v_in_map == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_10 = __Pyx_dict_iterator(__pyx_v_in_map, 0, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_10;
  __pyx_t_10 = 0;
  while (1) {
    __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_8, &__pyx_t_4, &__pyx_t_10, &__pyx_t_11, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_12 == 0)) break;
    if (unlikely(__pyx_t_12 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_11);
    __pyx_t_11 = 0;
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_6);
    __pyx_t_11 = PyNumber_Add(__pyx_t_6, __pyx_int_1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_11;
    __pyx_t_11 = 0;

    /* "pydecode/hyper.pyx":1149
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j             # <<<<<<<<<<<<<<
 *             potentials[j] = _BoolW_to_cpp(v)
 * 
 */
    __pyx_t_12 = __Pyx_PyInt_AsInt(__pyx_v_j); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_map_potentials[__pyx_t_13]) = __pyx_t_12;

    /* "pydecode/hyper.pyx":1150
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j
 *             potentials[j] = _BoolW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_v); if (unlikely((__pyx_t_3 == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_14 = __Pyx_PyInt_AsSize_t(__pyx_v_j); if (unlikely((__pyx_t_14 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_14]) = __pyx_f_8pydecode_5hyper__BoolW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "pydecode/hyper.pyx":1155
 *           cmake_potentials_Bool(self.hypergraph.thisptr,
 *                                       map_potentials,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_15 = HypergraphMapPotentials<BoolPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_map_potentials, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1152
 *             potentials[j] = _BoolW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Bool(self.hypergraph.thisptr,
 *                                       map_potentials,
 */
  __pyx_v_self->thisptr = __pyx_t_15;

  /* "pydecode/hyper.pyx":1156
 *                                       map_potentials,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, CHypergraphBoolPotentials *ptr,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1158
 *         return self
 * 
 *     cdef init(self, CHypergraphBoolPotentials *ptr,             # <<<<<<<<<<<<<<
 *               Projection projection):
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_8pydecode_5hyper_14BoolPotentials_init(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, HypergraphPotentials<BoolPotential> *__pyx_v_ptr, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":1160
 *     cdef init(self, CHypergraphBoolPotentials *ptr,
 *               Projection projection):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.projection = projection
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":1161
 *               Projection projection):
 *         self.thisptr = ptr
 *         self.projection = projection             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_projection));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_projection));
  __Pyx_GOTREF(__pyx_v_self->projection);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->projection));
  __pyx_v_self->projection = __pyx_v_projection;

  /* "pydecode/hyper.pyx":1162
 *         self.thisptr = ptr
 *         self.projection = projection
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Edge edge not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), __pyx_ptype_8pydecode_10hypergraph_Edge, 0, "edge", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_22__getitem__(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_edge));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1164
 *         return self
 * 
 *     def __getitem__(self, Edge edge not None):             # <<<<<<<<<<<<<<
 *         return _BoolW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":1165
 * 
 *     def __getitem__(self, Edge edge not None):
 *         return _BoolW_from_cpp(self.thisptr.score(edge.edgeptr))             # <<<<<<<<<<<<<<
 * 
 *     def dot(self, Path path not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BoolW_from_cpp(__pyx_v_self->thisptr->score(__pyx_v_edge->edgeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14BoolPotentials_24dot[] = "BoolPotentials.dot(self, Path path)\n\n        dot(path)\n\n        Take the dot product with `path` :math:`\\theta^{\\top} y`.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_14BoolPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), __pyx_ptype_8pydecode_10hypergraph_Path, 0, "path", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_14BoolPotentials_24dot(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_v_path));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1167
 *         return _BoolW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 *     def dot(self, Path path not None):             # <<<<<<<<<<<<<<
 *         r"""
 *         dot(path)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14BoolPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "pydecode/hyper.pyx":1174
 *         """
 * 
 *         return _BoolW_from_cpp(self.thisptr.dot(deref(path.thisptr)))             # <<<<<<<<<<<<<<
 *         #return _BoolW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->dot((*__pyx_v_path->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_f_8pydecode_5hyper__BoolW_from_cpp(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.BoolPotentials.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_6_BoolW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_6_BoolW_one[] = "_BoolW.one()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_6_BoolW_1one = {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6_BoolW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6_BoolW_one)};
static PyObject *__pyx_pw_8pydecode_5hyper_6_BoolW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("one (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("one", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "one", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_6_BoolW_one();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1179
 * cdef class _BoolW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _BoolW_from_cpp(Bool_one())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6_BoolW_one() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("one", 0);

  /* "pydecode/hyper.pyx":1180
 *     @staticmethod
 *     def one():
 *         return _BoolW_from_cpp(Bool_one())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BoolW_from_cpp(BoolPotential::one()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._BoolW.one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_6_BoolW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_6_BoolW_2zero[] = "_BoolW.zero()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_6_BoolW_3zero = {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6_BoolW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6_BoolW_2zero)};
static PyObject *__pyx_pw_8pydecode_5hyper_6_BoolW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zero (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("zero", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "zero", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_6_BoolW_2zero();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1183
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _BoolW_from_cpp(Bool_zero())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6_BoolW_2zero() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zero", 0);

  /* "pydecode/hyper.pyx":1184
 *     @staticmethod
 *     def zero():
 *         return _BoolW_from_cpp(Bool_zero())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BoolW_from_cpp(BoolPotential::zero()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._BoolW.zero", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1187
 * 
 * 
 * cdef bool _BoolW_to_cpp(bool val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static bool __pyx_f_8pydecode_5hyper__BoolW_to_cpp(bool __pyx_v_val) {
  bool __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_BoolW_to_cpp", 0);

  /* "pydecode/hyper.pyx":1189
 * cdef bool _BoolW_to_cpp(bool val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_val;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1193
 * 
 * 
 * cdef _BoolW_from_cpp(bool val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static PyObject *__pyx_f_8pydecode_5hyper__BoolW_from_cpp(bool __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_BoolW_from_cpp", 0);

  /* "pydecode/hyper.pyx":1195
 * cdef _BoolW_from_cpp(bool val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._BoolW_from_cpp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_9BoolChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_9BoolChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};

    /* "pydecode/hyper.pyx":1236
 * cdef class BoolChart:
 * 
 *     def __init__(self, Hypergraph graph=None):             # <<<<<<<<<<<<<<
 *         self.kind = Bool
 *         self.chart = NULL
 */
    values[0] = (PyObject *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1236; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1236; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BoolChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_9BoolChart___init__(((struct __pyx_obj_8pydecode_5hyper_BoolChart *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pydecode_5hyper_9BoolChart___init__(struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":1237
 * 
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = Bool             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 *         if graph is not None:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__Bool); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1238
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = Bool
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 *         if graph is not None:
 *             self.chart = new CBoolChart(graph.thisptr)
 */
  __pyx_v_self->chart = NULL;

  /* "pydecode/hyper.pyx":1239
 *         self.kind = Bool
 *         self.chart = NULL
 *         if graph is not None:             # <<<<<<<<<<<<<<
 *             self.chart = new CBoolChart(graph.thisptr)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_graph) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pydecode/hyper.pyx":1240
 *         self.chart = NULL
 *         if graph is not None:
 *             self.chart = new CBoolChart(graph.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Node node):
 */
    __pyx_v_self->chart = new Chart<BoolPotential>(__pyx_v_graph->thisptr);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BoolChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_9BoolChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_9BoolChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_8pydecode_10hypergraph_Node, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_9BoolChart_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_BoolChart *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_node));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1242
 *             self.chart = new CBoolChart(graph.thisptr)
 * 
 *     def __getitem__(self, Node node):             # <<<<<<<<<<<<<<
 *         return _BoolW_from_cpp(self.chart.get(node.nodeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_9BoolChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":1243
 * 
 *     def __getitem__(self, Node node):
 *         return _BoolW_from_cpp(self.chart.get(node.nodeptr))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BoolW_from_cpp(__pyx_v_self->chart->get(__pyx_v_node->nodeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BoolChart.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_9BoolChart_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_9BoolChart_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_9BoolChart_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_BoolChart *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1245
 *         return _BoolW_from_cpp(self.chart.get(node.nodeptr))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.chart
 *         self.chart = NULL
 */

static void __pyx_pf_8pydecode_5hyper_9BoolChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1246
 * 
 *     def __dealloc__(self):
 *         del self.chart             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 * 
 */
  delete __pyx_v_self->chart;

  /* "pydecode/hyper.pyx":1247
 *     def __dealloc__(self):
 *         del self.chart
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _BoolMarginals:
 */
  __pyx_v_self->chart = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_14_BoolMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_14_BoolMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_14_BoolMarginals___init__(((struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1253
 *     cdef Hypergraph graph
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_14_BoolMarginals___init__(struct __pyx_obj_8pydecode_5hyper__BoolMarginals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":1254
 * 
 *     def __init__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_14_BoolMarginals_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_14_BoolMarginals_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_14_BoolMarginals_2__dealloc__(((struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1256
 *         self.thisptr = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_8pydecode_5hyper_14_BoolMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__BoolMarginals *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1257
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, const CBoolMarginals *ptr, Hypergraph graph):
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1259
 *         del self.thisptr
 * 
 *     cdef init(self, const CBoolMarginals *ptr, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         self.graph = graph
 */

static PyObject *__pyx_f_8pydecode_5hyper_14_BoolMarginals_init(struct __pyx_obj_8pydecode_5hyper__BoolMarginals *__pyx_v_self, Marginals<BoolPotential> const *__pyx_v_ptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":1260
 * 
 *     cdef init(self, const CBoolMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.graph = graph
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":1261
 *     cdef init(self, const CBoolMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr
 *         self.graph = graph             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->graph));
  __pyx_v_self->graph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":1262
 *         self.thisptr = ptr
 *         self.graph = graph
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14_BoolMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_14_BoolMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_14_BoolMarginals_4__getitem__(((struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1264
 *         return self
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Edge):
 *             return _BoolW_from_cpp(
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14_BoolMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__BoolMarginals *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":1265
 * 
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             return _BoolW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1266
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):
 *             return _BoolW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":1267
 *         if isinstance(obj, Edge):
 *             return _BoolW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))             # <<<<<<<<<<<<<<
 *         elif isinstance(obj, Node):
 *             return _BoolW_from_cpp(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__BoolW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "pydecode/hyper.pyx":1268
 *             return _BoolW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             return _BoolW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":1269
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 *             return _BoolW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":1270
 *         elif isinstance(obj, Node):
 *             return _BoolW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))             # <<<<<<<<<<<<<<
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__BoolW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1272
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(             # <<<<<<<<<<<<<<
 *                 "Only nodes and edges have Bool marginal values." + \
 *                 "Passed %s."%obj)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__py_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1274
 *             raise py_hypergraph.HypergraphAccessException(
 *                 "Only nodes and edges have Bool marginal values." + \
 *                 "Passed %s."%obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_9), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pydecode.hyper._BoolMarginals.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14_BoolMarginals_7threshold(PyObject *__pyx_v_self, PyObject *__pyx_arg_semi); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14_BoolMarginals_6threshold[] = "_BoolMarginals.threshold(self, bool semi)";
static PyObject *__pyx_pw_8pydecode_5hyper_14_BoolMarginals_7threshold(PyObject *__pyx_v_self, PyObject *__pyx_arg_semi) {
  bool __pyx_v_semi;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("threshold (wrapper)", 0);
  assert(__pyx_arg_semi); {
    __pyx_v_semi = __Pyx_PyObject_IsTrue(__pyx_arg_semi); if (unlikely((__pyx_v_semi == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1277; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper._BoolMarginals.threshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_14_BoolMarginals_6threshold(((struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)__pyx_v_self), ((bool)__pyx_v_semi));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1277
 * 
 * 
 *     def threshold(self, bool semi):             # <<<<<<<<<<<<<<
 *         return BoolPotentials(self.graph).init(self.thisptr.threshold(semi), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14_BoolMarginals_6threshold(struct __pyx_obj_8pydecode_5hyper__BoolMarginals *__pyx_v_self, bool __pyx_v_semi) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("threshold", 0);

  /* "pydecode/hyper.pyx":1278
 * 
 *     def threshold(self, bool semi):
 *         return BoolPotentials(self.graph).init(self.thisptr.threshold(semi), None)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials *)((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)__pyx_t_2), __pyx_v_self->thisptr->threshold(__pyx_v_semi), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper._BoolMarginals.threshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_4Bool_inside[] = "Bool.inside(Hypergraph graph, BoolPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_4Bool_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_4Bool_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_4Bool_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Bool.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BoolPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_4Bool_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1288
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                BoolPotentials potentials):
 *         cdef BoolChart chart = BoolChart()
 */

static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials) {
  struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<BoolPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":1290
 *     def inside(Hypergraph graph,
 *                BoolPotentials potentials):
 *         cdef BoolChart chart = BoolChart()             # <<<<<<<<<<<<<<
 *         chart.chart = inside_Bool(graph.thisptr, deref(potentials.thisptr))
 *         return chart
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_BoolChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1291
 *                BoolPotentials potentials):
 *         cdef BoolChart chart = BoolChart()
 *         chart.chart = inside_Bool(graph.thisptr, deref(potentials.thisptr))             # <<<<<<<<<<<<<<
 *         return chart
 * 
 */
  try {
    __pyx_t_2 = general_inside<BoolPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":1292
 *         cdef BoolChart chart = BoolChart()
 *         chart.chart = inside_Bool(graph.thisptr, deref(potentials.thisptr))
 *         return chart             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_chart));
  __pyx_r = ((PyObject *)__pyx_v_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Bool.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_4Bool_2outside[] = "Bool.outside(Hypergraph graph, BoolPotentials potentials, BoolChart inside_chart)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_4Bool_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_4Bool_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_4Bool_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)values[1]);
    __pyx_v_inside_chart = ((struct __pyx_obj_8pydecode_5hyper_BoolChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Bool.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BoolPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inside_chart), __pyx_ptype_8pydecode_5hyper_BoolChart, 1, "inside_chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_4Bool_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1295
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 BoolPotentials potentials,
 *                 BoolChart inside_chart):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_inside_chart) {
  struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_out_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<BoolPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":1298
 *                 BoolPotentials potentials,
 *                 BoolChart inside_chart):
 *         cdef BoolChart out_chart = BoolChart()             # <<<<<<<<<<<<<<
 *         out_chart.chart = outside_Bool(graph.thisptr,
 *                                              deref(potentials.thisptr),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out_chart = ((struct __pyx_obj_8pydecode_5hyper_BoolChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1301
 *         out_chart.chart = outside_Bool(graph.thisptr,
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))             # <<<<<<<<<<<<<<
 *         return out_chart
 * 
 */
  try {
    __pyx_t_2 = general_outside<BoolPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_inside_chart->chart));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1299
 *                 BoolChart inside_chart):
 *         cdef BoolChart out_chart = BoolChart()
 *         out_chart.chart = outside_Bool(graph.thisptr,             # <<<<<<<<<<<<<<
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 */
  __pyx_v_out_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":1302
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 *         return out_chart             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out_chart));
  __pyx_r = ((PyObject *)__pyx_v_out_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Bool.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_5viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_4Bool_4viterbi[] = "Bool.viterbi(Hypergraph graph, BoolPotentials potentials, BoolChart chart=None)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_4Bool_5viterbi = {__Pyx_NAMESTR("viterbi"), (PyCFunction)__pyx_pw_8pydecode_5hyper_4Bool_5viterbi, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_4Bool_4viterbi)};
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_5viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("viterbi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__chart,0};
    PyObject* values[3] = {0,0,0};

    /* "pydecode/hyper.pyx":1308
 *     def viterbi(Hypergraph graph,
 *                 BoolPotentials potentials,
 *                 BoolChart chart=None):             # <<<<<<<<<<<<<<
 *         cdef CBoolChart *used_chart
 *         if chart is not None:
 */
    values[2] = (PyObject *)((struct __pyx_obj_8pydecode_5hyper_BoolChart *)((PyObject *)Py_None));
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("viterbi", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__chart);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "viterbi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)values[1]);
    __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_BoolChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("viterbi", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Bool.viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BoolPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_chart), __pyx_ptype_8pydecode_5hyper_BoolChart, 1, "chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_4Bool_4viterbi(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1306
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 BoolPotentials potentials,
 *                 BoolChart chart=None):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_4viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_BoolChart *__pyx_v_chart) {
  Chart<BoolPotential> *__pyx_v_used_chart;
  Hyperpath *__pyx_v_path;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Chart<BoolPotential> *__pyx_t_3;
  Hyperpath *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("viterbi", 0);

  /* "pydecode/hyper.pyx":1310
 *                 BoolChart chart=None):
 *         cdef CBoolChart *used_chart
 *         if chart is not None:             # <<<<<<<<<<<<<<
 *             used_chart = chart.chart
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_chart) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1311
 *         cdef CBoolChart *used_chart
 *         if chart is not None:
 *             used_chart = chart.chart             # <<<<<<<<<<<<<<
 *         else:
 *             used_chart = new CBoolChart(graph.thisptr)
 */
    __pyx_t_3 = __pyx_v_chart->chart;
    __pyx_v_used_chart = __pyx_t_3;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1313
 *             used_chart = chart.chart
 *         else:
 *             used_chart = new CBoolChart(graph.thisptr)             # <<<<<<<<<<<<<<
 *         cdef CHyperpath *path = \
 *             viterbi_Bool(graph.thisptr,
 */
    __pyx_v_used_chart = new Chart<BoolPotential>(__pyx_v_graph->thisptr);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1317
 *             viterbi_Bool(graph.thisptr,
 *                                deref(potentials.thisptr),
 *                                used_chart)             # <<<<<<<<<<<<<<
 *         if chart is None:
 *             del used_chart
 */
  try {
    __pyx_t_4 = general_viterbi<BoolPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), __pyx_v_used_chart);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_path = __pyx_t_4;

  /* "pydecode/hyper.pyx":1318
 *                                deref(potentials.thisptr),
 *                                used_chart)
 *         if chart is None:             # <<<<<<<<<<<<<<
 *             del used_chart
 *         return Path().init(path, graph)
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_chart) == Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":1319
 *                                used_chart)
 *         if chart is None:
 *             del used_chart             # <<<<<<<<<<<<<<
 *         return Path().init(path, graph)
 * 
 */
    delete __pyx_v_used_chart;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "pydecode/hyper.pyx":1320
 *         if chart is None:
 *             del used_chart
 *         return Path().init(path, graph)             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Path)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *)((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_5)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_5), __pyx_v_path, __pyx_v_graph)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pydecode.hyper.Bool.viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_7count_constrained_viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_4Bool_6count_constrained_viterbi[] = "Bool.count_constrained_viterbi(Hypergraph graph, BoolPotentials potentials, CountingPotentials count_potentials, int limit)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_4Bool_7count_constrained_viterbi = {__Pyx_NAMESTR("count_constrained_viterbi"), (PyCFunction)__pyx_pw_8pydecode_5hyper_4Bool_7count_constrained_viterbi, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_4Bool_6count_constrained_viterbi)};
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_7count_constrained_viterbi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials = 0;
  int __pyx_v_limit;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("count_constrained_viterbi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__count_potentials,&__pyx_n_s__limit,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__count_potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__limit)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "count_constrained_viterbi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)values[1]);
    __pyx_v_count_potentials = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)values[2]);
    __pyx_v_limit = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_limit == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1326; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("count_constrained_viterbi", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Bool.count_constrained_viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BoolPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_count_potentials), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "count_potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_4Bool_6count_constrained_viterbi(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_count_potentials, __pyx_v_limit);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1323
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   BoolPotentials potentials,
 *                                   CountingPotentials count_potentials,
 */

static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_6count_constrained_viterbi(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_count_potentials, int __pyx_v_limit) {
  Hyperpath *__pyx_v_path;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Hyperpath *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("count_constrained_viterbi", 0);

  /* "pydecode/hyper.pyx":1331
 *                                                  deref(potentials.thisptr),
 *                                                  deref(count_potentials.thisptr),
 *                                                  limit)             # <<<<<<<<<<<<<<
 *         return Path().init(path, graph)
 * 
 */
  try {
    __pyx_t_1 = count_constrained_viterbi<BoolPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_count_potentials->thisptr), __pyx_v_limit);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_path = __pyx_t_1;

  /* "pydecode/hyper.pyx":1332
 *                                                  deref(count_potentials.thisptr),
 *                                                  limit)
 *         return Path().init(path, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Path)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Path *)((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_t_2), __pyx_v_path, __pyx_v_graph)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.Bool.count_constrained_viterbi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_4Bool_8compute_marginals[] = "Bool.compute_marginals(Hypergraph graph, BoolPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_4Bool_9compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_4Bool_9compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_4Bool_8compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Bool.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BoolPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_4Bool_8compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1337
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           BoolPotentials potentials):
 *         cdef const CBoolMarginals *marginals = \
 */

static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials) {
  Marginals<BoolPotential> const *__pyx_v_marginals;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":1340
 *                           BoolPotentials potentials):
 *         cdef const CBoolMarginals *marginals = \
 *             Bool_compute(graph.thisptr, potentials.thisptr)             # <<<<<<<<<<<<<<
 *         return _BoolMarginals().init(marginals, graph)
 * 
 */
  __pyx_v_marginals = Marginals<BoolPotential>::compute(__pyx_v_graph->thisptr, __pyx_v_potentials->thisptr);

  /* "pydecode/hyper.pyx":1341
 *         cdef const CBoolMarginals *marginals = \
 *             Bool_compute(graph.thisptr, potentials.thisptr)
 *         return _BoolMarginals().init(marginals, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__BoolMarginals)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper__BoolMarginals *)((struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)__pyx_t_1), __pyx_v_marginals, __pyx_v_graph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.Bool.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_11prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_4Bool_10prune_hypergraph[] = "Bool.prune_hypergraph(Hypergraph graph, BoolPotentials potentials, threshold)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_4Bool_11prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_4Bool_11prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_4Bool_10prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_4Bool_11prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_threshold = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__threshold,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__threshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)values[1]);
    __pyx_v_threshold = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Bool.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BoolPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_4Bool_10prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_threshold);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1345
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          BoolPotentials potentials,
 *                          threshold):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_4Bool_10prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold) {
  PyObject *__pyx_v_marginals = NULL;
  PyObject *__pyx_v_bool_potentials = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":1348
 *                          BoolPotentials potentials,
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(((PyObject *)__pyx_v_potentials));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_potentials));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_potentials));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_marginals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pydecode/hyper.pyx":1349
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)             # <<<<<<<<<<<<<<
 *         return make_pruning_projections(graph, bool_potentials)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_marginals, __pyx_n_s__threshold); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_threshold);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_threshold);
  __Pyx_GIVEREF(__pyx_v_threshold);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_bool_potentials = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1350
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_bool_potentials);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_bool_potentials);
  __Pyx_GIVEREF(__pyx_v_bool_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.Bool.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_marginals);
  __Pyx_XDECREF(__pyx_v_bool_potentials);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials___dealloc__(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1362
 *     """
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = NULL
 */

static void __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1363
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "pydecode/hyper.pyx":1364
 *     def __dealloc__(self):
 *         del self.thisptr
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1367; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1367; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_2__cinit__(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1367
 * 
 * 
 *     def __cinit__(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         """
 *         Build the potential vector for a hypergraph.
 */

static int __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":1373
 *         :param hypergraph: The underlying hypergraph.
 *         """
 *         self.hypergraph = graph             # <<<<<<<<<<<<<<
 *         self.kind = SparseVector
 *         self.thisptr = NULL
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->hypergraph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_v_self->hypergraph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":1374
 *         """
 *         self.hypergraph = graph
 *         self.kind = SparseVector             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__SparseVector); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1375
 *         self.hypergraph = graph
 *         self.kind = SparseVector
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def times(self, SparseVectorPotentials other):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_4times[] = "SparseVectorPotentials.times(self, SparseVectorPotentials other)";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("times (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_SparseVectorPotentials, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_4times(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1377
 *         self.thisptr = NULL
 * 
 *     def times(self, SparseVectorPotentials other):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphSparseVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_4times(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_other) {
  HypergraphPotentials<SparseVectorPotential> *__pyx_v_new_potentials;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("times", 0);

  /* "pydecode/hyper.pyx":1379
 *     def times(self, SparseVectorPotentials other):
 *         cdef CHypergraphSparseVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))             # <<<<<<<<<<<<<<
 *         return SparseVectorPotentials(self.hypergraph).init(new_potentials, None)
 * 
 */
  __pyx_v_new_potentials = __pyx_v_self->thisptr->times((*__pyx_v_other->thisptr));

  /* "pydecode/hyper.pyx":1380
 *         cdef CHypergraphSparseVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 *         return SparseVectorPotentials(self.hypergraph).init(new_potentials, None)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_SparseVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_SparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_t_2), __pyx_v_new_potentials, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_6clone[] = "SparseVectorPotentials.clone(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_6clone(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1382
 *         return SparseVectorPotentials(self.hypergraph).init(new_potentials, None)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         return SparseVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pydecode/hyper.pyx":1383
 * 
 *     def clone(self):
 *         return SparseVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_SparseVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_SparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_t_2), __pyx_v_self->thisptr->clone(), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_8project[] = "SparseVectorPotentials.project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_8project(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1385
 *         return SparseVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 *     def project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphSparseVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_8project(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<SparseVectorPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":1387
 *     def project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphSparseVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))             # <<<<<<<<<<<<<<
 *         return SparseVectorPotentials(graph).init(ptr, None)
 * 
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->project_potentials((*__pyx_v_projection->thisptr));

  /* "pydecode/hyper.pyx":1388
 *         cdef CHypergraphSparseVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 *         return SparseVectorPotentials(graph).init(ptr, None)             # <<<<<<<<<<<<<<
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_SparseVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_SparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_t_2), __pyx_v_ptr, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_10up_project[] = "SparseVectorPotentials.up_project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("up_project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1390; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "up_project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1390; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1390; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_10up_project(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1390
 *         return SparseVectorPotentials(graph).init(ptr, None)
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphSparseVectorPotentials *ptr = \
 *             cmake_projected_potentials_SparseVector(self.thisptr, projection.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<SparseVectorPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  HypergraphPotentials<SparseVectorPotential> *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("up_project", 0);

  /* "pydecode/hyper.pyx":1392
 *     def up_project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphSparseVectorPotentials *ptr = \
 *             cmake_projected_potentials_SparseVector(self.thisptr, projection.thisptr)             # <<<<<<<<<<<<<<
 *         return SparseVectorPotentials(graph).init(ptr, projection)
 * 
 */
  try {
    __pyx_t_1 = HypergraphProjectedPotentials<SparseVectorPotential>::make_potentials(__pyx_v_self->thisptr, __pyx_v_projection->thisptr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_ptr = __pyx_t_1;

  /* "pydecode/hyper.pyx":1393
 *         cdef CHypergraphSparseVectorPotentials *ptr = \
 *             cmake_projected_potentials_SparseVector(self.thisptr, projection.thisptr)
 *         return SparseVectorPotentials(graph).init(ptr, projection)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, Hypergraph graph):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_SparseVectorPotentials)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_SparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_t_3)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_t_3), __pyx_v_ptr, __pyx_v_projection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_12show[] = "SparseVectorPotentials.show(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_12show(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1395
 *         return SparseVectorPotentials(graph).init(ptr, projection)
 * 
 *     def show(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_12show(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "pydecode/hyper.pyx":1396
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__join); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pydecode/hyper.pyx":1397
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1396
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__label); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_edge);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_edge);
    __Pyx_GIVEREF(__pyx_v_edge);
    __pyx_t_8 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_edge); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_8 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_4kind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_4kind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_4kind___get__(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1401
 * 
 *     property kind:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.kind
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":1402
 *     property kind:
 *         def __get__(self):
 *             return self.kind             # <<<<<<<<<<<<<<
 * 
 *     property bias:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kind);
  __pyx_r = __pyx_v_self->kind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_4bias_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_4bias_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_4bias___get__(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1405
 * 
 *     property bias:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return _SparseVectorW_from_cpp(self.thisptr.bias())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":1406
 *     property bias:
 *         def __get__(self):
 *             return _SparseVectorW_from_cpp(self.thisptr.bias())             # <<<<<<<<<<<<<<
 * 
 *     def build(self, fn, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(__pyx_v_self->thisptr->bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.bias.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_14build[] = "SparseVectorPotentials.build(self, fn, bias=None)\n\n        build(fn)\n\n        Build the potential vector for a hypergraph.\n\n        :param fn: A function from edge labels to potentials.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fn = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":1408
 *             return _SparseVectorW_from_cpp(self.thisptr.bias())
 * 
 *     def build(self, fn, bias=None):             # <<<<<<<<<<<<<<
 *         """
 *         build(fn)
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fn = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("build", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_14build(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), __pyx_v_fn, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_14build(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias) {
  std::vector<std::pair<int,int> > __pyx_v_my_bias;
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ty = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<std::pair<int,int> > __pyx_t_3;
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  size_t __pyx_t_11;
  HypergraphPotentials<SparseVectorPotential> *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build", 0);

  /* "pydecode/hyper.pyx":1417
 *         """
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = SparseVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1418
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 *             my_bias = SparseVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _SparseVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = SparseVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1420
 *             my_bias = SparseVector_one()
 *         else:
 *             my_bias = _SparseVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[vector[pair[int, int]]] potentials = \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_bias); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1424
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size(),
 *              SparseVector_zero())             # <<<<<<<<<<<<<<
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 */
  try {
    __pyx_t_4 = std::vector<std::vector<std::pair<int,int> > >(__pyx_v_self->hypergraph->thisptr->edges().size(), SparseVectorPotential::zero());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":1426
 *              SparseVector_zero())
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):             # <<<<<<<<<<<<<<
 *             result = fn(ty)
 *             if result is None: potentials[i] = SparseVector_zero()
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_self->hypergraph->edge_labels) || PyTuple_CheckExact(__pyx_v_self->hypergraph->edge_labels)) {
    __pyx_t_6 = __pyx_v_self->hypergraph->edge_labels; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_self->hypergraph->edge_labels); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_ty, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":1427
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)             # <<<<<<<<<<<<<<
 *             if result is None: potentials[i] = SparseVector_zero()
 *             potentials[i] = _SparseVectorW_to_cpp(result)
 */
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_ty);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_ty);
    __Pyx_GIVEREF(__pyx_v_ty);
    __pyx_t_10 = PyObject_Call(__pyx_v_fn, ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_result, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":1428
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)
 *             if result is None: potentials[i] = SparseVector_zero()             # <<<<<<<<<<<<<<
 *             potentials[i] = _SparseVectorW_to_cpp(result)
 *         self.thisptr =  \
 */
    __pyx_t_2 = (__pyx_v_result == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {
      __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_potentials[__pyx_t_11]) = SparseVectorPotential::zero();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "pydecode/hyper.pyx":1429
 *             result = fn(ty)
 *             if result is None: potentials[i] = SparseVector_zero()
 *             potentials[i] = _SparseVectorW_to_cpp(result)             # <<<<<<<<<<<<<<
 *         self.thisptr =  \
 *             cmake_potentials_SparseVector(self.hypergraph.thisptr,
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_result); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_11]) = __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":1432
 *         self.thisptr =  \
 *             cmake_potentials_SparseVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_12 = HypergraphVectorPotentials<SparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1430
 *             if result is None: potentials[i] = SparseVector_zero()
 *             potentials[i] = _SparseVectorW_to_cpp(result)
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *             cmake_potentials_SparseVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_12;

  /* "pydecode/hyper.pyx":1433
 *             cmake_potentials_SparseVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_potentials(self, other_potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ty);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_16from_potentials[] = "SparseVectorPotentials.from_potentials(self, other_potentials)";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_potentials (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_16from_potentials(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), ((PyObject *)__pyx_v_other_potentials));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1435
 *         return self
 * 
 *     def from_potentials(self, other_potentials):             # <<<<<<<<<<<<<<
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  std::vector<std::pair<int,int> > __pyx_t_7;
  size_t __pyx_t_8;
  HypergraphPotentials<SparseVectorPotential> *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_potentials", 0);

  /* "pydecode/hyper.pyx":1437
 *     def from_potentials(self, other_potentials):
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 */
  try {
    __pyx_t_1 = std::vector<std::vector<std::pair<int,int> > >(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_1;

  /* "pydecode/hyper.pyx":1439
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):             # <<<<<<<<<<<<<<
 *             potentials[i] = _SparseVectorW_to_cpp(other_potentials[edge])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->hypergraph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1440
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 *             potentials[i] = _SparseVectorW_to_cpp(other_potentials[edge])             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_other_potentials, __pyx_v_edge); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_t_3); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_8]) = __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(__pyx_t_7);
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1446
 *             self.hypergraph.thisptr,
 *             potentials,
 *             _SparseVectorW_to_cpp(other_potentials.bias))             # <<<<<<<<<<<<<<
 * 
 *         return self
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_other_potentials, __pyx_n_s__bias); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_9 = HypergraphVectorPotentials<SparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(__pyx_t_7));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1442
 *             potentials[i] = _SparseVectorW_to_cpp(other_potentials[edge])
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_SparseVector(
 *             self.hypergraph.thisptr,
 */
  __pyx_v_self->thisptr = __pyx_t_9;

  /* "pydecode/hyper.pyx":1448
 *             _SparseVectorW_to_cpp(other_potentials.bias))
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_vector(self, in_vec, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.from_potentials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_18from_vector[] = "SparseVectorPotentials.from_vector(self, in_vec, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_vec = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_vector (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_vec,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":1450
 *         return self
 * 
 *     def from_vector(self, in_vec, bias=None):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_vector") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_vec = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_vector", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_18from_vector(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), __pyx_v_in_vec, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias) {
  std::vector<std::pair<int,int> > __pyx_v_my_bias;
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<std::pair<int,int> > __pyx_t_3;
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  HypergraphPotentials<SparseVectorPotential> *__pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_vector", 0);

  /* "pydecode/hyper.pyx":1452
 *     def from_vector(self, in_vec, bias=None):
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = SparseVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1453
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 *             my_bias = SparseVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _SparseVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = SparseVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1455
 *             my_bias = SparseVector_one()
 *         else:
 *             my_bias = _SparseVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[vector[pair[int, int]]] potentials = \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_bias); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1458
 * 
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, v in enumerate(in_vec):
 */
  try {
    __pyx_t_4 = std::vector<std::vector<std::pair<int,int> > >(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":1460
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, v in enumerate(in_vec):             # <<<<<<<<<<<<<<
 *             potentials[i] = _SparseVectorW_to_cpp(v)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_in_vec) || PyTuple_CheckExact(__pyx_v_in_vec)) {
    __pyx_t_6 = __pyx_v_in_vec; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_in_vec); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":1461
 * 
 *         for i, v in enumerate(in_vec):
 *             potentials[i] = _SparseVectorW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_v); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_10]) = __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":1465
 *         self.thisptr =  \
 *           cmake_potentials_SparseVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_11 = HypergraphVectorPotentials<SparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1463
 *             potentials[i] = _SparseVectorW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_SparseVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_11;

  /* "pydecode/hyper.pyx":1466
 *           cmake_potentials_SparseVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_map(self, in_map, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_20from_map[] = "SparseVectorPotentials.from_map(self, in_map, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_map = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_map (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_map,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":1468
 *         return self
 * 
 *     def from_map(self, in_map, bias=None):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_map)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_map") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1468; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_map = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_map", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1468; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_20from_map(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), __pyx_v_in_map, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias) {
  std::vector<std::pair<int,int> > __pyx_v_my_bias;
  std::map<int,int> __pyx_v_map_potentials;
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<std::pair<int,int> > __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  size_t __pyx_t_14;
  HypergraphPotentials<SparseVectorPotential> *__pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_map", 0);

  /* "pydecode/hyper.pyx":1470
 *     def from_map(self, in_map, bias=None):
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = SparseVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1471
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 *             my_bias = SparseVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _SparseVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = SparseVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1473
 *             my_bias = SparseVector_one()
 *         else:
 *             my_bias = _SparseVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef c_map.map[int,int] map_potentials
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_bias); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1477
 *         cdef c_map.map[int,int] map_potentials
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *             vector[vector[pair[int, int]]](len(in_map))             # <<<<<<<<<<<<<<
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_in_map); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_5 = std::vector<std::vector<std::pair<int,int> > >(__pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_5;

  /* "pydecode/hyper.pyx":1479
 *             vector[vector[pair[int, int]]](len(in_map))
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):             # <<<<<<<<<<<<<<
 *             map_potentials[key] = j
 *             potentials[j] = _SparseVectorW_to_cpp(v)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_6 = __pyx_int_0;
  __pyx_t_4 = 0;
  if (unlikely(__pyx_v_in_map == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_10 = __Pyx_dict_iterator(__pyx_v_in_map, 0, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_10;
  __pyx_t_10 = 0;
  while (1) {
    __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_8, &__pyx_t_4, &__pyx_t_10, &__pyx_t_11, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_12 == 0)) break;
    if (unlikely(__pyx_t_12 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_11);
    __pyx_t_11 = 0;
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_6);
    __pyx_t_11 = PyNumber_Add(__pyx_t_6, __pyx_int_1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_11;
    __pyx_t_11 = 0;

    /* "pydecode/hyper.pyx":1480
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j             # <<<<<<<<<<<<<<
 *             potentials[j] = _SparseVectorW_to_cpp(v)
 * 
 */
    __pyx_t_12 = __Pyx_PyInt_AsInt(__pyx_v_j); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_map_potentials[__pyx_t_13]) = __pyx_t_12;

    /* "pydecode/hyper.pyx":1481
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j
 *             potentials[j] = _SparseVectorW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_v); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_14 = __Pyx_PyInt_AsSize_t(__pyx_v_j); if (unlikely((__pyx_t_14 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_14]) = __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "pydecode/hyper.pyx":1486
 *           cmake_potentials_SparseVector(self.hypergraph.thisptr,
 *                                       map_potentials,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_15 = HypergraphMapPotentials<SparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_map_potentials, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1483
 *             potentials[j] = _SparseVectorW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_SparseVector(self.hypergraph.thisptr,
 *                                       map_potentials,
 */
  __pyx_v_self->thisptr = __pyx_t_15;

  /* "pydecode/hyper.pyx":1487
 *                                       map_potentials,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, CHypergraphSparseVectorPotentials *ptr,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1489
 *         return self
 * 
 *     cdef init(self, CHypergraphSparseVectorPotentials *ptr,             # <<<<<<<<<<<<<<
 *               Projection projection):
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_8pydecode_5hyper_22SparseVectorPotentials_init(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, HypergraphPotentials<SparseVectorPotential> *__pyx_v_ptr, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":1491
 *     cdef init(self, CHypergraphSparseVectorPotentials *ptr,
 *               Projection projection):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.projection = projection
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":1492
 *               Projection projection):
 *         self.thisptr = ptr
 *         self.projection = projection             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_projection));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_projection));
  __Pyx_GOTREF(__pyx_v_self->projection);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->projection));
  __pyx_v_self->projection = __pyx_v_projection;

  /* "pydecode/hyper.pyx":1493
 *         self.thisptr = ptr
 *         self.projection = projection
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Edge edge not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), __pyx_ptype_8pydecode_10hypergraph_Edge, 0, "edge", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_22__getitem__(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_edge));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1495
 *         return self
 * 
 *     def __getitem__(self, Edge edge not None):             # <<<<<<<<<<<<<<
 *         return _SparseVectorW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":1496
 * 
 *     def __getitem__(self, Edge edge not None):
 *         return _SparseVectorW_from_cpp(self.thisptr.score(edge.edgeptr))             # <<<<<<<<<<<<<<
 * 
 *     def dot(self, Path path not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(__pyx_v_self->thisptr->score(__pyx_v_edge->edgeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_24dot[] = "SparseVectorPotentials.dot(self, Path path)\n\n        dot(path)\n\n        Take the dot product with `path` :math:`\\theta^{\\top} y`.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), __pyx_ptype_8pydecode_10hypergraph_Path, 0, "path", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_24dot(((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_v_path));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1498
 *         return _SparseVectorW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 *     def dot(self, Path path not None):             # <<<<<<<<<<<<<<
 *         r"""
 *         dot(path)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22SparseVectorPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<std::pair<int,int> > __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "pydecode/hyper.pyx":1505
 *         """
 * 
 *         return _SparseVectorW_from_cpp(self.thisptr.dot(deref(path.thisptr)))             # <<<<<<<<<<<<<<
 *         #return _SparseVectorW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->dot((*__pyx_v_path->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorPotentials.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14_SparseVectorW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14_SparseVectorW_one[] = "_SparseVectorW.one()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_14_SparseVectorW_1one = {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14_SparseVectorW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14_SparseVectorW_one)};
static PyObject *__pyx_pw_8pydecode_5hyper_14_SparseVectorW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("one (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("one", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "one", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_14_SparseVectorW_one();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1510
 * cdef class _SparseVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _SparseVectorW_from_cpp(SparseVector_one())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14_SparseVectorW_one() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("one", 0);

  /* "pydecode/hyper.pyx":1511
 *     @staticmethod
 *     def one():
 *         return _SparseVectorW_from_cpp(SparseVector_one())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(SparseVectorPotential::one()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._SparseVectorW.one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14_SparseVectorW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14_SparseVectorW_2zero[] = "_SparseVectorW.zero()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_14_SparseVectorW_3zero = {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14_SparseVectorW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14_SparseVectorW_2zero)};
static PyObject *__pyx_pw_8pydecode_5hyper_14_SparseVectorW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zero (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("zero", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "zero", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_14_SparseVectorW_2zero();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1514
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _SparseVectorW_from_cpp(SparseVector_zero())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14_SparseVectorW_2zero() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zero", 0);

  /* "pydecode/hyper.pyx":1515
 *     @staticmethod
 *     def zero():
 *         return _SparseVectorW_from_cpp(SparseVector_zero())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(SparseVectorPotential::zero()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._SparseVectorW.zero", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1518
 * 
 * 
 * cdef vector[pair[int, int]] _SparseVectorW_to_cpp(vector[pair[int, int]] val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static std::vector<std::pair<int,int> > __pyx_f_8pydecode_5hyper__SparseVectorW_to_cpp(std::vector<std::pair<int,int> > __pyx_v_val) {
  std::vector<std::pair<int,int> > __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_SparseVectorW_to_cpp", 0);

  /* "pydecode/hyper.pyx":1520
 * cdef vector[pair[int, int]] _SparseVectorW_to_cpp(vector[pair[int, int]] val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_val;
  goto __pyx_L0;

  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1524
 * 
 * 
 * cdef _SparseVectorW_from_cpp(vector[pair[int, int]] val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static PyObject *__pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(std::vector<std::pair<int,int> > __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_SparseVectorW_from_cpp", 0);

  /* "pydecode/hyper.pyx":1526
 * cdef _SparseVectorW_from_cpp(vector[pair[int, int]] val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._SparseVectorW_from_cpp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_17SparseVectorChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_17SparseVectorChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};

    /* "pydecode/hyper.pyx":1567
 * cdef class SparseVectorChart:
 * 
 *     def __init__(self, Hypergraph graph=None):             # <<<<<<<<<<<<<<
 *         self.kind = SparseVector
 *         self.chart = NULL
 */
    values[0] = (PyObject *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1567; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1567; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17SparseVectorChart___init__(((struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pydecode_5hyper_17SparseVectorChart___init__(struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":1568
 * 
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = SparseVector             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 *         if graph is not None:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__SparseVector); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1569
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = SparseVector
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 *         if graph is not None:
 *             self.chart = new CSparseVectorChart(graph.thisptr)
 */
  __pyx_v_self->chart = NULL;

  /* "pydecode/hyper.pyx":1570
 *         self.kind = SparseVector
 *         self.chart = NULL
 *         if graph is not None:             # <<<<<<<<<<<<<<
 *             self.chart = new CSparseVectorChart(graph.thisptr)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_graph) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pydecode/hyper.pyx":1571
 *         self.chart = NULL
 *         if graph is not None:
 *             self.chart = new CSparseVectorChart(graph.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Node node):
 */
    __pyx_v_self->chart = new Chart<SparseVectorPotential>(__pyx_v_graph->thisptr);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17SparseVectorChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_17SparseVectorChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_8pydecode_10hypergraph_Node, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17SparseVectorChart_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_node));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1573
 *             self.chart = new CSparseVectorChart(graph.thisptr)
 * 
 *     def __getitem__(self, Node node):             # <<<<<<<<<<<<<<
 *         return _SparseVectorW_from_cpp(self.chart.get(node.nodeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17SparseVectorChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":1574
 * 
 *     def __getitem__(self, Node node):
 *         return _SparseVectorW_from_cpp(self.chart.get(node.nodeptr))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(__pyx_v_self->chart->get(__pyx_v_node->nodeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.SparseVectorChart.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_17SparseVectorChart_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_17SparseVectorChart_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_17SparseVectorChart_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1576
 *         return _SparseVectorW_from_cpp(self.chart.get(node.nodeptr))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.chart
 *         self.chart = NULL
 */

static void __pyx_pf_8pydecode_5hyper_17SparseVectorChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1577
 * 
 *     def __dealloc__(self):
 *         del self.chart             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 * 
 */
  delete __pyx_v_self->chart;

  /* "pydecode/hyper.pyx":1578
 *     def __dealloc__(self):
 *         del self.chart
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _SparseVectorMarginals:
 */
  __pyx_v_self->chart = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_22_SparseVectorMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_22_SparseVectorMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_22_SparseVectorMarginals___init__(((struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1584
 *     cdef Hypergraph graph
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_22_SparseVectorMarginals___init__(struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":1585
 * 
 *     def __init__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_22_SparseVectorMarginals_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_22_SparseVectorMarginals_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_22_SparseVectorMarginals_2__dealloc__(((struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1587
 *         self.thisptr = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_8pydecode_5hyper_22_SparseVectorMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1588
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, const CSparseVectorMarginals *ptr, Hypergraph graph):
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1590
 *         del self.thisptr
 * 
 *     cdef init(self, const CSparseVectorMarginals *ptr, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         self.graph = graph
 */

static PyObject *__pyx_f_8pydecode_5hyper_22_SparseVectorMarginals_init(struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *__pyx_v_self, Marginals<SparseVectorPotential> const *__pyx_v_ptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":1591
 * 
 *     cdef init(self, const CSparseVectorMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.graph = graph
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":1592
 *     cdef init(self, const CSparseVectorMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr
 *         self.graph = graph             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->graph));
  __pyx_v_self->graph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":1593
 *         self.thisptr = ptr
 *         self.graph = graph
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22_SparseVectorMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_22_SparseVectorMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22_SparseVectorMarginals_4__getitem__(((struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1595
 *         return self
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Edge):
 *             return _SparseVectorW_from_cpp(
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22_SparseVectorMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":1596
 * 
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             return _SparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1597
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):
 *             return _SparseVectorW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":1598
 *         if isinstance(obj, Edge):
 *             return _SparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))             # <<<<<<<<<<<<<<
 *         elif isinstance(obj, Node):
 *             return _SparseVectorW_from_cpp(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "pydecode/hyper.pyx":1599
 *             return _SparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             return _SparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":1600
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 *             return _SparseVectorW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":1601
 *         elif isinstance(obj, Node):
 *             return _SparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))             # <<<<<<<<<<<<<<
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__SparseVectorW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1603
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(             # <<<<<<<<<<<<<<
 *                 "Only nodes and edges have SparseVector marginal values." + \
 *                 "Passed %s."%obj)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__py_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1605
 *             raise py_hypergraph.HypergraphAccessException(
 *                 "Only nodes and edges have SparseVector marginal values." + \
 *                 "Passed %s."%obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_10), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pydecode.hyper._SparseVectorMarginals.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12SparseVector_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12SparseVector_inside[] = "SparseVector.inside(Hypergraph graph, SparseVectorPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12SparseVector_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12SparseVector_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12SparseVector_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_12SparseVector_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVector.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_SparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12SparseVector_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1616
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                SparseVectorPotentials potentials):
 *         cdef SparseVectorChart chart = SparseVectorChart()
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12SparseVector_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials) {
  struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<SparseVectorPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":1618
 *     def inside(Hypergraph graph,
 *                SparseVectorPotentials potentials):
 *         cdef SparseVectorChart chart = SparseVectorChart()             # <<<<<<<<<<<<<<
 *         chart.chart = inside_SparseVector(graph.thisptr, deref(potentials.thisptr))
 *         return chart
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_SparseVectorChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1619
 *                SparseVectorPotentials potentials):
 *         cdef SparseVectorChart chart = SparseVectorChart()
 *         chart.chart = inside_SparseVector(graph.thisptr, deref(potentials.thisptr))             # <<<<<<<<<<<<<<
 *         return chart
 * 
 */
  try {
    __pyx_t_2 = general_inside<SparseVectorPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":1620
 *         cdef SparseVectorChart chart = SparseVectorChart()
 *         chart.chart = inside_SparseVector(graph.thisptr, deref(potentials.thisptr))
 *         return chart             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_chart));
  __pyx_r = ((PyObject *)__pyx_v_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.SparseVector.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12SparseVector_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12SparseVector_2outside[] = "SparseVector.outside(Hypergraph graph, SparseVectorPotentials potentials, SparseVectorChart inside_chart)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12SparseVector_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12SparseVector_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12SparseVector_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_12SparseVector_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)values[1]);
    __pyx_v_inside_chart = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVector.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_SparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inside_chart), __pyx_ptype_8pydecode_5hyper_SparseVectorChart, 1, "inside_chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1625; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12SparseVector_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1623
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 SparseVectorPotentials potentials,
 *                 SparseVectorChart inside_chart):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12SparseVector_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_inside_chart) {
  struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *__pyx_v_out_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<SparseVectorPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":1626
 *                 SparseVectorPotentials potentials,
 *                 SparseVectorChart inside_chart):
 *         cdef SparseVectorChart out_chart = SparseVectorChart()             # <<<<<<<<<<<<<<
 *         out_chart.chart = outside_SparseVector(graph.thisptr,
 *                                              deref(potentials.thisptr),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_SparseVectorChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out_chart = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1629
 *         out_chart.chart = outside_SparseVector(graph.thisptr,
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))             # <<<<<<<<<<<<<<
 *         return out_chart
 * 
 */
  try {
    __pyx_t_2 = general_outside<SparseVectorPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_inside_chart->chart));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1627
 *                 SparseVectorChart inside_chart):
 *         cdef SparseVectorChart out_chart = SparseVectorChart()
 *         out_chart.chart = outside_SparseVector(graph.thisptr,             # <<<<<<<<<<<<<<
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 */
  __pyx_v_out_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":1630
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 *         return out_chart             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out_chart));
  __pyx_r = ((PyObject *)__pyx_v_out_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.SparseVector.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12SparseVector_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12SparseVector_4compute_marginals[] = "SparseVector.compute_marginals(Hypergraph graph, SparseVectorPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12SparseVector_5compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12SparseVector_5compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12SparseVector_4compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_12SparseVector_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVector.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_SparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12SparseVector_4compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1635
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           SparseVectorPotentials potentials):
 *         cdef const CSparseVectorMarginals *marginals = \
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12SparseVector_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials) {
  Marginals<SparseVectorPotential> const *__pyx_v_marginals;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":1638
 *                           SparseVectorPotentials potentials):
 *         cdef const CSparseVectorMarginals *marginals = \
 *             SparseVector_compute(graph.thisptr, potentials.thisptr)             # <<<<<<<<<<<<<<
 *         return _SparseVectorMarginals().init(marginals, graph)
 * 
 */
  __pyx_v_marginals = Marginals<SparseVectorPotential>::compute(__pyx_v_graph->thisptr, __pyx_v_potentials->thisptr);

  /* "pydecode/hyper.pyx":1639
 *         cdef const CSparseVectorMarginals *marginals = \
 *             SparseVector_compute(graph.thisptr, potentials.thisptr)
 *         return _SparseVectorMarginals().init(marginals, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__SparseVectorMarginals)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper__SparseVectorMarginals *)((struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *)__pyx_t_1), __pyx_v_marginals, __pyx_v_graph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.SparseVector.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12SparseVector_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12SparseVector_6prune_hypergraph[] = "SparseVector.prune_hypergraph(Hypergraph graph, SparseVectorPotentials potentials, threshold)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12SparseVector_7prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12SparseVector_7prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12SparseVector_6prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_12SparseVector_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_threshold = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__threshold,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__threshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)values[1]);
    __pyx_v_threshold = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.SparseVector.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_SparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12SparseVector_6prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_threshold);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1643
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          SparseVectorPotentials potentials,
 *                          threshold):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12SparseVector_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold) {
  PyObject *__pyx_v_marginals = NULL;
  PyObject *__pyx_v_bool_potentials = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":1646
 *                          SparseVectorPotentials potentials,
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(((PyObject *)__pyx_v_potentials));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_potentials));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_potentials));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_marginals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pydecode/hyper.pyx":1647
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)             # <<<<<<<<<<<<<<
 *         return make_pruning_projections(graph, bool_potentials)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_marginals, __pyx_n_s__threshold); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_threshold);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_threshold);
  __Pyx_GIVEREF(__pyx_v_threshold);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_bool_potentials = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1648
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_bool_potentials);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_bool_potentials);
  __Pyx_GIVEREF(__pyx_v_bool_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.SparseVector.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_marginals);
  __Pyx_XDECREF(__pyx_v_bool_potentials);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials___dealloc__(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1660
 *     """
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = NULL
 */

static void __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1661
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "pydecode/hyper.pyx":1662
 *     def __dealloc__(self):
 *         del self.thisptr
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1665; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1665; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_2__cinit__(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1665
 * 
 * 
 *     def __cinit__(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         """
 *         Build the potential vector for a hypergraph.
 */

static int __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":1671
 *         :param hypergraph: The underlying hypergraph.
 *         """
 *         self.hypergraph = graph             # <<<<<<<<<<<<<<
 *         self.kind = MinSparseVector
 *         self.thisptr = NULL
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->hypergraph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_v_self->hypergraph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":1672
 *         """
 *         self.hypergraph = graph
 *         self.kind = MinSparseVector             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__MinSparseVector); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1673
 *         self.hypergraph = graph
 *         self.kind = MinSparseVector
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def times(self, MinSparseVectorPotentials other):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_4times[] = "MinSparseVectorPotentials.times(self, MinSparseVectorPotentials other)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("times (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_4times(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1675
 *         self.thisptr = NULL
 * 
 *     def times(self, MinSparseVectorPotentials other):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphMinSparseVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_4times(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_other) {
  HypergraphPotentials<MinSparseVectorPotential> *__pyx_v_new_potentials;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("times", 0);

  /* "pydecode/hyper.pyx":1677
 *     def times(self, MinSparseVectorPotentials other):
 *         cdef CHypergraphMinSparseVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))             # <<<<<<<<<<<<<<
 *         return MinSparseVectorPotentials(self.hypergraph).init(new_potentials, None)
 * 
 */
  __pyx_v_new_potentials = __pyx_v_self->thisptr->times((*__pyx_v_other->thisptr));

  /* "pydecode/hyper.pyx":1678
 *         cdef CHypergraphMinSparseVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 *         return MinSparseVectorPotentials(self.hypergraph).init(new_potentials, None)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1678; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1678; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_MinSparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_t_2), __pyx_v_new_potentials, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1678; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_6clone[] = "MinSparseVectorPotentials.clone(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_6clone(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1680
 *         return MinSparseVectorPotentials(self.hypergraph).init(new_potentials, None)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         return MinSparseVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pydecode/hyper.pyx":1681
 * 
 *     def clone(self):
 *         return MinSparseVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_MinSparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_t_2), __pyx_v_self->thisptr->clone(), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_8project[] = "MinSparseVectorPotentials.project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_8project(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1683
 *         return MinSparseVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 *     def project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphMinSparseVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_8project(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<MinSparseVectorPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":1685
 *     def project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphMinSparseVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))             # <<<<<<<<<<<<<<
 *         return MinSparseVectorPotentials(graph).init(ptr, None)
 * 
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->project_potentials((*__pyx_v_projection->thisptr));

  /* "pydecode/hyper.pyx":1686
 *         cdef CHypergraphMinSparseVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 *         return MinSparseVectorPotentials(graph).init(ptr, None)             # <<<<<<<<<<<<<<
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_MinSparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_t_2), __pyx_v_ptr, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_10up_project[] = "MinSparseVectorPotentials.up_project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("up_project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1688; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "up_project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1688; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1688; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_10up_project(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1688
 *         return MinSparseVectorPotentials(graph).init(ptr, None)
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphMinSparseVectorPotentials *ptr = \
 *             cmake_projected_potentials_MinSparseVector(self.thisptr, projection.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<MinSparseVectorPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  HypergraphPotentials<MinSparseVectorPotential> *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("up_project", 0);

  /* "pydecode/hyper.pyx":1690
 *     def up_project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphMinSparseVectorPotentials *ptr = \
 *             cmake_projected_potentials_MinSparseVector(self.thisptr, projection.thisptr)             # <<<<<<<<<<<<<<
 *         return MinSparseVectorPotentials(graph).init(ptr, projection)
 * 
 */
  try {
    __pyx_t_1 = HypergraphProjectedPotentials<MinSparseVectorPotential>::make_potentials(__pyx_v_self->thisptr, __pyx_v_projection->thisptr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_ptr = __pyx_t_1;

  /* "pydecode/hyper.pyx":1691
 *         cdef CHypergraphMinSparseVectorPotentials *ptr = \
 *             cmake_projected_potentials_MinSparseVector(self.thisptr, projection.thisptr)
 *         return MinSparseVectorPotentials(graph).init(ptr, projection)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, Hypergraph graph):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_MinSparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_t_3)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_t_3), __pyx_v_ptr, __pyx_v_projection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_12show[] = "MinSparseVectorPotentials.show(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_12show(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1693
 *         return MinSparseVectorPotentials(graph).init(ptr, projection)
 * 
 *     def show(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_12show(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "pydecode/hyper.pyx":1694
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__join); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pydecode/hyper.pyx":1695
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1694
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__label); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_edge);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_edge);
    __Pyx_GIVEREF(__pyx_v_edge);
    __pyx_t_8 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_edge); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_8 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_4kind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_4kind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_4kind___get__(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1699
 * 
 *     property kind:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.kind
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":1700
 *     property kind:
 *         def __get__(self):
 *             return self.kind             # <<<<<<<<<<<<<<
 * 
 *     property bias:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kind);
  __pyx_r = __pyx_v_self->kind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_4bias_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_4bias_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_4bias___get__(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1703
 * 
 *     property bias:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return _MinSparseVectorW_from_cpp(self.thisptr.bias())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":1704
 *     property bias:
 *         def __get__(self):
 *             return _MinSparseVectorW_from_cpp(self.thisptr.bias())             # <<<<<<<<<<<<<<
 * 
 *     def build(self, fn, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(__pyx_v_self->thisptr->bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.bias.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_14build[] = "MinSparseVectorPotentials.build(self, fn, bias=None)\n\n        build(fn)\n\n        Build the potential vector for a hypergraph.\n\n        :param fn: A function from edge labels to potentials.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fn = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":1706
 *             return _MinSparseVectorW_from_cpp(self.thisptr.bias())
 * 
 *     def build(self, fn, bias=None):             # <<<<<<<<<<<<<<
 *         """
 *         build(fn)
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1706; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fn = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("build", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1706; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_14build(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), __pyx_v_fn, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_14build(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias) {
  std::vector<std::pair<int,int> > __pyx_v_my_bias;
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ty = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<std::pair<int,int> > __pyx_t_3;
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  size_t __pyx_t_11;
  HypergraphPotentials<MinSparseVectorPotential> *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build", 0);

  /* "pydecode/hyper.pyx":1715
 *         """
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = MinSparseVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1716
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 *             my_bias = MinSparseVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _MinSparseVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = MinSparseVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1718
 *             my_bias = MinSparseVector_one()
 *         else:
 *             my_bias = _MinSparseVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[vector[pair[int, int]]] potentials = \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_bias); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1722
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size(),
 *              MinSparseVector_zero())             # <<<<<<<<<<<<<<
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 */
  try {
    __pyx_t_4 = std::vector<std::vector<std::pair<int,int> > >(__pyx_v_self->hypergraph->thisptr->edges().size(), MinSparseVectorPotential::zero());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":1724
 *              MinSparseVector_zero())
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):             # <<<<<<<<<<<<<<
 *             result = fn(ty)
 *             if result is None: potentials[i] = MinSparseVector_zero()
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_self->hypergraph->edge_labels) || PyTuple_CheckExact(__pyx_v_self->hypergraph->edge_labels)) {
    __pyx_t_6 = __pyx_v_self->hypergraph->edge_labels; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_self->hypergraph->edge_labels); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_ty, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":1725
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)             # <<<<<<<<<<<<<<
 *             if result is None: potentials[i] = MinSparseVector_zero()
 *             potentials[i] = _MinSparseVectorW_to_cpp(result)
 */
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_ty);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_ty);
    __Pyx_GIVEREF(__pyx_v_ty);
    __pyx_t_10 = PyObject_Call(__pyx_v_fn, ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_result, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":1726
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)
 *             if result is None: potentials[i] = MinSparseVector_zero()             # <<<<<<<<<<<<<<
 *             potentials[i] = _MinSparseVectorW_to_cpp(result)
 *         self.thisptr =  \
 */
    __pyx_t_2 = (__pyx_v_result == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {
      __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_potentials[__pyx_t_11]) = MinSparseVectorPotential::zero();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "pydecode/hyper.pyx":1727
 *             result = fn(ty)
 *             if result is None: potentials[i] = MinSparseVector_zero()
 *             potentials[i] = _MinSparseVectorW_to_cpp(result)             # <<<<<<<<<<<<<<
 *         self.thisptr =  \
 *             cmake_potentials_MinSparseVector(self.hypergraph.thisptr,
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_result); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_11]) = __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":1730
 *         self.thisptr =  \
 *             cmake_potentials_MinSparseVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_12 = HypergraphVectorPotentials<MinSparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1729; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1728
 *             if result is None: potentials[i] = MinSparseVector_zero()
 *             potentials[i] = _MinSparseVectorW_to_cpp(result)
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *             cmake_potentials_MinSparseVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_12;

  /* "pydecode/hyper.pyx":1731
 *             cmake_potentials_MinSparseVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_potentials(self, other_potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ty);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_16from_potentials[] = "MinSparseVectorPotentials.from_potentials(self, other_potentials)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_potentials (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_16from_potentials(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), ((PyObject *)__pyx_v_other_potentials));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1733
 *         return self
 * 
 *     def from_potentials(self, other_potentials):             # <<<<<<<<<<<<<<
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  std::vector<std::pair<int,int> > __pyx_t_7;
  size_t __pyx_t_8;
  HypergraphPotentials<MinSparseVectorPotential> *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_potentials", 0);

  /* "pydecode/hyper.pyx":1735
 *     def from_potentials(self, other_potentials):
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 */
  try {
    __pyx_t_1 = std::vector<std::vector<std::pair<int,int> > >(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_1;

  /* "pydecode/hyper.pyx":1737
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):             # <<<<<<<<<<<<<<
 *             potentials[i] = _MinSparseVectorW_to_cpp(other_potentials[edge])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->hypergraph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1738
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 *             potentials[i] = _MinSparseVectorW_to_cpp(other_potentials[edge])             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_other_potentials, __pyx_v_edge); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_t_3); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_8]) = __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(__pyx_t_7);
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1744
 *             self.hypergraph.thisptr,
 *             potentials,
 *             _MinSparseVectorW_to_cpp(other_potentials.bias))             # <<<<<<<<<<<<<<
 * 
 *         return self
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_other_potentials, __pyx_n_s__bias); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_9 = HypergraphVectorPotentials<MinSparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(__pyx_t_7));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1740
 *             potentials[i] = _MinSparseVectorW_to_cpp(other_potentials[edge])
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_MinSparseVector(
 *             self.hypergraph.thisptr,
 */
  __pyx_v_self->thisptr = __pyx_t_9;

  /* "pydecode/hyper.pyx":1746
 *             _MinSparseVectorW_to_cpp(other_potentials.bias))
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_vector(self, in_vec, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.from_potentials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_18from_vector[] = "MinSparseVectorPotentials.from_vector(self, in_vec, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_vec = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_vector (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_vec,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":1748
 *         return self
 * 
 *     def from_vector(self, in_vec, bias=None):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_vector") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1748; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_vec = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_vector", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1748; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_18from_vector(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), __pyx_v_in_vec, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias) {
  std::vector<std::pair<int,int> > __pyx_v_my_bias;
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<std::pair<int,int> > __pyx_t_3;
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  HypergraphPotentials<MinSparseVectorPotential> *__pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_vector", 0);

  /* "pydecode/hyper.pyx":1750
 *     def from_vector(self, in_vec, bias=None):
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = MinSparseVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1751
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 *             my_bias = MinSparseVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _MinSparseVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = MinSparseVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1753
 *             my_bias = MinSparseVector_one()
 *         else:
 *             my_bias = _MinSparseVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[vector[pair[int, int]]] potentials = \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_bias); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1756
 * 
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, v in enumerate(in_vec):
 */
  try {
    __pyx_t_4 = std::vector<std::vector<std::pair<int,int> > >(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":1758
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, v in enumerate(in_vec):             # <<<<<<<<<<<<<<
 *             potentials[i] = _MinSparseVectorW_to_cpp(v)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_in_vec) || PyTuple_CheckExact(__pyx_v_in_vec)) {
    __pyx_t_6 = __pyx_v_in_vec; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_in_vec); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":1759
 * 
 *         for i, v in enumerate(in_vec):
 *             potentials[i] = _MinSparseVectorW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_v); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1759; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1759; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_10]) = __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":1763
 *         self.thisptr =  \
 *           cmake_potentials_MinSparseVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_11 = HypergraphVectorPotentials<MinSparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1761
 *             potentials[i] = _MinSparseVectorW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_MinSparseVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_11;

  /* "pydecode/hyper.pyx":1764
 *           cmake_potentials_MinSparseVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_map(self, in_map, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_20from_map[] = "MinSparseVectorPotentials.from_map(self, in_map, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_map = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_map (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_map,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":1766
 *         return self
 * 
 *     def from_map(self, in_map, bias=None):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_map)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_map") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_map = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_map", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_20from_map(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), __pyx_v_in_map, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias) {
  std::vector<std::pair<int,int> > __pyx_v_my_bias;
  std::map<int,int> __pyx_v_map_potentials;
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<std::pair<int,int> > __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  size_t __pyx_t_14;
  HypergraphPotentials<MinSparseVectorPotential> *__pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_map", 0);

  /* "pydecode/hyper.pyx":1768
 *     def from_map(self, in_map, bias=None):
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = MinSparseVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1769
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 *             my_bias = MinSparseVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _MinSparseVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = MinSparseVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1771
 *             my_bias = MinSparseVector_one()
 *         else:
 *             my_bias = _MinSparseVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef c_map.map[int,int] map_potentials
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_bias); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":1775
 *         cdef c_map.map[int,int] map_potentials
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *             vector[vector[pair[int, int]]](len(in_map))             # <<<<<<<<<<<<<<
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_in_map); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_5 = std::vector<std::vector<std::pair<int,int> > >(__pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_5;

  /* "pydecode/hyper.pyx":1777
 *             vector[vector[pair[int, int]]](len(in_map))
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):             # <<<<<<<<<<<<<<
 *             map_potentials[key] = j
 *             potentials[j] = _MinSparseVectorW_to_cpp(v)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_6 = __pyx_int_0;
  __pyx_t_4 = 0;
  if (unlikely(__pyx_v_in_map == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_10 = __Pyx_dict_iterator(__pyx_v_in_map, 0, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_10;
  __pyx_t_10 = 0;
  while (1) {
    __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_8, &__pyx_t_4, &__pyx_t_10, &__pyx_t_11, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_12 == 0)) break;
    if (unlikely(__pyx_t_12 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_11);
    __pyx_t_11 = 0;
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_6);
    __pyx_t_11 = PyNumber_Add(__pyx_t_6, __pyx_int_1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_11;
    __pyx_t_11 = 0;

    /* "pydecode/hyper.pyx":1778
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j             # <<<<<<<<<<<<<<
 *             potentials[j] = _MinSparseVectorW_to_cpp(v)
 * 
 */
    __pyx_t_12 = __Pyx_PyInt_AsInt(__pyx_v_j); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_map_potentials[__pyx_t_13]) = __pyx_t_12;

    /* "pydecode/hyper.pyx":1779
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j
 *             potentials[j] = _MinSparseVectorW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_v); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_14 = __Pyx_PyInt_AsSize_t(__pyx_v_j); if (unlikely((__pyx_t_14 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_14]) = __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "pydecode/hyper.pyx":1784
 *           cmake_potentials_MinSparseVector(self.hypergraph.thisptr,
 *                                       map_potentials,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_15 = HypergraphMapPotentials<MinSparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_map_potentials, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1781
 *             potentials[j] = _MinSparseVectorW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_MinSparseVector(self.hypergraph.thisptr,
 *                                       map_potentials,
 */
  __pyx_v_self->thisptr = __pyx_t_15;

  /* "pydecode/hyper.pyx":1785
 *                                       map_potentials,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, CHypergraphMinSparseVectorPotentials *ptr,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1787
 *         return self
 * 
 *     cdef init(self, CHypergraphMinSparseVectorPotentials *ptr,             # <<<<<<<<<<<<<<
 *               Projection projection):
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_8pydecode_5hyper_25MinSparseVectorPotentials_init(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, HypergraphPotentials<MinSparseVectorPotential> *__pyx_v_ptr, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":1789
 *     cdef init(self, CHypergraphMinSparseVectorPotentials *ptr,
 *               Projection projection):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.projection = projection
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":1790
 *               Projection projection):
 *         self.thisptr = ptr
 *         self.projection = projection             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_projection));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_projection));
  __Pyx_GOTREF(__pyx_v_self->projection);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->projection));
  __pyx_v_self->projection = __pyx_v_projection;

  /* "pydecode/hyper.pyx":1791
 *         self.thisptr = ptr
 *         self.projection = projection
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Edge edge not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), __pyx_ptype_8pydecode_10hypergraph_Edge, 0, "edge", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_22__getitem__(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_edge));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1793
 *         return self
 * 
 *     def __getitem__(self, Edge edge not None):             # <<<<<<<<<<<<<<
 *         return _MinSparseVectorW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":1794
 * 
 *     def __getitem__(self, Edge edge not None):
 *         return _MinSparseVectorW_from_cpp(self.thisptr.score(edge.edgeptr))             # <<<<<<<<<<<<<<
 * 
 *     def dot(self, Path path not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(__pyx_v_self->thisptr->score(__pyx_v_edge->edgeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_24dot[] = "MinSparseVectorPotentials.dot(self, Path path)\n\n        dot(path)\n\n        Take the dot product with `path` :math:`\\theta^{\\top} y`.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), __pyx_ptype_8pydecode_10hypergraph_Path, 0, "path", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_24dot(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_v_path));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1796
 *         return _MinSparseVectorW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 *     def dot(self, Path path not None):             # <<<<<<<<<<<<<<
 *         r"""
 *         dot(path)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MinSparseVectorPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<std::pair<int,int> > __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "pydecode/hyper.pyx":1803
 *         """
 * 
 *         return _MinSparseVectorW_from_cpp(self.thisptr.dot(deref(path.thisptr)))             # <<<<<<<<<<<<<<
 *         #return _MinSparseVectorW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->dot((*__pyx_v_path->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorPotentials.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17_MinSparseVectorW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17_MinSparseVectorW_one[] = "_MinSparseVectorW.one()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_17_MinSparseVectorW_1one = {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17_MinSparseVectorW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17_MinSparseVectorW_one)};
static PyObject *__pyx_pw_8pydecode_5hyper_17_MinSparseVectorW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("one (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("one", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "one", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_17_MinSparseVectorW_one();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1808
 * cdef class _MinSparseVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_one())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17_MinSparseVectorW_one() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("one", 0);

  /* "pydecode/hyper.pyx":1809
 *     @staticmethod
 *     def one():
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_one())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(MinSparseVectorPotential::one()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._MinSparseVectorW.one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17_MinSparseVectorW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17_MinSparseVectorW_2zero[] = "_MinSparseVectorW.zero()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_17_MinSparseVectorW_3zero = {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17_MinSparseVectorW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17_MinSparseVectorW_2zero)};
static PyObject *__pyx_pw_8pydecode_5hyper_17_MinSparseVectorW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zero (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("zero", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "zero", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_17_MinSparseVectorW_2zero();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1812
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_zero())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17_MinSparseVectorW_2zero() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zero", 0);

  /* "pydecode/hyper.pyx":1813
 *     @staticmethod
 *     def zero():
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_zero())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(MinSparseVectorPotential::zero()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._MinSparseVectorW.zero", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1816
 * 
 * 
 * cdef vector[pair[int, int]] _MinSparseVectorW_to_cpp(vector[pair[int, int]] val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static std::vector<std::pair<int,int> > __pyx_f_8pydecode_5hyper__MinSparseVectorW_to_cpp(std::vector<std::pair<int,int> > __pyx_v_val) {
  std::vector<std::pair<int,int> > __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_MinSparseVectorW_to_cpp", 0);

  /* "pydecode/hyper.pyx":1818
 * cdef vector[pair[int, int]] _MinSparseVectorW_to_cpp(vector[pair[int, int]] val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_val;
  goto __pyx_L0;

  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1822
 * 
 * 
 * cdef _MinSparseVectorW_from_cpp(vector[pair[int, int]] val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static PyObject *__pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(std::vector<std::pair<int,int> > __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_MinSparseVectorW_from_cpp", 0);

  /* "pydecode/hyper.pyx":1824
 * cdef _MinSparseVectorW_from_cpp(vector[pair[int, int]] val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._MinSparseVectorW_from_cpp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_20MinSparseVectorChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_20MinSparseVectorChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};

    /* "pydecode/hyper.pyx":1865
 * cdef class MinSparseVectorChart:
 * 
 *     def __init__(self, Hypergraph graph=None):             # <<<<<<<<<<<<<<
 *         self.kind = MinSparseVector
 *         self.chart = NULL
 */
    values[0] = (PyObject *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20MinSparseVectorChart___init__(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pydecode_5hyper_20MinSparseVectorChart___init__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":1866
 * 
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = MinSparseVector             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 *         if graph is not None:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__MinSparseVector); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1867
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = MinSparseVector
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 *         if graph is not None:
 *             self.chart = new CMinSparseVectorChart(graph.thisptr)
 */
  __pyx_v_self->chart = NULL;

  /* "pydecode/hyper.pyx":1868
 *         self.kind = MinSparseVector
 *         self.chart = NULL
 *         if graph is not None:             # <<<<<<<<<<<<<<
 *             self.chart = new CMinSparseVectorChart(graph.thisptr)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_graph) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pydecode/hyper.pyx":1869
 *         self.chart = NULL
 *         if graph is not None:
 *             self.chart = new CMinSparseVectorChart(graph.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Node node):
 */
    __pyx_v_self->chart = new Chart<MinSparseVectorPotential>(__pyx_v_graph->thisptr);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20MinSparseVectorChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_20MinSparseVectorChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_8pydecode_10hypergraph_Node, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20MinSparseVectorChart_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_node));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1871
 *             self.chart = new CMinSparseVectorChart(graph.thisptr)
 * 
 *     def __getitem__(self, Node node):             # <<<<<<<<<<<<<<
 *         return _MinSparseVectorW_from_cpp(self.chart.get(node.nodeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20MinSparseVectorChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":1872
 * 
 *     def __getitem__(self, Node node):
 *         return _MinSparseVectorW_from_cpp(self.chart.get(node.nodeptr))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(__pyx_v_self->chart->get(__pyx_v_node->nodeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVectorChart.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_20MinSparseVectorChart_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_20MinSparseVectorChart_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_20MinSparseVectorChart_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1874
 *         return _MinSparseVectorW_from_cpp(self.chart.get(node.nodeptr))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.chart
 *         self.chart = NULL
 */

static void __pyx_pf_8pydecode_5hyper_20MinSparseVectorChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1875
 * 
 *     def __dealloc__(self):
 *         del self.chart             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 * 
 */
  delete __pyx_v_self->chart;

  /* "pydecode/hyper.pyx":1876
 *     def __dealloc__(self):
 *         del self.chart
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _MinSparseVectorMarginals:
 */
  __pyx_v_self->chart = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_25_MinSparseVectorMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_25_MinSparseVectorMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_25_MinSparseVectorMarginals___init__(((struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1882
 *     cdef Hypergraph graph
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_25_MinSparseVectorMarginals___init__(struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":1883
 * 
 *     def __init__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_25_MinSparseVectorMarginals_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_25_MinSparseVectorMarginals_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_25_MinSparseVectorMarginals_2__dealloc__(((struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1885
 *         self.thisptr = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_8pydecode_5hyper_25_MinSparseVectorMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1886
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, const CMinSparseVectorMarginals *ptr, Hypergraph graph):
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1888
 *         del self.thisptr
 * 
 *     cdef init(self, const CMinSparseVectorMarginals *ptr, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         self.graph = graph
 */

static PyObject *__pyx_f_8pydecode_5hyper_25_MinSparseVectorMarginals_init(struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *__pyx_v_self, Marginals<MinSparseVectorPotential> const *__pyx_v_ptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":1889
 * 
 *     cdef init(self, const CMinSparseVectorMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.graph = graph
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":1890
 *     cdef init(self, const CMinSparseVectorMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr
 *         self.graph = graph             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->graph));
  __pyx_v_self->graph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":1891
 *         self.thisptr = ptr
 *         self.graph = graph
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25_MinSparseVectorMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_25_MinSparseVectorMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25_MinSparseVectorMarginals_4__getitem__(((struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1893
 *         return self
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Edge):
 *             return _MinSparseVectorW_from_cpp(
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25_MinSparseVectorMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":1894
 * 
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             return _MinSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":1895
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):
 *             return _MinSparseVectorW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":1896
 *         if isinstance(obj, Edge):
 *             return _MinSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))             # <<<<<<<<<<<<<<
 *         elif isinstance(obj, Node):
 *             return _MinSparseVectorW_from_cpp(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "pydecode/hyper.pyx":1897
 *             return _MinSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             return _MinSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":1898
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 *             return _MinSparseVectorW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":1899
 *         elif isinstance(obj, Node):
 *             return _MinSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))             # <<<<<<<<<<<<<<
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__MinSparseVectorW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":1901
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(             # <<<<<<<<<<<<<<
 *                 "Only nodes and edges have MinSparseVector marginal values." + \
 *                 "Passed %s."%obj)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__py_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1903
 *             raise py_hypergraph.HypergraphAccessException(
 *                 "Only nodes and edges have MinSparseVector marginal values." + \
 *                 "Passed %s."%obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_11), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pydecode.hyper._MinSparseVectorMarginals.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15MinSparseVector_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_15MinSparseVector_inside[] = "MinSparseVector.inside(Hypergraph graph, MinSparseVectorPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_15MinSparseVector_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_15MinSparseVector_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_15MinSparseVector_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_15MinSparseVector_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVector.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1915; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15MinSparseVector_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1914
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                MinSparseVectorPotentials potentials):
 *         cdef MinSparseVectorChart chart = MinSparseVectorChart()
 */

static PyObject *__pyx_pf_8pydecode_5hyper_15MinSparseVector_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials) {
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<MinSparseVectorPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":1916
 *     def inside(Hypergraph graph,
 *                MinSparseVectorPotentials potentials):
 *         cdef MinSparseVectorChart chart = MinSparseVectorChart()             # <<<<<<<<<<<<<<
 *         chart.chart = inside_MinSparseVector(graph.thisptr, deref(potentials.thisptr))
 *         return chart
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MinSparseVectorChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1917
 *                MinSparseVectorPotentials potentials):
 *         cdef MinSparseVectorChart chart = MinSparseVectorChart()
 *         chart.chart = inside_MinSparseVector(graph.thisptr, deref(potentials.thisptr))             # <<<<<<<<<<<<<<
 *         return chart
 * 
 */
  try {
    __pyx_t_2 = general_inside<MinSparseVectorPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":1918
 *         cdef MinSparseVectorChart chart = MinSparseVectorChart()
 *         chart.chart = inside_MinSparseVector(graph.thisptr, deref(potentials.thisptr))
 *         return chart             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_chart));
  __pyx_r = ((PyObject *)__pyx_v_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVector.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15MinSparseVector_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_15MinSparseVector_2outside[] = "MinSparseVector.outside(Hypergraph graph, MinSparseVectorPotentials potentials, MinSparseVectorChart inside_chart)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_15MinSparseVector_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_15MinSparseVector_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_15MinSparseVector_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_15MinSparseVector_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)values[1]);
    __pyx_v_inside_chart = ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVector.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inside_chart), __pyx_ptype_8pydecode_5hyper_MinSparseVectorChart, 1, "inside_chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15MinSparseVector_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1921
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 MinSparseVectorPotentials potentials,
 *                 MinSparseVectorChart inside_chart):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_15MinSparseVector_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_inside_chart) {
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *__pyx_v_out_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<MinSparseVectorPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":1924
 *                 MinSparseVectorPotentials potentials,
 *                 MinSparseVectorChart inside_chart):
 *         cdef MinSparseVectorChart out_chart = MinSparseVectorChart()             # <<<<<<<<<<<<<<
 *         out_chart.chart = outside_MinSparseVector(graph.thisptr,
 *                                              deref(potentials.thisptr),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MinSparseVectorChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out_chart = ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1927
 *         out_chart.chart = outside_MinSparseVector(graph.thisptr,
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))             # <<<<<<<<<<<<<<
 *         return out_chart
 * 
 */
  try {
    __pyx_t_2 = general_outside<MinSparseVectorPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_inside_chart->chart));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":1925
 *                 MinSparseVectorChart inside_chart):
 *         cdef MinSparseVectorChart out_chart = MinSparseVectorChart()
 *         out_chart.chart = outside_MinSparseVector(graph.thisptr,             # <<<<<<<<<<<<<<
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 */
  __pyx_v_out_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":1928
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 *         return out_chart             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out_chart));
  __pyx_r = ((PyObject *)__pyx_v_out_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVector.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15MinSparseVector_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_15MinSparseVector_4compute_marginals[] = "MinSparseVector.compute_marginals(Hypergraph graph, MinSparseVectorPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_15MinSparseVector_5compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_15MinSparseVector_5compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_15MinSparseVector_4compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_15MinSparseVector_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVector.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15MinSparseVector_4compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1933
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           MinSparseVectorPotentials potentials):
 *         cdef const CMinSparseVectorMarginals *marginals = \
 */

static PyObject *__pyx_pf_8pydecode_5hyper_15MinSparseVector_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials) {
  Marginals<MinSparseVectorPotential> const *__pyx_v_marginals;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":1936
 *                           MinSparseVectorPotentials potentials):
 *         cdef const CMinSparseVectorMarginals *marginals = \
 *             MinSparseVector_compute(graph.thisptr, potentials.thisptr)             # <<<<<<<<<<<<<<
 *         return _MinSparseVectorMarginals().init(marginals, graph)
 * 
 */
  __pyx_v_marginals = Marginals<MinSparseVectorPotential>::compute(__pyx_v_graph->thisptr, __pyx_v_potentials->thisptr);

  /* "pydecode/hyper.pyx":1937
 *         cdef const CMinSparseVectorMarginals *marginals = \
 *             MinSparseVector_compute(graph.thisptr, potentials.thisptr)
 *         return _MinSparseVectorMarginals().init(marginals, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__MinSparseVectorMarginals)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper__MinSparseVectorMarginals *)((struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *)__pyx_t_1), __pyx_v_marginals, __pyx_v_graph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVector.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15MinSparseVector_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_15MinSparseVector_6prune_hypergraph[] = "MinSparseVector.prune_hypergraph(Hypergraph graph, MinSparseVectorPotentials potentials, threshold)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_15MinSparseVector_7prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_15MinSparseVector_7prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_15MinSparseVector_6prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_15MinSparseVector_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_threshold = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__threshold,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__threshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)values[1]);
    __pyx_v_threshold = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVector.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15MinSparseVector_6prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_threshold);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1941
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          MinSparseVectorPotentials potentials,
 *                          threshold):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_15MinSparseVector_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold) {
  PyObject *__pyx_v_marginals = NULL;
  PyObject *__pyx_v_bool_potentials = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":1944
 *                          MinSparseVectorPotentials potentials,
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1944; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1944; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(((PyObject *)__pyx_v_potentials));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_potentials));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_potentials));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1944; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_marginals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pydecode/hyper.pyx":1945
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)             # <<<<<<<<<<<<<<
 *         return make_pruning_projections(graph, bool_potentials)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_marginals, __pyx_n_s__threshold); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_threshold);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_threshold);
  __Pyx_GIVEREF(__pyx_v_threshold);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_bool_potentials = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1946
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_bool_potentials);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_bool_potentials);
  __Pyx_GIVEREF(__pyx_v_bool_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.MinSparseVector.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_marginals);
  __Pyx_XDECREF(__pyx_v_bool_potentials);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials___dealloc__(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":1958
 *     """
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = NULL
 */

static void __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":1959
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "pydecode/hyper.pyx":1960
 *     def __dealloc__(self):
 *         del self.thisptr
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1963; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1963; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_2__cinit__(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1963
 * 
 * 
 *     def __cinit__(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         """
 *         Build the potential vector for a hypergraph.
 */

static int __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":1969
 *         :param hypergraph: The underlying hypergraph.
 *         """
 *         self.hypergraph = graph             # <<<<<<<<<<<<<<
 *         self.kind = MaxSparseVector
 *         self.thisptr = NULL
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->hypergraph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_v_self->hypergraph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":1970
 *         """
 *         self.hypergraph = graph
 *         self.kind = MaxSparseVector             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__MaxSparseVector); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1971
 *         self.hypergraph = graph
 *         self.kind = MaxSparseVector
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def times(self, MaxSparseVectorPotentials other):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_4times[] = "MaxSparseVectorPotentials.times(self, MaxSparseVectorPotentials other)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("times (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_4times(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1973
 *         self.thisptr = NULL
 * 
 *     def times(self, MaxSparseVectorPotentials other):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphMaxSparseVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_4times(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_other) {
  HypergraphPotentials<MaxSparseVectorPotential> *__pyx_v_new_potentials;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("times", 0);

  /* "pydecode/hyper.pyx":1975
 *     def times(self, MaxSparseVectorPotentials other):
 *         cdef CHypergraphMaxSparseVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))             # <<<<<<<<<<<<<<
 *         return MaxSparseVectorPotentials(self.hypergraph).init(new_potentials, None)
 * 
 */
  __pyx_v_new_potentials = __pyx_v_self->thisptr->times((*__pyx_v_other->thisptr));

  /* "pydecode/hyper.pyx":1976
 *         cdef CHypergraphMaxSparseVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 *         return MaxSparseVectorPotentials(self.hypergraph).init(new_potentials, None)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_MaxSparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_t_2), __pyx_v_new_potentials, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_6clone[] = "MaxSparseVectorPotentials.clone(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_6clone(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1978
 *         return MaxSparseVectorPotentials(self.hypergraph).init(new_potentials, None)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         return MaxSparseVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pydecode/hyper.pyx":1979
 * 
 *     def clone(self):
 *         return MaxSparseVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1979; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1979; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_MaxSparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_t_2), __pyx_v_self->thisptr->clone(), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1979; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_8project[] = "MaxSparseVectorPotentials.project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1981; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1981; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1981; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_8project(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1981
 *         return MaxSparseVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 *     def project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphMaxSparseVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_8project(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<MaxSparseVectorPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":1983
 *     def project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphMaxSparseVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))             # <<<<<<<<<<<<<<
 *         return MaxSparseVectorPotentials(graph).init(ptr, None)
 * 
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->project_potentials((*__pyx_v_projection->thisptr));

  /* "pydecode/hyper.pyx":1984
 *         cdef CHypergraphMaxSparseVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 *         return MaxSparseVectorPotentials(graph).init(ptr, None)             # <<<<<<<<<<<<<<
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_MaxSparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_t_2), __pyx_v_ptr, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_10up_project[] = "MaxSparseVectorPotentials.up_project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("up_project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "up_project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_10up_project(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1986
 *         return MaxSparseVectorPotentials(graph).init(ptr, None)
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphMaxSparseVectorPotentials *ptr = \
 *             cmake_projected_potentials_MaxSparseVector(self.thisptr, projection.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<MaxSparseVectorPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  HypergraphPotentials<MaxSparseVectorPotential> *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("up_project", 0);

  /* "pydecode/hyper.pyx":1988
 *     def up_project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphMaxSparseVectorPotentials *ptr = \
 *             cmake_projected_potentials_MaxSparseVector(self.thisptr, projection.thisptr)             # <<<<<<<<<<<<<<
 *         return MaxSparseVectorPotentials(graph).init(ptr, projection)
 * 
 */
  try {
    __pyx_t_1 = HypergraphProjectedPotentials<MaxSparseVectorPotential>::make_potentials(__pyx_v_self->thisptr, __pyx_v_projection->thisptr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1988; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_ptr = __pyx_t_1;

  /* "pydecode/hyper.pyx":1989
 *         cdef CHypergraphMaxSparseVectorPotentials *ptr = \
 *             cmake_projected_potentials_MaxSparseVector(self.thisptr, projection.thisptr)
 *         return MaxSparseVectorPotentials(graph).init(ptr, projection)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, Hypergraph graph):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_MaxSparseVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_t_3)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_t_3), __pyx_v_ptr, __pyx_v_projection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_12show[] = "MaxSparseVectorPotentials.show(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_12show(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1991
 *         return MaxSparseVectorPotentials(graph).init(ptr, projection)
 * 
 *     def show(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_12show(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "pydecode/hyper.pyx":1992
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__join); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pydecode/hyper.pyx":1993
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":1992
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__label); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_edge);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_edge);
    __Pyx_GIVEREF(__pyx_v_edge);
    __pyx_t_8 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_edge); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_8 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_4kind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_4kind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_4kind___get__(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":1997
 * 
 *     property kind:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.kind
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":1998
 *     property kind:
 *         def __get__(self):
 *             return self.kind             # <<<<<<<<<<<<<<
 * 
 *     property bias:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kind);
  __pyx_r = __pyx_v_self->kind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_4bias_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_4bias_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_4bias___get__(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2001
 * 
 *     property bias:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return _MaxSparseVectorW_from_cpp(self.thisptr.bias())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":2002
 *     property bias:
 *         def __get__(self):
 *             return _MaxSparseVectorW_from_cpp(self.thisptr.bias())             # <<<<<<<<<<<<<<
 * 
 *     def build(self, fn, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(__pyx_v_self->thisptr->bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2002; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.bias.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_14build[] = "MaxSparseVectorPotentials.build(self, fn, bias=None)\n\n        build(fn)\n\n        Build the potential vector for a hypergraph.\n\n        :param fn: A function from edge labels to potentials.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fn = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":2004
 *             return _MaxSparseVectorW_from_cpp(self.thisptr.bias())
 * 
 *     def build(self, fn, bias=None):             # <<<<<<<<<<<<<<
 *         """
 *         build(fn)
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2004; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fn = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("build", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2004; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_14build(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), __pyx_v_fn, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_14build(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias) {
  std::vector<std::pair<int,int> > __pyx_v_my_bias;
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ty = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<std::pair<int,int> > __pyx_t_3;
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  size_t __pyx_t_11;
  HypergraphPotentials<MaxSparseVectorPotential> *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build", 0);

  /* "pydecode/hyper.pyx":2013
 *         """
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = MaxSparseVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2014
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 *             my_bias = MaxSparseVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _MaxSparseVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = MaxSparseVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2016
 *             my_bias = MaxSparseVector_one()
 *         else:
 *             my_bias = _MaxSparseVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[vector[pair[int, int]]] potentials = \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_bias); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":2020
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size(),
 *              MaxSparseVector_zero())             # <<<<<<<<<<<<<<
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 */
  try {
    __pyx_t_4 = std::vector<std::vector<std::pair<int,int> > >(__pyx_v_self->hypergraph->thisptr->edges().size(), MaxSparseVectorPotential::zero());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":2022
 *              MaxSparseVector_zero())
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):             # <<<<<<<<<<<<<<
 *             result = fn(ty)
 *             if result is None: potentials[i] = MaxSparseVector_zero()
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_self->hypergraph->edge_labels) || PyTuple_CheckExact(__pyx_v_self->hypergraph->edge_labels)) {
    __pyx_t_6 = __pyx_v_self->hypergraph->edge_labels; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_self->hypergraph->edge_labels); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_ty, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":2023
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)             # <<<<<<<<<<<<<<
 *             if result is None: potentials[i] = MaxSparseVector_zero()
 *             potentials[i] = _MaxSparseVectorW_to_cpp(result)
 */
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_ty);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_ty);
    __Pyx_GIVEREF(__pyx_v_ty);
    __pyx_t_10 = PyObject_Call(__pyx_v_fn, ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_result, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":2024
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)
 *             if result is None: potentials[i] = MaxSparseVector_zero()             # <<<<<<<<<<<<<<
 *             potentials[i] = _MaxSparseVectorW_to_cpp(result)
 *         self.thisptr =  \
 */
    __pyx_t_2 = (__pyx_v_result == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {
      __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_potentials[__pyx_t_11]) = MaxSparseVectorPotential::zero();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "pydecode/hyper.pyx":2025
 *             result = fn(ty)
 *             if result is None: potentials[i] = MaxSparseVector_zero()
 *             potentials[i] = _MaxSparseVectorW_to_cpp(result)             # <<<<<<<<<<<<<<
 *         self.thisptr =  \
 *             cmake_potentials_MaxSparseVector(self.hypergraph.thisptr,
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_result); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_11]) = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":2028
 *         self.thisptr =  \
 *             cmake_potentials_MaxSparseVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_12 = HypergraphVectorPotentials<MaxSparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2026
 *             if result is None: potentials[i] = MaxSparseVector_zero()
 *             potentials[i] = _MaxSparseVectorW_to_cpp(result)
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *             cmake_potentials_MaxSparseVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_12;

  /* "pydecode/hyper.pyx":2029
 *             cmake_potentials_MaxSparseVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_potentials(self, other_potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ty);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_16from_potentials[] = "MaxSparseVectorPotentials.from_potentials(self, other_potentials)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_potentials (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_16from_potentials(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), ((PyObject *)__pyx_v_other_potentials));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2031
 *         return self
 * 
 *     def from_potentials(self, other_potentials):             # <<<<<<<<<<<<<<
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  std::vector<std::pair<int,int> > __pyx_t_7;
  size_t __pyx_t_8;
  HypergraphPotentials<MaxSparseVectorPotential> *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_potentials", 0);

  /* "pydecode/hyper.pyx":2033
 *     def from_potentials(self, other_potentials):
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 */
  try {
    __pyx_t_1 = std::vector<std::vector<std::pair<int,int> > >(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2033; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_1;

  /* "pydecode/hyper.pyx":2035
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):             # <<<<<<<<<<<<<<
 *             potentials[i] = _MaxSparseVectorW_to_cpp(other_potentials[edge])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->hypergraph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":2036
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 *             potentials[i] = _MaxSparseVectorW_to_cpp(other_potentials[edge])             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_other_potentials, __pyx_v_edge); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_t_3); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_8]) = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(__pyx_t_7);
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2042
 *             self.hypergraph.thisptr,
 *             potentials,
 *             _MaxSparseVectorW_to_cpp(other_potentials.bias))             # <<<<<<<<<<<<<<
 * 
 *         return self
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_other_potentials, __pyx_n_s__bias); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_9 = HypergraphVectorPotentials<MaxSparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(__pyx_t_7));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2039; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2038
 *             potentials[i] = _MaxSparseVectorW_to_cpp(other_potentials[edge])
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_MaxSparseVector(
 *             self.hypergraph.thisptr,
 */
  __pyx_v_self->thisptr = __pyx_t_9;

  /* "pydecode/hyper.pyx":2044
 *             _MaxSparseVectorW_to_cpp(other_potentials.bias))
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_vector(self, in_vec, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.from_potentials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_18from_vector[] = "MaxSparseVectorPotentials.from_vector(self, in_vec, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_vec = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_vector (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_vec,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":2046
 *         return self
 * 
 *     def from_vector(self, in_vec, bias=None):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_vector") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2046; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_vec = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_vector", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2046; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_18from_vector(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), __pyx_v_in_vec, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias) {
  std::vector<std::pair<int,int> > __pyx_v_my_bias;
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<std::pair<int,int> > __pyx_t_3;
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  HypergraphPotentials<MaxSparseVectorPotential> *__pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_vector", 0);

  /* "pydecode/hyper.pyx":2048
 *     def from_vector(self, in_vec, bias=None):
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = MaxSparseVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2049
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 *             my_bias = MaxSparseVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _MaxSparseVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = MaxSparseVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2051
 *             my_bias = MaxSparseVector_one()
 *         else:
 *             my_bias = _MaxSparseVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[vector[pair[int, int]]] potentials = \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_bias); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":2054
 * 
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, v in enumerate(in_vec):
 */
  try {
    __pyx_t_4 = std::vector<std::vector<std::pair<int,int> > >(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":2056
 *              vector[vector[pair[int, int]]](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, v in enumerate(in_vec):             # <<<<<<<<<<<<<<
 *             potentials[i] = _MaxSparseVectorW_to_cpp(v)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_in_vec) || PyTuple_CheckExact(__pyx_v_in_vec)) {
    __pyx_t_6 = __pyx_v_in_vec; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_in_vec); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":2057
 * 
 *         for i, v in enumerate(in_vec):
 *             potentials[i] = _MaxSparseVectorW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_v); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_10]) = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":2061
 *         self.thisptr =  \
 *           cmake_potentials_MaxSparseVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_11 = HypergraphVectorPotentials<MaxSparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2060; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2059
 *             potentials[i] = _MaxSparseVectorW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_MaxSparseVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_11;

  /* "pydecode/hyper.pyx":2062
 *           cmake_potentials_MaxSparseVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_map(self, in_map, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_20from_map[] = "MaxSparseVectorPotentials.from_map(self, in_map, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_map = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_map (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_map,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":2064
 *         return self
 * 
 *     def from_map(self, in_map, bias=None):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_map)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_map") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2064; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_map = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_map", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2064; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_20from_map(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), __pyx_v_in_map, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias) {
  std::vector<std::pair<int,int> > __pyx_v_my_bias;
  std::map<int,int> __pyx_v_map_potentials;
  std::vector<std::vector<std::pair<int,int> > > __pyx_v_potentials;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<std::pair<int,int> > __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  std::vector<std::vector<std::pair<int,int> > > __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  size_t __pyx_t_14;
  HypergraphPotentials<MaxSparseVectorPotential> *__pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_map", 0);

  /* "pydecode/hyper.pyx":2066
 *     def from_map(self, in_map, bias=None):
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = MaxSparseVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2067
 *         cdef vector[pair[int, int]] my_bias
 *         if bias is None:
 *             my_bias = MaxSparseVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _MaxSparseVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = MaxSparseVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2069
 *             my_bias = MaxSparseVector_one()
 *         else:
 *             my_bias = _MaxSparseVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef c_map.map[int,int] map_potentials
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_bias); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":2073
 *         cdef c_map.map[int,int] map_potentials
 *         cdef vector[vector[pair[int, int]]] potentials = \
 *             vector[vector[pair[int, int]]](len(in_map))             # <<<<<<<<<<<<<<
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_in_map); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2073; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_5 = std::vector<std::vector<std::pair<int,int> > >(__pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2073; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_5;

  /* "pydecode/hyper.pyx":2075
 *             vector[vector[pair[int, int]]](len(in_map))
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):             # <<<<<<<<<<<<<<
 *             map_potentials[key] = j
 *             potentials[j] = _MaxSparseVectorW_to_cpp(v)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_6 = __pyx_int_0;
  __pyx_t_4 = 0;
  if (unlikely(__pyx_v_in_map == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_10 = __Pyx_dict_iterator(__pyx_v_in_map, 0, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_10;
  __pyx_t_10 = 0;
  while (1) {
    __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_8, &__pyx_t_4, &__pyx_t_10, &__pyx_t_11, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_12 == 0)) break;
    if (unlikely(__pyx_t_12 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_11);
    __pyx_t_11 = 0;
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_6);
    __pyx_t_11 = PyNumber_Add(__pyx_t_6, __pyx_int_1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_11;
    __pyx_t_11 = 0;

    /* "pydecode/hyper.pyx":2076
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j             # <<<<<<<<<<<<<<
 *             potentials[j] = _MaxSparseVectorW_to_cpp(v)
 * 
 */
    __pyx_t_12 = __Pyx_PyInt_AsInt(__pyx_v_j); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_map_potentials[__pyx_t_13]) = __pyx_t_12;

    /* "pydecode/hyper.pyx":2077
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j
 *             potentials[j] = _MaxSparseVectorW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_v); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_14 = __Pyx_PyInt_AsSize_t(__pyx_v_j); if (unlikely((__pyx_t_14 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_14]) = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "pydecode/hyper.pyx":2082
 *           cmake_potentials_MaxSparseVector(self.hypergraph.thisptr,
 *                                       map_potentials,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_15 = HypergraphMapPotentials<MaxSparseVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_map_potentials, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2079
 *             potentials[j] = _MaxSparseVectorW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_MaxSparseVector(self.hypergraph.thisptr,
 *                                       map_potentials,
 */
  __pyx_v_self->thisptr = __pyx_t_15;

  /* "pydecode/hyper.pyx":2083
 *                                       map_potentials,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, CHypergraphMaxSparseVectorPotentials *ptr,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2085
 *         return self
 * 
 *     cdef init(self, CHypergraphMaxSparseVectorPotentials *ptr,             # <<<<<<<<<<<<<<
 *               Projection projection):
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_8pydecode_5hyper_25MaxSparseVectorPotentials_init(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, HypergraphPotentials<MaxSparseVectorPotential> *__pyx_v_ptr, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":2087
 *     cdef init(self, CHypergraphMaxSparseVectorPotentials *ptr,
 *               Projection projection):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.projection = projection
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":2088
 *               Projection projection):
 *         self.thisptr = ptr
 *         self.projection = projection             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_projection));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_projection));
  __Pyx_GOTREF(__pyx_v_self->projection);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->projection));
  __pyx_v_self->projection = __pyx_v_projection;

  /* "pydecode/hyper.pyx":2089
 *         self.thisptr = ptr
 *         self.projection = projection
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Edge edge not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), __pyx_ptype_8pydecode_10hypergraph_Edge, 0, "edge", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_22__getitem__(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_edge));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2091
 *         return self
 * 
 *     def __getitem__(self, Edge edge not None):             # <<<<<<<<<<<<<<
 *         return _MaxSparseVectorW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":2092
 * 
 *     def __getitem__(self, Edge edge not None):
 *         return _MaxSparseVectorW_from_cpp(self.thisptr.score(edge.edgeptr))             # <<<<<<<<<<<<<<
 * 
 *     def dot(self, Path path not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(__pyx_v_self->thisptr->score(__pyx_v_edge->edgeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_24dot[] = "MaxSparseVectorPotentials.dot(self, Path path)\n\n        dot(path)\n\n        Take the dot product with `path` :math:`\\theta^{\\top} y`.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), __pyx_ptype_8pydecode_10hypergraph_Path, 0, "path", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_24dot(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_v_path));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2094
 *         return _MaxSparseVectorW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 *     def dot(self, Path path not None):             # <<<<<<<<<<<<<<
 *         r"""
 *         dot(path)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25MaxSparseVectorPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<std::pair<int,int> > __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "pydecode/hyper.pyx":2101
 *         """
 * 
 *         return _MaxSparseVectorW_from_cpp(self.thisptr.dot(deref(path.thisptr)))             # <<<<<<<<<<<<<<
 *         #return _MaxSparseVectorW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->dot((*__pyx_v_path->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorPotentials.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17_MaxSparseVectorW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17_MaxSparseVectorW_one[] = "_MaxSparseVectorW.one()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_17_MaxSparseVectorW_1one = {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17_MaxSparseVectorW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17_MaxSparseVectorW_one)};
static PyObject *__pyx_pw_8pydecode_5hyper_17_MaxSparseVectorW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("one (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("one", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "one", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_17_MaxSparseVectorW_one();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2106
 * cdef class _MaxSparseVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_one())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17_MaxSparseVectorW_one() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("one", 0);

  /* "pydecode/hyper.pyx":2107
 *     @staticmethod
 *     def one():
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_one())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(MaxSparseVectorPotential::one()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._MaxSparseVectorW.one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17_MaxSparseVectorW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_17_MaxSparseVectorW_2zero[] = "_MaxSparseVectorW.zero()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_17_MaxSparseVectorW_3zero = {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17_MaxSparseVectorW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17_MaxSparseVectorW_2zero)};
static PyObject *__pyx_pw_8pydecode_5hyper_17_MaxSparseVectorW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zero (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("zero", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "zero", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_17_MaxSparseVectorW_2zero();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2110
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_zero())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17_MaxSparseVectorW_2zero() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zero", 0);

  /* "pydecode/hyper.pyx":2111
 *     @staticmethod
 *     def zero():
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_zero())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(MaxSparseVectorPotential::zero()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._MaxSparseVectorW.zero", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2114
 * 
 * 
 * cdef vector[pair[int, int]] _MaxSparseVectorW_to_cpp(vector[pair[int, int]] val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static std::vector<std::pair<int,int> > __pyx_f_8pydecode_5hyper__MaxSparseVectorW_to_cpp(std::vector<std::pair<int,int> > __pyx_v_val) {
  std::vector<std::pair<int,int> > __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_MaxSparseVectorW_to_cpp", 0);

  /* "pydecode/hyper.pyx":2116
 * cdef vector[pair[int, int]] _MaxSparseVectorW_to_cpp(vector[pair[int, int]] val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_val;
  goto __pyx_L0;

  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2120
 * 
 * 
 * cdef _MaxSparseVectorW_from_cpp(vector[pair[int, int]] val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static PyObject *__pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(std::vector<std::pair<int,int> > __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_MaxSparseVectorW_from_cpp", 0);

  /* "pydecode/hyper.pyx":2122
 * cdef _MaxSparseVectorW_from_cpp(vector[pair[int, int]] val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._MaxSparseVectorW_from_cpp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_20MaxSparseVectorChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_20MaxSparseVectorChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};

    /* "pydecode/hyper.pyx":2163
 * cdef class MaxSparseVectorChart:
 * 
 *     def __init__(self, Hypergraph graph=None):             # <<<<<<<<<<<<<<
 *         self.kind = MaxSparseVector
 *         self.chart = NULL
 */
    values[0] = (PyObject *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2163; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2163; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20MaxSparseVectorChart___init__(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pydecode_5hyper_20MaxSparseVectorChart___init__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":2164
 * 
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = MaxSparseVector             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 *         if graph is not None:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__MaxSparseVector); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2165
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = MaxSparseVector
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 *         if graph is not None:
 *             self.chart = new CMaxSparseVectorChart(graph.thisptr)
 */
  __pyx_v_self->chart = NULL;

  /* "pydecode/hyper.pyx":2166
 *         self.kind = MaxSparseVector
 *         self.chart = NULL
 *         if graph is not None:             # <<<<<<<<<<<<<<
 *             self.chart = new CMaxSparseVectorChart(graph.thisptr)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_graph) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pydecode/hyper.pyx":2167
 *         self.chart = NULL
 *         if graph is not None:
 *             self.chart = new CMaxSparseVectorChart(graph.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Node node):
 */
    __pyx_v_self->chart = new Chart<MaxSparseVectorPotential>(__pyx_v_graph->thisptr);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_20MaxSparseVectorChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_20MaxSparseVectorChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_8pydecode_10hypergraph_Node, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_20MaxSparseVectorChart_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_node));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2169
 *             self.chart = new CMaxSparseVectorChart(graph.thisptr)
 * 
 *     def __getitem__(self, Node node):             # <<<<<<<<<<<<<<
 *         return _MaxSparseVectorW_from_cpp(self.chart.get(node.nodeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_20MaxSparseVectorChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":2170
 * 
 *     def __getitem__(self, Node node):
 *         return _MaxSparseVectorW_from_cpp(self.chart.get(node.nodeptr))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(__pyx_v_self->chart->get(__pyx_v_node->nodeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVectorChart.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_20MaxSparseVectorChart_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_20MaxSparseVectorChart_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_20MaxSparseVectorChart_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2172
 *         return _MaxSparseVectorW_from_cpp(self.chart.get(node.nodeptr))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.chart
 *         self.chart = NULL
 */

static void __pyx_pf_8pydecode_5hyper_20MaxSparseVectorChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":2173
 * 
 *     def __dealloc__(self):
 *         del self.chart             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 * 
 */
  delete __pyx_v_self->chart;

  /* "pydecode/hyper.pyx":2174
 *     def __dealloc__(self):
 *         del self.chart
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _MaxSparseVectorMarginals:
 */
  __pyx_v_self->chart = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_25_MaxSparseVectorMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_25_MaxSparseVectorMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_25_MaxSparseVectorMarginals___init__(((struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2180
 *     cdef Hypergraph graph
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_25_MaxSparseVectorMarginals___init__(struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":2181
 * 
 *     def __init__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_25_MaxSparseVectorMarginals_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_25_MaxSparseVectorMarginals_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_25_MaxSparseVectorMarginals_2__dealloc__(((struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2183
 *         self.thisptr = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_8pydecode_5hyper_25_MaxSparseVectorMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":2184
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, const CMaxSparseVectorMarginals *ptr, Hypergraph graph):
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2186
 *         del self.thisptr
 * 
 *     cdef init(self, const CMaxSparseVectorMarginals *ptr, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         self.graph = graph
 */

static PyObject *__pyx_f_8pydecode_5hyper_25_MaxSparseVectorMarginals_init(struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *__pyx_v_self, Marginals<MaxSparseVectorPotential> const *__pyx_v_ptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":2187
 * 
 *     cdef init(self, const CMaxSparseVectorMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.graph = graph
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":2188
 *     cdef init(self, const CMaxSparseVectorMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr
 *         self.graph = graph             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->graph));
  __pyx_v_self->graph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":2189
 *         self.thisptr = ptr
 *         self.graph = graph
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_25_MaxSparseVectorMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_25_MaxSparseVectorMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_25_MaxSparseVectorMarginals_4__getitem__(((struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2191
 *         return self
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Edge):
 *             return _MaxSparseVectorW_from_cpp(
 */

static PyObject *__pyx_pf_8pydecode_5hyper_25_MaxSparseVectorMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":2192
 * 
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             return _MaxSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2193
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):
 *             return _MaxSparseVectorW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":2194
 *         if isinstance(obj, Edge):
 *             return _MaxSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))             # <<<<<<<<<<<<<<
 *         elif isinstance(obj, Node):
 *             return _MaxSparseVectorW_from_cpp(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "pydecode/hyper.pyx":2195
 *             return _MaxSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             return _MaxSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":2196
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 *             return _MaxSparseVectorW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":2197
 *         elif isinstance(obj, Node):
 *             return _MaxSparseVectorW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))             # <<<<<<<<<<<<<<
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__MaxSparseVectorW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2199
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(             # <<<<<<<<<<<<<<
 *                 "Only nodes and edges have MaxSparseVector marginal values." + \
 *                 "Passed %s."%obj)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__py_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":2201
 *             raise py_hypergraph.HypergraphAccessException(
 *                 "Only nodes and edges have MaxSparseVector marginal values." + \
 *                 "Passed %s."%obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_12), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pydecode.hyper._MaxSparseVectorMarginals.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15MaxSparseVector_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_15MaxSparseVector_inside[] = "MaxSparseVector.inside(Hypergraph graph, MaxSparseVectorPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_15MaxSparseVector_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_15MaxSparseVector_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_15MaxSparseVector_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_15MaxSparseVector_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2212; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2212; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2212; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVector.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15MaxSparseVector_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2212
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                MaxSparseVectorPotentials potentials):
 *         cdef MaxSparseVectorChart chart = MaxSparseVectorChart()
 */

static PyObject *__pyx_pf_8pydecode_5hyper_15MaxSparseVector_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials) {
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<MaxSparseVectorPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":2214
 *     def inside(Hypergraph graph,
 *                MaxSparseVectorPotentials potentials):
 *         cdef MaxSparseVectorChart chart = MaxSparseVectorChart()             # <<<<<<<<<<<<<<
 *         chart.chart = inside_MaxSparseVector(graph.thisptr, deref(potentials.thisptr))
 *         return chart
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MaxSparseVectorChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2215
 *                MaxSparseVectorPotentials potentials):
 *         cdef MaxSparseVectorChart chart = MaxSparseVectorChart()
 *         chart.chart = inside_MaxSparseVector(graph.thisptr, deref(potentials.thisptr))             # <<<<<<<<<<<<<<
 *         return chart
 * 
 */
  try {
    __pyx_t_2 = general_inside<MaxSparseVectorPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":2216
 *         cdef MaxSparseVectorChart chart = MaxSparseVectorChart()
 *         chart.chart = inside_MaxSparseVector(graph.thisptr, deref(potentials.thisptr))
 *         return chart             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_chart));
  __pyx_r = ((PyObject *)__pyx_v_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVector.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15MaxSparseVector_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_15MaxSparseVector_2outside[] = "MaxSparseVector.outside(Hypergraph graph, MaxSparseVectorPotentials potentials, MaxSparseVectorChart inside_chart)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_15MaxSparseVector_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_15MaxSparseVector_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_15MaxSparseVector_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_15MaxSparseVector_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)values[1]);
    __pyx_v_inside_chart = ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVector.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inside_chart), __pyx_ptype_8pydecode_5hyper_MaxSparseVectorChart, 1, "inside_chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15MaxSparseVector_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2219
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 MaxSparseVectorPotentials potentials,
 *                 MaxSparseVectorChart inside_chart):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_15MaxSparseVector_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_inside_chart) {
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *__pyx_v_out_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<MaxSparseVectorPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":2222
 *                 MaxSparseVectorPotentials potentials,
 *                 MaxSparseVectorChart inside_chart):
 *         cdef MaxSparseVectorChart out_chart = MaxSparseVectorChart()             # <<<<<<<<<<<<<<
 *         out_chart.chart = outside_MaxSparseVector(graph.thisptr,
 *                                              deref(potentials.thisptr),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MaxSparseVectorChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out_chart = ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2225
 *         out_chart.chart = outside_MaxSparseVector(graph.thisptr,
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))             # <<<<<<<<<<<<<<
 *         return out_chart
 * 
 */
  try {
    __pyx_t_2 = general_outside<MaxSparseVectorPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_inside_chart->chart));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2223
 *                 MaxSparseVectorChart inside_chart):
 *         cdef MaxSparseVectorChart out_chart = MaxSparseVectorChart()
 *         out_chart.chart = outside_MaxSparseVector(graph.thisptr,             # <<<<<<<<<<<<<<
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 */
  __pyx_v_out_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":2226
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 *         return out_chart             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out_chart));
  __pyx_r = ((PyObject *)__pyx_v_out_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVector.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15MaxSparseVector_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_15MaxSparseVector_4compute_marginals[] = "MaxSparseVector.compute_marginals(Hypergraph graph, MaxSparseVectorPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_15MaxSparseVector_5compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_15MaxSparseVector_5compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_15MaxSparseVector_4compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_15MaxSparseVector_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVector.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15MaxSparseVector_4compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2231
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           MaxSparseVectorPotentials potentials):
 *         cdef const CMaxSparseVectorMarginals *marginals = \
 */

static PyObject *__pyx_pf_8pydecode_5hyper_15MaxSparseVector_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials) {
  Marginals<MaxSparseVectorPotential> const *__pyx_v_marginals;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":2234
 *                           MaxSparseVectorPotentials potentials):
 *         cdef const CMaxSparseVectorMarginals *marginals = \
 *             MaxSparseVector_compute(graph.thisptr, potentials.thisptr)             # <<<<<<<<<<<<<<
 *         return _MaxSparseVectorMarginals().init(marginals, graph)
 * 
 */
  __pyx_v_marginals = Marginals<MaxSparseVectorPotential>::compute(__pyx_v_graph->thisptr, __pyx_v_potentials->thisptr);

  /* "pydecode/hyper.pyx":2235
 *         cdef const CMaxSparseVectorMarginals *marginals = \
 *             MaxSparseVector_compute(graph.thisptr, potentials.thisptr)
 *         return _MaxSparseVectorMarginals().init(marginals, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__MaxSparseVectorMarginals)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper__MaxSparseVectorMarginals *)((struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *)__pyx_t_1), __pyx_v_marginals, __pyx_v_graph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVector.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15MaxSparseVector_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_15MaxSparseVector_6prune_hypergraph[] = "MaxSparseVector.prune_hypergraph(Hypergraph graph, MaxSparseVectorPotentials potentials, threshold)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_15MaxSparseVector_7prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_15MaxSparseVector_7prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_15MaxSparseVector_6prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_15MaxSparseVector_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_threshold = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__threshold,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__threshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)values[1]);
    __pyx_v_threshold = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVector.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_15MaxSparseVector_6prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_threshold);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2239
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          MaxSparseVectorPotentials potentials,
 *                          threshold):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_15MaxSparseVector_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold) {
  PyObject *__pyx_v_marginals = NULL;
  PyObject *__pyx_v_bool_potentials = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":2242
 *                          MaxSparseVectorPotentials potentials,
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(((PyObject *)__pyx_v_potentials));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_potentials));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_potentials));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_marginals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pydecode/hyper.pyx":2243
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)             # <<<<<<<<<<<<<<
 *         return make_pruning_projections(graph, bool_potentials)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_marginals, __pyx_n_s__threshold); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_threshold);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_threshold);
  __Pyx_GIVEREF(__pyx_v_threshold);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_bool_potentials = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2244
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_bool_potentials);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_bool_potentials);
  __Pyx_GIVEREF(__pyx_v_bool_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.MaxSparseVector.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_marginals);
  __Pyx_XDECREF(__pyx_v_bool_potentials);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials___dealloc__(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2256
 *     """
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = NULL
 */

static void __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":2257
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "pydecode/hyper.pyx":2258
 *     def __dealloc__(self):
 *         del self.thisptr
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_2__cinit__(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2261
 * 
 * 
 *     def __cinit__(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         """
 *         Build the potential vector for a hypergraph.
 */

static int __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":2267
 *         :param hypergraph: The underlying hypergraph.
 *         """
 *         self.hypergraph = graph             # <<<<<<<<<<<<<<
 *         self.kind = BinaryVector
 *         self.thisptr = NULL
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->hypergraph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_v_self->hypergraph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":2268
 *         """
 *         self.hypergraph = graph
 *         self.kind = BinaryVector             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__BinaryVector); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2269
 *         self.hypergraph = graph
 *         self.kind = BinaryVector
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def times(self, BinaryVectorPotentials other):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_4times[] = "BinaryVectorPotentials.times(self, BinaryVectorPotentials other)";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("times (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_4times(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2271
 *         self.thisptr = NULL
 * 
 *     def times(self, BinaryVectorPotentials other):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphBinaryVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_4times(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_other) {
  HypergraphPotentials<BinaryVectorPotential> *__pyx_v_new_potentials;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("times", 0);

  /* "pydecode/hyper.pyx":2273
 *     def times(self, BinaryVectorPotentials other):
 *         cdef CHypergraphBinaryVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))             # <<<<<<<<<<<<<<
 *         return BinaryVectorPotentials(self.hypergraph).init(new_potentials, None)
 * 
 */
  __pyx_v_new_potentials = __pyx_v_self->thisptr->times((*__pyx_v_other->thisptr));

  /* "pydecode/hyper.pyx":2274
 *         cdef CHypergraphBinaryVectorPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 *         return BinaryVectorPotentials(self.hypergraph).init(new_potentials, None)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BinaryVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_t_2), __pyx_v_new_potentials, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_6clone[] = "BinaryVectorPotentials.clone(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_6clone(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2276
 *         return BinaryVectorPotentials(self.hypergraph).init(new_potentials, None)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         return BinaryVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pydecode/hyper.pyx":2277
 * 
 *     def clone(self):
 *         return BinaryVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BinaryVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_t_2), __pyx_v_self->thisptr->clone(), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_8project[] = "BinaryVectorPotentials.project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2279; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2279; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2279; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_8project(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2279
 *         return BinaryVectorPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 *     def project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphBinaryVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_8project(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<BinaryVectorPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":2281
 *     def project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphBinaryVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))             # <<<<<<<<<<<<<<
 *         return BinaryVectorPotentials(graph).init(ptr, None)
 * 
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->project_potentials((*__pyx_v_projection->thisptr));

  /* "pydecode/hyper.pyx":2282
 *         cdef CHypergraphBinaryVectorPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 *         return BinaryVectorPotentials(graph).init(ptr, None)             # <<<<<<<<<<<<<<
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BinaryVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_t_2), __pyx_v_ptr, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_10up_project[] = "BinaryVectorPotentials.up_project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("up_project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2284; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "up_project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2284; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2284; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_10up_project(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2284
 *         return BinaryVectorPotentials(graph).init(ptr, None)
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphBinaryVectorPotentials *ptr = \
 *             cmake_projected_potentials_BinaryVector(self.thisptr, projection.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<BinaryVectorPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  HypergraphPotentials<BinaryVectorPotential> *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("up_project", 0);

  /* "pydecode/hyper.pyx":2286
 *     def up_project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphBinaryVectorPotentials *ptr = \
 *             cmake_projected_potentials_BinaryVector(self.thisptr, projection.thisptr)             # <<<<<<<<<<<<<<
 *         return BinaryVectorPotentials(graph).init(ptr, projection)
 * 
 */
  try {
    __pyx_t_1 = HypergraphProjectedPotentials<BinaryVectorPotential>::make_potentials(__pyx_v_self->thisptr, __pyx_v_projection->thisptr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_ptr = __pyx_t_1;

  /* "pydecode/hyper.pyx":2287
 *         cdef CHypergraphBinaryVectorPotentials *ptr = \
 *             cmake_projected_potentials_BinaryVector(self.thisptr, projection.thisptr)
 *         return BinaryVectorPotentials(graph).init(ptr, projection)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, Hypergraph graph):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_BinaryVectorPotentials *)((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_t_3)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_t_3), __pyx_v_ptr, __pyx_v_projection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_12show[] = "BinaryVectorPotentials.show(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_12show(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2289
 *         return BinaryVectorPotentials(graph).init(ptr, projection)
 * 
 *     def show(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_12show(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "pydecode/hyper.pyx":2290
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__join); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pydecode/hyper.pyx":2291
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":2290
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__label); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_edge);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_edge);
    __Pyx_GIVEREF(__pyx_v_edge);
    __pyx_t_8 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_edge); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_8 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_4kind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_4kind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_4kind___get__(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2295
 * 
 *     property kind:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.kind
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":2296
 *     property kind:
 *         def __get__(self):
 *             return self.kind             # <<<<<<<<<<<<<<
 * 
 *     property bias:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kind);
  __pyx_r = __pyx_v_self->kind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_4bias_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_4bias_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_4bias___get__(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2299
 * 
 *     property bias:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return _BinaryVectorW_from_cpp(self.thisptr.bias())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":2300
 *     property bias:
 *         def __get__(self):
 *             return _BinaryVectorW_from_cpp(self.thisptr.bias())             # <<<<<<<<<<<<<<
 * 
 *     def build(self, fn, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(__pyx_v_self->thisptr->bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.bias.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_14build[] = "BinaryVectorPotentials.build(self, fn, bias=None)\n\n        build(fn)\n\n        Build the potential vector for a hypergraph.\n\n        :param fn: A function from edge labels to potentials.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fn = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":2302
 *             return _BinaryVectorW_from_cpp(self.thisptr.bias())
 * 
 *     def build(self, fn, bias=None):             # <<<<<<<<<<<<<<
 *         """
 *         build(fn)
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2302; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fn = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("build", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2302; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_14build(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), __pyx_v_fn, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_14build(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias) {
  bitset<500> __pyx_v_my_bias;
  std::vector<bitset<500> > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ty = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<bitset<500> > __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  HypergraphPotentials<BinaryVectorPotential> *__pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build", 0);

  /* "pydecode/hyper.pyx":2311
 *         """
 *         cdef cbitset my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = BinaryVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2312
 *         cdef cbitset my_bias
 *         if bias is None:
 *             my_bias = BinaryVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _BinaryVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = BinaryVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2314
 *             my_bias = BinaryVector_one()
 *         else:
 *             my_bias = _BinaryVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[cbitset] potentials = \
 */
    if (!(likely(((__pyx_v_bias) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_bias, __pyx_ptype_8pydecode_5hyper_Bitset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_v_bias));
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":2318
 *         cdef vector[cbitset] potentials = \
 *              vector[cbitset](self.hypergraph.thisptr.edges().size(),
 *              BinaryVector_zero())             # <<<<<<<<<<<<<<
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 */
  try {
    __pyx_t_3 = std::vector<bitset<500> >(__pyx_v_self->hypergraph->thisptr->edges().size(), BinaryVectorPotential::zero());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_3;

  /* "pydecode/hyper.pyx":2320
 *              BinaryVector_zero())
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):             # <<<<<<<<<<<<<<
 *             result = fn(ty)
 *             if result is None: potentials[i] = BinaryVector_zero()
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_4 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_self->hypergraph->edge_labels) || PyTuple_CheckExact(__pyx_v_self->hypergraph->edge_labels)) {
    __pyx_t_5 = __pyx_v_self->hypergraph->edge_labels; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
    __pyx_t_7 = NULL;
  } else {
    __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_self->hypergraph->edge_labels); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_7 && PyList_CheckExact(__pyx_t_5)) {
      if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_8 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_8); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_7 && PyTuple_CheckExact(__pyx_t_5)) {
      if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_8); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_8 = __pyx_t_7(__pyx_t_5);
      if (unlikely(!__pyx_t_8)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_8);
    }
    __Pyx_XDECREF_SET(__pyx_v_ty, __pyx_t_8);
    __pyx_t_8 = 0;
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_int_1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4);
    __pyx_t_4 = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "pydecode/hyper.pyx":2321
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)             # <<<<<<<<<<<<<<
 *             if result is None: potentials[i] = BinaryVector_zero()
 *             potentials[i] = _BinaryVectorW_to_cpp(result)
 */
    __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_v_ty);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_ty);
    __Pyx_GIVEREF(__pyx_v_ty);
    __pyx_t_9 = PyObject_Call(__pyx_v_fn, ((PyObject *)__pyx_t_8), NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __Pyx_XDECREF_SET(__pyx_v_result, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":2322
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)
 *             if result is None: potentials[i] = BinaryVector_zero()             # <<<<<<<<<<<<<<
 *             potentials[i] = _BinaryVectorW_to_cpp(result)
 *         self.thisptr =  \
 */
    __pyx_t_2 = (__pyx_v_result == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {
      __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_potentials[__pyx_t_10]) = BinaryVectorPotential::zero();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "pydecode/hyper.pyx":2323
 *             result = fn(ty)
 *             if result is None: potentials[i] = BinaryVector_zero()
 *             potentials[i] = _BinaryVectorW_to_cpp(result)             # <<<<<<<<<<<<<<
 *         self.thisptr =  \
 *             cmake_potentials_BinaryVector(self.hypergraph.thisptr,
 */
    if (!(likely(((__pyx_v_result) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_result, __pyx_ptype_8pydecode_5hyper_Bitset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_10]) = __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_v_result));
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pydecode/hyper.pyx":2326
 *         self.thisptr =  \
 *             cmake_potentials_BinaryVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_11 = HypergraphVectorPotentials<BinaryVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2324
 *             if result is None: potentials[i] = BinaryVector_zero()
 *             potentials[i] = _BinaryVectorW_to_cpp(result)
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *             cmake_potentials_BinaryVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_11;

  /* "pydecode/hyper.pyx":2327
 *             cmake_potentials_BinaryVector(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_potentials(self, other_potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ty);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_16from_potentials[] = "BinaryVectorPotentials.from_potentials(self, other_potentials)";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_potentials (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_16from_potentials(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), ((PyObject *)__pyx_v_other_potentials));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2329
 *         return self
 * 
 *     def from_potentials(self, other_potentials):             # <<<<<<<<<<<<<<
 *         cdef vector[cbitset] potentials = \
 *              vector[cbitset](self.hypergraph.thisptr.edges().size())
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  std::vector<bitset<500> > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<bitset<500> > __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  size_t __pyx_t_7;
  HypergraphPotentials<BinaryVectorPotential> *__pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_potentials", 0);

  /* "pydecode/hyper.pyx":2331
 *     def from_potentials(self, other_potentials):
 *         cdef vector[cbitset] potentials = \
 *              vector[cbitset](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 */
  try {
    __pyx_t_1 = std::vector<bitset<500> >(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_1;

  /* "pydecode/hyper.pyx":2333
 *              vector[cbitset](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):             # <<<<<<<<<<<<<<
 *             potentials[i] = _BinaryVectorW_to_cpp(other_potentials[edge])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->hypergraph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":2334
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 *             potentials[i] = _BinaryVectorW_to_cpp(other_potentials[edge])             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_other_potentials, __pyx_v_edge); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8pydecode_5hyper_Bitset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_7 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_7]) = __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_t_3));
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2340
 *             self.hypergraph.thisptr,
 *             potentials,
 *             _BinaryVectorW_to_cpp(other_potentials.bias))             # <<<<<<<<<<<<<<
 * 
 *         return self
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_other_potentials, __pyx_n_s__bias); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8pydecode_5hyper_Bitset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_8 = HypergraphVectorPotentials<BinaryVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_t_2)));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2336
 *             potentials[i] = _BinaryVectorW_to_cpp(other_potentials[edge])
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_BinaryVector(
 *             self.hypergraph.thisptr,
 */
  __pyx_v_self->thisptr = __pyx_t_8;

  /* "pydecode/hyper.pyx":2342
 *             _BinaryVectorW_to_cpp(other_potentials.bias))
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_vector(self, in_vec, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.from_potentials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_18from_vector[] = "BinaryVectorPotentials.from_vector(self, in_vec, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_vec = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_vector (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_vec,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":2344
 *         return self
 * 
 *     def from_vector(self, in_vec, bias=None):             # <<<<<<<<<<<<<<
 *         cdef cbitset my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_vector") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2344; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_vec = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_vector", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2344; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_18from_vector(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), __pyx_v_in_vec, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias) {
  bitset<500> __pyx_v_my_bias;
  std::vector<bitset<500> > __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::vector<bitset<500> > __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  size_t __pyx_t_9;
  HypergraphPotentials<BinaryVectorPotential> *__pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_vector", 0);

  /* "pydecode/hyper.pyx":2346
 *     def from_vector(self, in_vec, bias=None):
 *         cdef cbitset my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = BinaryVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2347
 *         cdef cbitset my_bias
 *         if bias is None:
 *             my_bias = BinaryVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _BinaryVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = BinaryVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2349
 *             my_bias = BinaryVector_one()
 *         else:
 *             my_bias = _BinaryVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[cbitset] potentials = \
 */
    if (!(likely(((__pyx_v_bias) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_bias, __pyx_ptype_8pydecode_5hyper_Bitset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_v_bias));
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":2352
 * 
 *         cdef vector[cbitset] potentials = \
 *              vector[cbitset](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, v in enumerate(in_vec):
 */
  try {
    __pyx_t_3 = std::vector<bitset<500> >(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_3;

  /* "pydecode/hyper.pyx":2354
 *              vector[cbitset](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, v in enumerate(in_vec):             # <<<<<<<<<<<<<<
 *             potentials[i] = _BinaryVectorW_to_cpp(v)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_4 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_in_vec) || PyTuple_CheckExact(__pyx_v_in_vec)) {
    __pyx_t_5 = __pyx_v_in_vec; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
    __pyx_t_7 = NULL;
  } else {
    __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_in_vec); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_7 && PyList_CheckExact(__pyx_t_5)) {
      if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_8 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_8); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_7 && PyTuple_CheckExact(__pyx_t_5)) {
      if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_8); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_8 = __pyx_t_7(__pyx_t_5);
      if (unlikely(!__pyx_t_8)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_8);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_8);
    __pyx_t_8 = 0;
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_int_1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4);
    __pyx_t_4 = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "pydecode/hyper.pyx":2355
 * 
 *         for i, v in enumerate(in_vec):
 *             potentials[i] = _BinaryVectorW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    if (!(likely(((__pyx_v_v) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_v, __pyx_ptype_8pydecode_5hyper_Bitset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_9 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_9]) = __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_v_v));
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pydecode/hyper.pyx":2359
 *         self.thisptr =  \
 *           cmake_potentials_BinaryVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_10 = HypergraphVectorPotentials<BinaryVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2357
 *             potentials[i] = _BinaryVectorW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_BinaryVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_10;

  /* "pydecode/hyper.pyx":2360
 *           cmake_potentials_BinaryVector(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_map(self, in_map, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_20from_map[] = "BinaryVectorPotentials.from_map(self, in_map, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_map = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_map (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_map,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":2362
 *         return self
 * 
 *     def from_map(self, in_map, bias=None):             # <<<<<<<<<<<<<<
 *         cdef cbitset my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_map)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_map") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2362; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_map = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_map", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2362; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_20from_map(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), __pyx_v_in_map, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias) {
  bitset<500> __pyx_v_my_bias;
  std::map<int,int> __pyx_v_map_potentials;
  std::vector<bitset<500> > __pyx_v_potentials;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  std::vector<bitset<500> > __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  size_t __pyx_t_13;
  HypergraphPotentials<BinaryVectorPotential> *__pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_map", 0);

  /* "pydecode/hyper.pyx":2364
 *     def from_map(self, in_map, bias=None):
 *         cdef cbitset my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = BinaryVector_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2365
 *         cdef cbitset my_bias
 *         if bias is None:
 *             my_bias = BinaryVector_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _BinaryVectorW_to_cpp(bias)
 */
    __pyx_v_my_bias = BinaryVectorPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2367
 *             my_bias = BinaryVector_one()
 *         else:
 *             my_bias = _BinaryVectorW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef c_map.map[int,int] map_potentials
 */
    if (!(likely(((__pyx_v_bias) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_bias, __pyx_ptype_8pydecode_5hyper_Bitset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_v_bias));
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":2371
 *         cdef c_map.map[int,int] map_potentials
 *         cdef vector[cbitset] potentials = \
 *             vector[cbitset](len(in_map))             # <<<<<<<<<<<<<<
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 */
  __pyx_t_3 = PyObject_Length(__pyx_v_in_map); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_4 = std::vector<bitset<500> >(__pyx_t_3);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":2373
 *             vector[cbitset](len(in_map))
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):             # <<<<<<<<<<<<<<
 *             map_potentials[key] = j
 *             potentials[j] = _BinaryVectorW_to_cpp(v)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  __pyx_t_3 = 0;
  if (unlikely(__pyx_v_in_map == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_9 = __Pyx_dict_iterator(__pyx_v_in_map, 0, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_6);
  __pyx_t_6 = __pyx_t_9;
  __pyx_t_9 = 0;
  while (1) {
    __pyx_t_11 = __Pyx_dict_iter_next(__pyx_t_6, __pyx_t_7, &__pyx_t_3, &__pyx_t_9, &__pyx_t_10, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_11 == 0)) break;
    if (unlikely(__pyx_t_11 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_5);
    __pyx_t_10 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_10;
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":2374
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j             # <<<<<<<<<<<<<<
 *             potentials[j] = _BinaryVectorW_to_cpp(v)
 * 
 */
    __pyx_t_11 = __Pyx_PyInt_AsInt(__pyx_v_j); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_12 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_map_potentials[__pyx_t_12]) = __pyx_t_11;

    /* "pydecode/hyper.pyx":2375
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j
 *             potentials[j] = _BinaryVectorW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    if (!(likely(((__pyx_v_v) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_v, __pyx_ptype_8pydecode_5hyper_Bitset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyInt_AsSize_t(__pyx_v_j); if (unlikely((__pyx_t_13 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_13]) = __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_v_v));
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":2380
 *           cmake_potentials_BinaryVector(self.hypergraph.thisptr,
 *                                       map_potentials,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_14 = HypergraphMapPotentials<BinaryVectorPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_map_potentials, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2377
 *             potentials[j] = _BinaryVectorW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_BinaryVector(self.hypergraph.thisptr,
 *                                       map_potentials,
 */
  __pyx_v_self->thisptr = __pyx_t_14;

  /* "pydecode/hyper.pyx":2381
 *                                       map_potentials,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, CHypergraphBinaryVectorPotentials *ptr,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2383
 *         return self
 * 
 *     cdef init(self, CHypergraphBinaryVectorPotentials *ptr,             # <<<<<<<<<<<<<<
 *               Projection projection):
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_8pydecode_5hyper_22BinaryVectorPotentials_init(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, HypergraphPotentials<BinaryVectorPotential> *__pyx_v_ptr, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":2385
 *     cdef init(self, CHypergraphBinaryVectorPotentials *ptr,
 *               Projection projection):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.projection = projection
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":2386
 *               Projection projection):
 *         self.thisptr = ptr
 *         self.projection = projection             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_projection));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_projection));
  __Pyx_GOTREF(__pyx_v_self->projection);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->projection));
  __pyx_v_self->projection = __pyx_v_projection;

  /* "pydecode/hyper.pyx":2387
 *         self.thisptr = ptr
 *         self.projection = projection
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Edge edge not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), __pyx_ptype_8pydecode_10hypergraph_Edge, 0, "edge", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2389; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_22__getitem__(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_edge));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2389
 *         return self
 * 
 *     def __getitem__(self, Edge edge not None):             # <<<<<<<<<<<<<<
 *         return _BinaryVectorW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":2390
 * 
 *     def __getitem__(self, Edge edge not None):
 *         return _BinaryVectorW_from_cpp(self.thisptr.score(edge.edgeptr))             # <<<<<<<<<<<<<<
 * 
 *     def dot(self, Path path not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(__pyx_v_self->thisptr->score(__pyx_v_edge->edgeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_24dot[] = "BinaryVectorPotentials.dot(self, Path path)\n\n        dot(path)\n\n        Take the dot product with `path` :math:`\\theta^{\\top} y`.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), __pyx_ptype_8pydecode_10hypergraph_Path, 0, "path", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_24dot(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_v_path));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2392
 *         return _BinaryVectorW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 *     def dot(self, Path path not None):             # <<<<<<<<<<<<<<
 *         r"""
 *         dot(path)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22BinaryVectorPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bitset<500> __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "pydecode/hyper.pyx":2399
 *         """
 * 
 *         return _BinaryVectorW_from_cpp(self.thisptr.dot(deref(path.thisptr)))             # <<<<<<<<<<<<<<
 *         #return _BinaryVectorW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->dot((*__pyx_v_path->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorPotentials.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14_BinaryVectorW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14_BinaryVectorW_one[] = "_BinaryVectorW.one()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_14_BinaryVectorW_1one = {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14_BinaryVectorW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14_BinaryVectorW_one)};
static PyObject *__pyx_pw_8pydecode_5hyper_14_BinaryVectorW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("one (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("one", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "one", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_14_BinaryVectorW_one();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2404
 * cdef class _BinaryVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _BinaryVectorW_from_cpp(BinaryVector_one())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14_BinaryVectorW_one() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("one", 0);

  /* "pydecode/hyper.pyx":2405
 *     @staticmethod
 *     def one():
 *         return _BinaryVectorW_from_cpp(BinaryVector_one())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(BinaryVectorPotential::one()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._BinaryVectorW.one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_14_BinaryVectorW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14_BinaryVectorW_2zero[] = "_BinaryVectorW.zero()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_14_BinaryVectorW_3zero = {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14_BinaryVectorW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14_BinaryVectorW_2zero)};
static PyObject *__pyx_pw_8pydecode_5hyper_14_BinaryVectorW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zero (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("zero", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "zero", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_14_BinaryVectorW_2zero();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2408
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _BinaryVectorW_from_cpp(BinaryVector_zero())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14_BinaryVectorW_2zero() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zero", 0);

  /* "pydecode/hyper.pyx":2409
 *     @staticmethod
 *     def zero():
 *         return _BinaryVectorW_from_cpp(BinaryVector_zero())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(BinaryVectorPotential::zero()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._BinaryVectorW.zero", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2412
 * 
 * 
 * cdef cbitset _BinaryVectorW_to_cpp(Bitset val):             # <<<<<<<<<<<<<<
 * 
 *     return val.data
 */

static bitset<500> __pyx_f_8pydecode_5hyper__BinaryVectorW_to_cpp(struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_val) {
  bitset<500> __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_BinaryVectorW_to_cpp", 0);

  /* "pydecode/hyper.pyx":2414
 * cdef cbitset _BinaryVectorW_to_cpp(Bitset val):
 * 
 *     return val.data             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_val->data;
  goto __pyx_L0;

  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2418
 * 
 * 
 * cdef _BinaryVectorW_from_cpp(cbitset val):             # <<<<<<<<<<<<<<
 * 
 *     return Bitset().init(val)
 */

static PyObject *__pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(bitset<500> __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_BinaryVectorW_from_cpp", 0);

  /* "pydecode/hyper.pyx":2420
 * cdef _BinaryVectorW_from_cpp(cbitset val):
 * 
 *     return Bitset().init(val)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_Bitset)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_Bitset *)((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_Bitset *)__pyx_t_1), __pyx_v_val); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper._BinaryVectorW_from_cpp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_17BinaryVectorChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_17BinaryVectorChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};

    /* "pydecode/hyper.pyx":2461
 * cdef class BinaryVectorChart:
 * 
 *     def __init__(self, Hypergraph graph=None):             # <<<<<<<<<<<<<<
 *         self.kind = BinaryVector
 *         self.chart = NULL
 */
    values[0] = (PyObject *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2461; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2461; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17BinaryVectorChart___init__(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pydecode_5hyper_17BinaryVectorChart___init__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":2462
 * 
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = BinaryVector             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 *         if graph is not None:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__BinaryVector); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2463
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = BinaryVector
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 *         if graph is not None:
 *             self.chart = new CBinaryVectorChart(graph.thisptr)
 */
  __pyx_v_self->chart = NULL;

  /* "pydecode/hyper.pyx":2464
 *         self.kind = BinaryVector
 *         self.chart = NULL
 *         if graph is not None:             # <<<<<<<<<<<<<<
 *             self.chart = new CBinaryVectorChart(graph.thisptr)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_graph) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pydecode/hyper.pyx":2465
 *         self.chart = NULL
 *         if graph is not None:
 *             self.chart = new CBinaryVectorChart(graph.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Node node):
 */
    __pyx_v_self->chart = new Chart<BinaryVectorPotential>(__pyx_v_graph->thisptr);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17BinaryVectorChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_17BinaryVectorChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_8pydecode_10hypergraph_Node, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_17BinaryVectorChart_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_node));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2467
 *             self.chart = new CBinaryVectorChart(graph.thisptr)
 * 
 *     def __getitem__(self, Node node):             # <<<<<<<<<<<<<<
 *         return _BinaryVectorW_from_cpp(self.chart.get(node.nodeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_17BinaryVectorChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":2468
 * 
 *     def __getitem__(self, Node node):
 *         return _BinaryVectorW_from_cpp(self.chart.get(node.nodeptr))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(__pyx_v_self->chart->get(__pyx_v_node->nodeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVectorChart.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_17BinaryVectorChart_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_17BinaryVectorChart_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_17BinaryVectorChart_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2470
 *         return _BinaryVectorW_from_cpp(self.chart.get(node.nodeptr))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.chart
 *         self.chart = NULL
 */

static void __pyx_pf_8pydecode_5hyper_17BinaryVectorChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":2471
 * 
 *     def __dealloc__(self):
 *         del self.chart             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 * 
 */
  delete __pyx_v_self->chart;

  /* "pydecode/hyper.pyx":2472
 *     def __dealloc__(self):
 *         del self.chart
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _BinaryVectorMarginals:
 */
  __pyx_v_self->chart = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_22_BinaryVectorMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_22_BinaryVectorMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_22_BinaryVectorMarginals___init__(((struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2478
 *     cdef Hypergraph graph
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_22_BinaryVectorMarginals___init__(struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":2479
 * 
 *     def __init__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_22_BinaryVectorMarginals_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_22_BinaryVectorMarginals_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_22_BinaryVectorMarginals_2__dealloc__(((struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2481
 *         self.thisptr = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_8pydecode_5hyper_22_BinaryVectorMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":2482
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, const CBinaryVectorMarginals *ptr, Hypergraph graph):
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2484
 *         del self.thisptr
 * 
 *     cdef init(self, const CBinaryVectorMarginals *ptr, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         self.graph = graph
 */

static PyObject *__pyx_f_8pydecode_5hyper_22_BinaryVectorMarginals_init(struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *__pyx_v_self, Marginals<BinaryVectorPotential> const *__pyx_v_ptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":2485
 * 
 *     cdef init(self, const CBinaryVectorMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.graph = graph
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":2486
 *     cdef init(self, const CBinaryVectorMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr
 *         self.graph = graph             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->graph));
  __pyx_v_self->graph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":2487
 *         self.thisptr = ptr
 *         self.graph = graph
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_22_BinaryVectorMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_22_BinaryVectorMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_22_BinaryVectorMarginals_4__getitem__(((struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2489
 *         return self
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Edge):
 *             return _BinaryVectorW_from_cpp(
 */

static PyObject *__pyx_pf_8pydecode_5hyper_22_BinaryVectorMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":2490
 * 
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             return _BinaryVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2491
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):
 *             return _BinaryVectorW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":2492
 *         if isinstance(obj, Edge):
 *             return _BinaryVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))             # <<<<<<<<<<<<<<
 *         elif isinstance(obj, Node):
 *             return _BinaryVectorW_from_cpp(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "pydecode/hyper.pyx":2493
 *             return _BinaryVectorW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             return _BinaryVectorW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":2494
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 *             return _BinaryVectorW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":2495
 *         elif isinstance(obj, Node):
 *             return _BinaryVectorW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))             # <<<<<<<<<<<<<<
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__BinaryVectorW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2497
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(             # <<<<<<<<<<<<<<
 *                 "Only nodes and edges have BinaryVector marginal values." + \
 *                 "Passed %s."%obj)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__py_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":2499
 *             raise py_hypergraph.HypergraphAccessException(
 *                 "Only nodes and edges have BinaryVector marginal values." + \
 *                 "Passed %s."%obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_13), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pydecode.hyper._BinaryVectorMarginals.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12BinaryVector_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12BinaryVector_inside[] = "BinaryVector.inside(Hypergraph graph, BinaryVectorPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12BinaryVector_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12BinaryVector_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12BinaryVector_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_12BinaryVector_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVector.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12BinaryVector_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2510
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                BinaryVectorPotentials potentials):
 *         cdef BinaryVectorChart chart = BinaryVectorChart()
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12BinaryVector_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials) {
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<BinaryVectorPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":2512
 *     def inside(Hypergraph graph,
 *                BinaryVectorPotentials potentials):
 *         cdef BinaryVectorChart chart = BinaryVectorChart()             # <<<<<<<<<<<<<<
 *         chart.chart = inside_BinaryVector(graph.thisptr, deref(potentials.thisptr))
 *         return chart
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BinaryVectorChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2513
 *                BinaryVectorPotentials potentials):
 *         cdef BinaryVectorChart chart = BinaryVectorChart()
 *         chart.chart = inside_BinaryVector(graph.thisptr, deref(potentials.thisptr))             # <<<<<<<<<<<<<<
 *         return chart
 * 
 */
  try {
    __pyx_t_2 = general_inside<BinaryVectorPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":2514
 *         cdef BinaryVectorChart chart = BinaryVectorChart()
 *         chart.chart = inside_BinaryVector(graph.thisptr, deref(potentials.thisptr))
 *         return chart             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_chart));
  __pyx_r = ((PyObject *)__pyx_v_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVector.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12BinaryVector_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12BinaryVector_2outside[] = "BinaryVector.outside(Hypergraph graph, BinaryVectorPotentials potentials, BinaryVectorChart inside_chart)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12BinaryVector_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12BinaryVector_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12BinaryVector_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_12BinaryVector_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2517; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2517; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2517; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)values[1]);
    __pyx_v_inside_chart = ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2517; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVector.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inside_chart), __pyx_ptype_8pydecode_5hyper_BinaryVectorChart, 1, "inside_chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12BinaryVector_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2517
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 BinaryVectorPotentials potentials,
 *                 BinaryVectorChart inside_chart):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12BinaryVector_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_inside_chart) {
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *__pyx_v_out_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<BinaryVectorPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":2520
 *                 BinaryVectorPotentials potentials,
 *                 BinaryVectorChart inside_chart):
 *         cdef BinaryVectorChart out_chart = BinaryVectorChart()             # <<<<<<<<<<<<<<
 *         out_chart.chart = outside_BinaryVector(graph.thisptr,
 *                                              deref(potentials.thisptr),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BinaryVectorChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out_chart = ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2523
 *         out_chart.chart = outside_BinaryVector(graph.thisptr,
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))             # <<<<<<<<<<<<<<
 *         return out_chart
 * 
 */
  try {
    __pyx_t_2 = general_outside<BinaryVectorPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_inside_chart->chart));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2521
 *                 BinaryVectorChart inside_chart):
 *         cdef BinaryVectorChart out_chart = BinaryVectorChart()
 *         out_chart.chart = outside_BinaryVector(graph.thisptr,             # <<<<<<<<<<<<<<
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 */
  __pyx_v_out_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":2524
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 *         return out_chart             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out_chart));
  __pyx_r = ((PyObject *)__pyx_v_out_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVector.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12BinaryVector_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12BinaryVector_4compute_marginals[] = "BinaryVector.compute_marginals(Hypergraph graph, BinaryVectorPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12BinaryVector_5compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12BinaryVector_5compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12BinaryVector_4compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_12BinaryVector_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2529; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2529; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2529; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVector.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12BinaryVector_4compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2529
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           BinaryVectorPotentials potentials):
 *         cdef const CBinaryVectorMarginals *marginals = \
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12BinaryVector_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials) {
  Marginals<BinaryVectorPotential> const *__pyx_v_marginals;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":2532
 *                           BinaryVectorPotentials potentials):
 *         cdef const CBinaryVectorMarginals *marginals = \
 *             BinaryVector_compute(graph.thisptr, potentials.thisptr)             # <<<<<<<<<<<<<<
 *         return _BinaryVectorMarginals().init(marginals, graph)
 * 
 */
  __pyx_v_marginals = Marginals<BinaryVectorPotential>::compute(__pyx_v_graph->thisptr, __pyx_v_potentials->thisptr);

  /* "pydecode/hyper.pyx":2533
 *         cdef const CBinaryVectorMarginals *marginals = \
 *             BinaryVector_compute(graph.thisptr, potentials.thisptr)
 *         return _BinaryVectorMarginals().init(marginals, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__BinaryVectorMarginals)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper__BinaryVectorMarginals *)((struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *)__pyx_t_1), __pyx_v_marginals, __pyx_v_graph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVector.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_12BinaryVector_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12BinaryVector_6prune_hypergraph[] = "BinaryVector.prune_hypergraph(Hypergraph graph, BinaryVectorPotentials potentials, threshold)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_12BinaryVector_7prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12BinaryVector_7prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12BinaryVector_6prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_12BinaryVector_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_threshold = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__threshold,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__threshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)values[1]);
    __pyx_v_threshold = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.BinaryVector.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12BinaryVector_6prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_threshold);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2537
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          BinaryVectorPotentials potentials,
 *                          threshold):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12BinaryVector_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold) {
  PyObject *__pyx_v_marginals = NULL;
  PyObject *__pyx_v_bool_potentials = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":2540
 *                          BinaryVectorPotentials potentials,
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(((PyObject *)__pyx_v_potentials));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_potentials));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_potentials));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_marginals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pydecode/hyper.pyx":2541
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)             # <<<<<<<<<<<<<<
 *         return make_pruning_projections(graph, bool_potentials)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_marginals, __pyx_n_s__threshold); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_threshold);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_threshold);
  __Pyx_GIVEREF(__pyx_v_threshold);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_bool_potentials = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2542
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_bool_potentials);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_bool_potentials);
  __Pyx_GIVEREF(__pyx_v_bool_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.BinaryVector.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_marginals);
  __Pyx_XDECREF(__pyx_v_bool_potentials);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_18CountingPotentials_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_18CountingPotentials_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_18CountingPotentials___dealloc__(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2554
 *     """
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = NULL
 */

static void __pyx_pf_8pydecode_5hyper_18CountingPotentials___dealloc__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":2555
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "pydecode/hyper.pyx":2556
 *     def __dealloc__(self):
 *         del self.thisptr
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_18CountingPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_18CountingPotentials_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_2__cinit__(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2559
 * 
 * 
 *     def __cinit__(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         """
 *         Build the potential vector for a hypergraph.
 */

static int __pyx_pf_8pydecode_5hyper_18CountingPotentials_2__cinit__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":2565
 *         :param hypergraph: The underlying hypergraph.
 *         """
 *         self.hypergraph = graph             # <<<<<<<<<<<<<<
 *         self.kind = Counting
 *         self.thisptr = NULL
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->hypergraph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_v_self->hypergraph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":2566
 *         """
 *         self.hypergraph = graph
 *         self.kind = Counting             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__Counting); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2567
 *         self.hypergraph = graph
 *         self.kind = Counting
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def times(self, CountingPotentials other):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_4times[] = "CountingPotentials.times(self, CountingPotentials other)";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_5times(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("times (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_4times(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2569
 *         self.thisptr = NULL
 * 
 *     def times(self, CountingPotentials other):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphCountingPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_4times(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_other) {
  HypergraphPotentials<CountingPotential> *__pyx_v_new_potentials;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("times", 0);

  /* "pydecode/hyper.pyx":2571
 *     def times(self, CountingPotentials other):
 *         cdef CHypergraphCountingPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))             # <<<<<<<<<<<<<<
 *         return CountingPotentials(self.hypergraph).init(new_potentials, None)
 * 
 */
  __pyx_v_new_potentials = __pyx_v_self->thisptr->times((*__pyx_v_other->thisptr));

  /* "pydecode/hyper.pyx":2572
 *         cdef CHypergraphCountingPotentials *new_potentials = \
 *             self.thisptr.times(deref(other.thisptr))
 *         return CountingPotentials(self.hypergraph).init(new_potentials, None)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_CountingPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_CountingPotentials *)((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_t_2), __pyx_v_new_potentials, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_6clone[] = "CountingPotentials.clone(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_6clone(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2574
 *         return CountingPotentials(self.hypergraph).init(new_potentials, None)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         return CountingPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_6clone(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pydecode/hyper.pyx":2575
 * 
 *     def clone(self):
 *         return CountingPotentials(self.hypergraph).init(self.thisptr.clone(), None)             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hypergraph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->hypergraph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->hypergraph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_CountingPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_CountingPotentials *)((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_t_2), __pyx_v_self->thisptr->clone(), ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_8project[] = "CountingPotentials.project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_9project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2577; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2577; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2577; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_8project(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2577
 *         return CountingPotentials(self.hypergraph).init(self.thisptr.clone(), None)
 * 
 *     def project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphCountingPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_8project(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<CountingPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":2579
 *     def project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphCountingPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))             # <<<<<<<<<<<<<<
 *         return CountingPotentials(graph).init(ptr, None)
 * 
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->project_potentials((*__pyx_v_projection->thisptr));

  /* "pydecode/hyper.pyx":2580
 *         cdef CHypergraphCountingPotentials *ptr = \
 *             self.thisptr.project_potentials(deref(projection.thisptr))
 *         return CountingPotentials(graph).init(ptr, None)             # <<<<<<<<<<<<<<
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_CountingPotentials)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pydecode_5hyper_CountingPotentials *)((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_t_2)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_t_2), __pyx_v_ptr, ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_10up_project[] = "CountingPotentials.up_project(self, Hypergraph graph, Projection projection)";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_11up_project(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("up_project (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__projection,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__projection)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "up_project") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("up_project", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_projection), __pyx_ptype_8pydecode_5hyper_Projection, 1, "projection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_10up_project(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), __pyx_v_graph, __pyx_v_projection);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2582
 *         return CountingPotentials(graph).init(ptr, None)
 * 
 *     def up_project(self, Hypergraph graph, Projection projection):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphCountingPotentials *ptr = \
 *             cmake_projected_potentials_Counting(self.thisptr, projection.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_10up_project(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  HypergraphPotentials<CountingPotential> *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  HypergraphPotentials<CountingPotential> *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("up_project", 0);

  /* "pydecode/hyper.pyx":2584
 *     def up_project(self, Hypergraph graph, Projection projection):
 *         cdef CHypergraphCountingPotentials *ptr = \
 *             cmake_projected_potentials_Counting(self.thisptr, projection.thisptr)             # <<<<<<<<<<<<<<
 *         return CountingPotentials(graph).init(ptr, projection)
 * 
 */
  try {
    __pyx_t_1 = HypergraphProjectedPotentials<CountingPotential>::make_potentials(__pyx_v_self->thisptr, __pyx_v_projection->thisptr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_ptr = __pyx_t_1;

  /* "pydecode/hyper.pyx":2585
 *         cdef CHypergraphCountingPotentials *ptr = \
 *             cmake_projected_potentials_Counting(self.thisptr, projection.thisptr)
 *         return CountingPotentials(graph).init(ptr, projection)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, Hypergraph graph):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_CountingPotentials)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper_CountingPotentials *)((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_t_3)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_t_3), __pyx_v_ptr, __pyx_v_projection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.up_project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_12show[] = "CountingPotentials.show(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_13show(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_12show(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2587
 *         return CountingPotentials(graph).init(ptr, projection)
 * 
 *     def show(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_12show(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "pydecode/hyper.pyx":2588
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__join); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pydecode/hyper.pyx":2589
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])
 *            for edge in graph.edges])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":2588
 * 
 *     def show(self, Hypergraph graph):
 *         return "\n".join(["%20s : %s"%(graph.label(edge), self[edge])             # <<<<<<<<<<<<<<
 *            for edge in graph.edges])
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_graph), __pyx_n_s__label); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_edge);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_edge);
    __Pyx_GIVEREF(__pyx_v_edge);
    __pyx_t_8 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_edge); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_8 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_4kind_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_4kind_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_4kind___get__(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2593
 * 
 *     property kind:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.kind
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_4kind___get__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":2594
 *     property kind:
 *         def __get__(self):
 *             return self.kind             # <<<<<<<<<<<<<<
 * 
 *     property bias:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kind);
  __pyx_r = __pyx_v_self->kind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_4bias_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_4bias_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_4bias___get__(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2597
 * 
 *     property bias:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return _CountingW_from_cpp(self.thisptr.bias())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_4bias___get__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pydecode/hyper.pyx":2598
 *     property bias:
 *         def __get__(self):
 *             return _CountingW_from_cpp(self.thisptr.bias())             # <<<<<<<<<<<<<<
 * 
 *     def build(self, fn, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__CountingW_from_cpp(__pyx_v_self->thisptr->bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.bias.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_14build[] = "CountingPotentials.build(self, fn, bias=None)\n\n        build(fn)\n\n        Build the potential vector for a hypergraph.\n\n        :param fn: A function from edge labels to potentials.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_15build(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fn = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":2600
 *             return _CountingW_from_cpp(self.thisptr.bias())
 * 
 *     def build(self, fn, bias=None):             # <<<<<<<<<<<<<<
 *         """
 *         build(fn)
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2600; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fn = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("build", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2600; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_14build(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), __pyx_v_fn, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_14build(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, PyObject *__pyx_v_fn, PyObject *__pyx_v_bias) {
  int __pyx_v_my_bias;
  std::vector<int> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ty = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  std::vector<int> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  size_t __pyx_t_11;
  HypergraphPotentials<CountingPotential> *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build", 0);

  /* "pydecode/hyper.pyx":2609
 *         """
 *         cdef int my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Counting_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2610
 *         cdef int my_bias
 *         if bias is None:
 *             my_bias = Counting_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _CountingW_to_cpp(bias)
 */
    __pyx_v_my_bias = CountingPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2612
 *             my_bias = Counting_one()
 *         else:
 *             my_bias = _CountingW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[int] potentials = \
 */
    __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_bias); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__CountingW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":2616
 *         cdef vector[int] potentials = \
 *              vector[int](self.hypergraph.thisptr.edges().size(),
 *              Counting_zero())             # <<<<<<<<<<<<<<
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 */
  try {
    __pyx_t_4 = std::vector<int>(__pyx_v_self->hypergraph->thisptr->edges().size(), CountingPotential::zero());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":2618
 *              Counting_zero())
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):             # <<<<<<<<<<<<<<
 *             result = fn(ty)
 *             if result is None: potentials[i] = Counting_zero()
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_self->hypergraph->edge_labels) || PyTuple_CheckExact(__pyx_v_self->hypergraph->edge_labels)) {
    __pyx_t_6 = __pyx_v_self->hypergraph->edge_labels; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_self->hypergraph->edge_labels); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_ty, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":2619
 *         # cdef d result
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)             # <<<<<<<<<<<<<<
 *             if result is None: potentials[i] = Counting_zero()
 *             potentials[i] = _CountingW_to_cpp(result)
 */
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_ty);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_ty);
    __Pyx_GIVEREF(__pyx_v_ty);
    __pyx_t_10 = PyObject_Call(__pyx_v_fn, ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_result, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":2620
 *         for i, ty in enumerate(self.hypergraph.edge_labels):
 *             result = fn(ty)
 *             if result is None: potentials[i] = Counting_zero()             # <<<<<<<<<<<<<<
 *             potentials[i] = _CountingW_to_cpp(result)
 *         self.thisptr =  \
 */
    __pyx_t_2 = (__pyx_v_result == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {
      __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_potentials[__pyx_t_11]) = CountingPotential::zero();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "pydecode/hyper.pyx":2621
 *             result = fn(ty)
 *             if result is None: potentials[i] = Counting_zero()
 *             potentials[i] = _CountingW_to_cpp(result)             # <<<<<<<<<<<<<<
 *         self.thisptr =  \
 *             cmake_potentials_Counting(self.hypergraph.thisptr,
 */
    __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_result); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_11]) = __pyx_f_8pydecode_5hyper__CountingW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":2624
 *         self.thisptr =  \
 *             cmake_potentials_Counting(self.hypergraph.thisptr,
 *                                        potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_12 = HypergraphVectorPotentials<CountingPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2622
 *             if result is None: potentials[i] = Counting_zero()
 *             potentials[i] = _CountingW_to_cpp(result)
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *             cmake_potentials_Counting(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_12;

  /* "pydecode/hyper.pyx":2625
 *             cmake_potentials_Counting(self.hypergraph.thisptr,
 *                                        potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_potentials(self, other_potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ty);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_16from_potentials[] = "CountingPotentials.from_potentials(self, other_potentials)";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_17from_potentials(PyObject *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_potentials (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_16from_potentials(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), ((PyObject *)__pyx_v_other_potentials));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2627
 *         return self
 * 
 *     def from_potentials(self, other_potentials):             # <<<<<<<<<<<<<<
 *         cdef vector[int] potentials = \
 *              vector[int](self.hypergraph.thisptr.edges().size())
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_16from_potentials(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, PyObject *__pyx_v_other_potentials) {
  std::vector<int> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<int> __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  int __pyx_t_7;
  size_t __pyx_t_8;
  HypergraphPotentials<CountingPotential> *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_potentials", 0);

  /* "pydecode/hyper.pyx":2629
 *     def from_potentials(self, other_potentials):
 *         cdef vector[int] potentials = \
 *              vector[int](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 */
  try {
    __pyx_t_1 = std::vector<int>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_1;

  /* "pydecode/hyper.pyx":2631
 *              vector[int](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):             # <<<<<<<<<<<<<<
 *             potentials[i] = _CountingW_to_cpp(other_potentials[edge])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->hypergraph), __pyx_n_s__edges); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":2632
 * 
 *         for i, edge in enumerate(self.hypergraph.edges):
 *             potentials[i] = _CountingW_to_cpp(other_potentials[edge])             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_other_potentials, __pyx_v_edge); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyInt_AsInt(__pyx_t_3); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_8]) = __pyx_f_8pydecode_5hyper__CountingW_to_cpp(__pyx_t_7);
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2638
 *             self.hypergraph.thisptr,
 *             potentials,
 *             _CountingW_to_cpp(other_potentials.bias))             # <<<<<<<<<<<<<<
 * 
 *         return self
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_other_potentials, __pyx_n_s__bias); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_9 = HypergraphVectorPotentials<CountingPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_f_8pydecode_5hyper__CountingW_to_cpp(__pyx_t_7));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2634
 *             potentials[i] = _CountingW_to_cpp(other_potentials[edge])
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Counting(
 *             self.hypergraph.thisptr,
 */
  __pyx_v_self->thisptr = __pyx_t_9;

  /* "pydecode/hyper.pyx":2640
 *             _CountingW_to_cpp(other_potentials.bias))
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_vector(self, in_vec, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.from_potentials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_18from_vector[] = "CountingPotentials.from_vector(self, in_vec, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_19from_vector(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_vec = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_vector (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_vec,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":2642
 *         return self
 * 
 *     def from_vector(self, in_vec, bias=None):             # <<<<<<<<<<<<<<
 *         cdef int my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_vector") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2642; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_vec = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_vector", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2642; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_18from_vector(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), __pyx_v_in_vec, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_18from_vector(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, PyObject *__pyx_v_in_vec, PyObject *__pyx_v_bias) {
  int __pyx_v_my_bias;
  std::vector<int> __pyx_v_potentials;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  std::vector<int> __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  HypergraphPotentials<CountingPotential> *__pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_vector", 0);

  /* "pydecode/hyper.pyx":2644
 *     def from_vector(self, in_vec, bias=None):
 *         cdef int my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Counting_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2645
 *         cdef int my_bias
 *         if bias is None:
 *             my_bias = Counting_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _CountingW_to_cpp(bias)
 */
    __pyx_v_my_bias = CountingPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2647
 *             my_bias = Counting_one()
 *         else:
 *             my_bias = _CountingW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[int] potentials = \
 */
    __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_bias); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__CountingW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":2650
 * 
 *         cdef vector[int] potentials = \
 *              vector[int](self.hypergraph.thisptr.edges().size())             # <<<<<<<<<<<<<<
 * 
 *         for i, v in enumerate(in_vec):
 */
  try {
    __pyx_t_4 = std::vector<int>(__pyx_v_self->hypergraph->thisptr->edges().size());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_4;

  /* "pydecode/hyper.pyx":2652
 *              vector[int](self.hypergraph.thisptr.edges().size())
 * 
 *         for i, v in enumerate(in_vec):             # <<<<<<<<<<<<<<
 *             potentials[i] = _CountingW_to_cpp(v)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_5 = __pyx_int_0;
  if (PyList_CheckExact(__pyx_v_in_vec) || PyTuple_CheckExact(__pyx_v_in_vec)) {
    __pyx_t_6 = __pyx_v_in_vec; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_in_vec); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_9 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_9)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_9 = PyNumber_Add(__pyx_t_5, __pyx_int_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "pydecode/hyper.pyx":2653
 * 
 *         for i, v in enumerate(in_vec):
 *             potentials[i] = _CountingW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_v); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = __Pyx_PyInt_AsSize_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_10]) = __pyx_f_8pydecode_5hyper__CountingW_to_cpp(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pydecode/hyper.pyx":2657
 *         self.thisptr =  \
 *           cmake_potentials_Counting(self.hypergraph.thisptr,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_11 = HypergraphVectorPotentials<CountingPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2655
 *             potentials[i] = _CountingW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Counting(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 */
  __pyx_v_self->thisptr = __pyx_t_11;

  /* "pydecode/hyper.pyx":2658
 *           cmake_potentials_Counting(self.hypergraph.thisptr,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def from_map(self, in_map, bias=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.from_vector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_20from_map[] = "CountingPotentials.from_map(self, in_map, bias=None)";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_21from_map(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_in_map = 0;
  PyObject *__pyx_v_bias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_map (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__in_map,&__pyx_n_s__bias,0};
    PyObject* values[2] = {0,0};

    /* "pydecode/hyper.pyx":2660
 *         return self
 * 
 *     def from_map(self, in_map, bias=None):             # <<<<<<<<<<<<<<
 *         cdef int my_bias
 *         if bias is None:
 */
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__in_map)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bias);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_map") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2660; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_in_map = values[0];
    __pyx_v_bias = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_map", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2660; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_20from_map(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), __pyx_v_in_map, __pyx_v_bias);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_20from_map(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, PyObject *__pyx_v_in_map, PyObject *__pyx_v_bias) {
  int __pyx_v_my_bias;
  std::map<int,int> __pyx_v_map_potentials;
  std::vector<int> __pyx_v_potentials;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  std::vector<int> __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  size_t __pyx_t_13;
  HypergraphPotentials<CountingPotential> *__pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_map", 0);

  /* "pydecode/hyper.pyx":2662
 *     def from_map(self, in_map, bias=None):
 *         cdef int my_bias
 *         if bias is None:             # <<<<<<<<<<<<<<
 *             my_bias = Counting_one()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_bias == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2663
 *         cdef int my_bias
 *         if bias is None:
 *             my_bias = Counting_one()             # <<<<<<<<<<<<<<
 *         else:
 *             my_bias = _CountingW_to_cpp(bias)
 */
    __pyx_v_my_bias = CountingPotential::one();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2665
 *             my_bias = Counting_one()
 *         else:
 *             my_bias = _CountingW_to_cpp(bias)             # <<<<<<<<<<<<<<
 * 
 *         cdef c_map.map[int,int] map_potentials
 */
    __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_bias); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_my_bias = __pyx_f_8pydecode_5hyper__CountingW_to_cpp(__pyx_t_3);
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":2669
 *         cdef c_map.map[int,int] map_potentials
 *         cdef vector[int] potentials = \
 *             vector[int](len(in_map))             # <<<<<<<<<<<<<<
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_in_map); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_5 = std::vector<int>(__pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_potentials = __pyx_t_5;

  /* "pydecode/hyper.pyx":2671
 *             vector[int](len(in_map))
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):             # <<<<<<<<<<<<<<
 *             map_potentials[key] = j
 *             potentials[j] = _CountingW_to_cpp(v)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_6 = __pyx_int_0;
  __pyx_t_4 = 0;
  if (unlikely(__pyx_v_in_map == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "iteritems");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_9 = __Pyx_dict_iterator(__pyx_v_in_map, 0, ((PyObject *)__pyx_n_s__iteritems), (&__pyx_t_8), (&__pyx_t_3)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_9;
  __pyx_t_9 = 0;
  while (1) {
    __pyx_t_11 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_8, &__pyx_t_4, &__pyx_t_9, &__pyx_t_10, NULL, __pyx_t_3);
    if (unlikely(__pyx_t_11 == 0)) break;
    if (unlikely(__pyx_t_11 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_6);
    __pyx_t_10 = PyNumber_Add(__pyx_t_6, __pyx_int_1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_10;
    __pyx_t_10 = 0;

    /* "pydecode/hyper.pyx":2672
 * 
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j             # <<<<<<<<<<<<<<
 *             potentials[j] = _CountingW_to_cpp(v)
 * 
 */
    __pyx_t_11 = __Pyx_PyInt_AsInt(__pyx_v_j); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_12 = __Pyx_PyInt_AsInt(__pyx_v_key); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_map_potentials[__pyx_t_12]) = __pyx_t_11;

    /* "pydecode/hyper.pyx":2673
 *         for j, (key, v) in enumerate(in_map.iteritems()):
 *             map_potentials[key] = j
 *             potentials[j] = _CountingW_to_cpp(v)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr =  \
 */
    __pyx_t_11 = __Pyx_PyInt_AsInt(__pyx_v_v); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyInt_AsSize_t(__pyx_v_j); if (unlikely((__pyx_t_13 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_potentials[__pyx_t_13]) = __pyx_f_8pydecode_5hyper__CountingW_to_cpp(__pyx_t_11);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "pydecode/hyper.pyx":2678
 *           cmake_potentials_Counting(self.hypergraph.thisptr,
 *                                       map_potentials,
 *                                       potentials, my_bias)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_14 = HypergraphMapPotentials<CountingPotential>::make_potentials(__pyx_v_self->hypergraph->thisptr, __pyx_v_map_potentials, __pyx_v_potentials, __pyx_v_my_bias);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2675
 *             potentials[j] = _CountingW_to_cpp(v)
 * 
 *         self.thisptr =  \             # <<<<<<<<<<<<<<
 *           cmake_potentials_Counting(self.hypergraph.thisptr,
 *                                       map_potentials,
 */
  __pyx_v_self->thisptr = __pyx_t_14;

  /* "pydecode/hyper.pyx":2679
 *                                       map_potentials,
 *                                       potentials, my_bias)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, CHypergraphCountingPotentials *ptr,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.from_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2681
 *         return self
 * 
 *     cdef init(self, CHypergraphCountingPotentials *ptr,             # <<<<<<<<<<<<<<
 *               Projection projection):
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_8pydecode_5hyper_18CountingPotentials_init(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, HypergraphPotentials<CountingPotential> *__pyx_v_ptr, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_projection) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":2683
 *     cdef init(self, CHypergraphCountingPotentials *ptr,
 *               Projection projection):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.projection = projection
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":2684
 *               Projection projection):
 *         self.thisptr = ptr
 *         self.projection = projection             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_projection));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_projection));
  __Pyx_GOTREF(__pyx_v_self->projection);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->projection));
  __pyx_v_self->projection = __pyx_v_projection;

  /* "pydecode/hyper.pyx":2685
 *         self.thisptr = ptr
 *         self.projection = projection
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Edge edge not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_23__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_edge) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_edge), __pyx_ptype_8pydecode_10hypergraph_Edge, 0, "edge", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_22__getitem__(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_edge));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2687
 *         return self
 * 
 *     def __getitem__(self, Edge edge not None):             # <<<<<<<<<<<<<<
 *         return _CountingW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_22__getitem__(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Edge *__pyx_v_edge) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":2688
 * 
 *     def __getitem__(self, Edge edge not None):
 *         return _CountingW_from_cpp(self.thisptr.score(edge.edgeptr))             # <<<<<<<<<<<<<<
 * 
 *     def dot(self, Path path not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__CountingW_from_cpp(__pyx_v_self->thisptr->score(__pyx_v_edge->edgeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_8pydecode_5hyper_18CountingPotentials_24dot[] = "CountingPotentials.dot(self, Path path)\n\n        dot(path)\n\n        Take the dot product with `path` :math:`\\theta^{\\top} y`.\n        ";
static PyObject *__pyx_pw_8pydecode_5hyper_18CountingPotentials_25dot(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), __pyx_ptype_8pydecode_10hypergraph_Path, 0, "path", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_18CountingPotentials_24dot(((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Path *)__pyx_v_path));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2690
 *         return _CountingW_from_cpp(self.thisptr.score(edge.edgeptr))
 * 
 *     def dot(self, Path path not None):             # <<<<<<<<<<<<<<
 *         r"""
 *         dot(path)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18CountingPotentials_24dot(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Path *__pyx_v_path) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "pydecode/hyper.pyx":2697
 *         """
 * 
 *         return _CountingW_from_cpp(self.thisptr.dot(deref(path.thisptr)))             # <<<<<<<<<<<<<<
 *         #return _CountingW().init(self.thisptr.dot(deref(path.thisptr))).value
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->dot((*__pyx_v_path->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_f_8pydecode_5hyper__CountingW_from_cpp(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.CountingPotentials.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10_CountingW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10_CountingW_one[] = "_CountingW.one()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_10_CountingW_1one = {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10_CountingW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10_CountingW_one)};
static PyObject *__pyx_pw_8pydecode_5hyper_10_CountingW_1one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("one (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("one", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "one", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_10_CountingW_one();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2702
 * cdef class _CountingW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _CountingW_from_cpp(Counting_one())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10_CountingW_one() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("one", 0);

  /* "pydecode/hyper.pyx":2703
 *     @staticmethod
 *     def one():
 *         return _CountingW_from_cpp(Counting_one())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__CountingW_from_cpp(CountingPotential::one()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._CountingW.one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10_CountingW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10_CountingW_2zero[] = "_CountingW.zero()";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_10_CountingW_3zero = {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10_CountingW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10_CountingW_2zero)};
static PyObject *__pyx_pw_8pydecode_5hyper_10_CountingW_3zero(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zero (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("zero", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "zero", 0))) return NULL;
  __pyx_r = __pyx_pf_8pydecode_5hyper_10_CountingW_2zero();
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2706
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _CountingW_from_cpp(Counting_zero())
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10_CountingW_2zero() {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("zero", 0);

  /* "pydecode/hyper.pyx":2707
 *     @staticmethod
 *     def zero():
 *         return _CountingW_from_cpp(Counting_zero())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__CountingW_from_cpp(CountingPotential::zero()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._CountingW.zero", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2710
 * 
 * 
 * cdef int _CountingW_to_cpp(int val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static int __pyx_f_8pydecode_5hyper__CountingW_to_cpp(int __pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_CountingW_to_cpp", 0);

  /* "pydecode/hyper.pyx":2712
 * cdef int _CountingW_to_cpp(int val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_val;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2716
 * 
 * 
 * cdef _CountingW_from_cpp(int val):             # <<<<<<<<<<<<<<
 * 
 *     return val
 */

static PyObject *__pyx_f_8pydecode_5hyper__CountingW_from_cpp(int __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_CountingW_from_cpp", 0);

  /* "pydecode/hyper.pyx":2718
 * cdef _CountingW_from_cpp(int val):
 * 
 *     return val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper._CountingW_from_cpp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_13CountingChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_13CountingChart_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,0};
    PyObject* values[1] = {0};

    /* "pydecode/hyper.pyx":2759
 * cdef class CountingChart:
 * 
 *     def __init__(self, Hypergraph graph=None):             # <<<<<<<<<<<<<<
 *         self.kind = Counting
 *         self.chart = NULL
 */
    values[0] = (PyObject *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2759; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2759; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.CountingChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2759; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_13CountingChart___init__(((struct __pyx_obj_8pydecode_5hyper_CountingChart *)__pyx_v_self), __pyx_v_graph);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pydecode_5hyper_13CountingChart___init__(struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":2760
 * 
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = Counting             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 *         if graph is not None:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__Counting); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kind);
  __Pyx_DECREF(__pyx_v_self->kind);
  __pyx_v_self->kind = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2761
 *     def __init__(self, Hypergraph graph=None):
 *         self.kind = Counting
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 *         if graph is not None:
 *             self.chart = new CCountingChart(graph.thisptr)
 */
  __pyx_v_self->chart = NULL;

  /* "pydecode/hyper.pyx":2762
 *         self.kind = Counting
 *         self.chart = NULL
 *         if graph is not None:             # <<<<<<<<<<<<<<
 *             self.chart = new CCountingChart(graph.thisptr)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_graph) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pydecode/hyper.pyx":2763
 *         self.chart = NULL
 *         if graph is not None:
 *             self.chart = new CCountingChart(graph.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, Node node):
 */
    __pyx_v_self->chart = new Chart<CountingPotential>(__pyx_v_graph->thisptr);
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.CountingChart.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_13CountingChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_13CountingChart_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_node) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_node), __pyx_ptype_8pydecode_10hypergraph_Node, 1, "node", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_13CountingChart_2__getitem__(((struct __pyx_obj_8pydecode_5hyper_CountingChart *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_node));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2765
 *             self.chart = new CCountingChart(graph.thisptr)
 * 
 *     def __getitem__(self, Node node):             # <<<<<<<<<<<<<<
 *         return _CountingW_from_cpp(self.chart.get(node.nodeptr))
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_13CountingChart_2__getitem__(struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Node *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":2766
 * 
 *     def __getitem__(self, Node node):
 *         return _CountingW_from_cpp(self.chart.get(node.nodeptr))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_8pydecode_5hyper__CountingW_from_cpp(__pyx_v_self->chart->get(__pyx_v_node->nodeptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.CountingChart.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_13CountingChart_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_13CountingChart_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_13CountingChart_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_CountingChart *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2768
 *         return _CountingW_from_cpp(self.chart.get(node.nodeptr))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.chart
 *         self.chart = NULL
 */

static void __pyx_pf_8pydecode_5hyper_13CountingChart_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":2769
 * 
 *     def __dealloc__(self):
 *         del self.chart             # <<<<<<<<<<<<<<
 *         self.chart = NULL
 * 
 */
  delete __pyx_v_self->chart;

  /* "pydecode/hyper.pyx":2770
 *     def __dealloc__(self):
 *         del self.chart
 *         self.chart = NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class _CountingMarginals:
 */
  __pyx_v_self->chart = NULL;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_18_CountingMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_18_CountingMarginals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_18_CountingMarginals___init__(((struct __pyx_obj_8pydecode_5hyper__CountingMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2776
 *     cdef Hypergraph graph
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_18_CountingMarginals___init__(struct __pyx_obj_8pydecode_5hyper__CountingMarginals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pydecode/hyper.pyx":2777
 * 
 *     def __init__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_18_CountingMarginals_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_18_CountingMarginals_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_18_CountingMarginals_2__dealloc__(((struct __pyx_obj_8pydecode_5hyper__CountingMarginals *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2779
 *         self.thisptr = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_8pydecode_5hyper_18_CountingMarginals_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_8pydecode_5hyper__CountingMarginals *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":2780
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef init(self, const CCountingMarginals *ptr, Hypergraph graph):
 */
  delete __pyx_v_self->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":2782
 *         del self.thisptr
 * 
 *     cdef init(self, const CCountingMarginals *ptr, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         self.graph = graph
 */

static PyObject *__pyx_f_8pydecode_5hyper_18_CountingMarginals_init(struct __pyx_obj_8pydecode_5hyper__CountingMarginals *__pyx_v_self, Marginals<CountingPotential> const *__pyx_v_ptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":2783
 * 
 *     cdef init(self, const CCountingMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         self.graph = graph
 *         return self
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pydecode/hyper.pyx":2784
 *     cdef init(self, const CCountingMarginals *ptr, Hypergraph graph):
 *         self.thisptr = ptr
 *         self.graph = graph             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_GOTREF(__pyx_v_self->graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->graph));
  __pyx_v_self->graph = __pyx_v_graph;

  /* "pydecode/hyper.pyx":2785
 *         self.thisptr = ptr
 *         self.graph = graph
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_18_CountingMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_18_CountingMarginals_5__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_18_CountingMarginals_4__getitem__(((struct __pyx_obj_8pydecode_5hyper__CountingMarginals *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2787
 *         return self
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Edge):
 *             return _CountingW_from_cpp(
 */

static PyObject *__pyx_pf_8pydecode_5hyper_18_CountingMarginals_4__getitem__(struct __pyx_obj_8pydecode_5hyper__CountingMarginals *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":2788
 * 
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             return _CountingW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":2789
 *     def __getitem__(self, obj):
 *         if isinstance(obj, Edge):
 *             return _CountingW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":2790
 *         if isinstance(obj, Edge):
 *             return _CountingW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))             # <<<<<<<<<<<<<<
 *         elif isinstance(obj, Node):
 *             return _CountingW_from_cpp(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__CountingW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "pydecode/hyper.pyx":2791
 *             return _CountingW_from_cpp(
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             return _CountingW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":2792
 *                 self.thisptr.marginal((<Edge>obj).edgeptr))
 *         elif isinstance(obj, Node):
 *             return _CountingW_from_cpp(             # <<<<<<<<<<<<<<
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);

    /* "pydecode/hyper.pyx":2793
 *         elif isinstance(obj, Node):
 *             return _CountingW_from_cpp(
 *                 self.thisptr.marginal((<Node>obj).nodeptr))             # <<<<<<<<<<<<<<
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(
 */
    __pyx_t_3 = __pyx_f_8pydecode_5hyper__CountingW_from_cpp(__pyx_v_self->thisptr->marginal(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":2795
 *                 self.thisptr.marginal((<Node>obj).nodeptr))
 *         else:
 *             raise py_hypergraph.HypergraphAccessException(             # <<<<<<<<<<<<<<
 *                 "Only nodes and edges have Counting marginal values." + \
 *                 "Passed %s."%obj)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__py_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pydecode/hyper.pyx":2797
 *             raise py_hypergraph.HypergraphAccessException(
 *                 "Only nodes and edges have Counting marginal values." + \
 *                 "Passed %s."%obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_14), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pydecode.hyper._CountingMarginals.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_8Counting_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_8Counting_inside[] = "Counting.inside(Hypergraph graph, CountingPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_8Counting_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_8Counting_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_8Counting_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_8Counting_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2808; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2808; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2808; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Counting.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_8Counting_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2808
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                CountingPotentials potentials):
 *         cdef CountingChart chart = CountingChart()
 */

static PyObject *__pyx_pf_8pydecode_5hyper_8Counting_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials) {
  struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<CountingPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":2810
 *     def inside(Hypergraph graph,
 *                CountingPotentials potentials):
 *         cdef CountingChart chart = CountingChart()             # <<<<<<<<<<<<<<
 *         chart.chart = inside_Counting(graph.thisptr, deref(potentials.thisptr))
 *         return chart
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_CountingChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chart = ((struct __pyx_obj_8pydecode_5hyper_CountingChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2811
 *                CountingPotentials potentials):
 *         cdef CountingChart chart = CountingChart()
 *         chart.chart = inside_Counting(graph.thisptr, deref(potentials.thisptr))             # <<<<<<<<<<<<<<
 *         return chart
 * 
 */
  try {
    __pyx_t_2 = general_inside<CountingPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":2812
 *         cdef CountingChart chart = CountingChart()
 *         chart.chart = inside_Counting(graph.thisptr, deref(potentials.thisptr))
 *         return chart             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_chart));
  __pyx_r = ((PyObject *)__pyx_v_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Counting.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_8Counting_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_8Counting_2outside[] = "Counting.outside(Hypergraph graph, CountingPotentials potentials, CountingChart inside_chart)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_8Counting_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_8Counting_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_8Counting_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_8Counting_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)values[1]);
    __pyx_v_inside_chart = ((struct __pyx_obj_8pydecode_5hyper_CountingChart *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Counting.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inside_chart), __pyx_ptype_8pydecode_5hyper_CountingChart, 1, "inside_chart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_8Counting_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2815
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 CountingPotentials potentials,
 *                 CountingChart inside_chart):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_8Counting_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials, struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_inside_chart) {
  struct __pyx_obj_8pydecode_5hyper_CountingChart *__pyx_v_out_chart = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Chart<CountingPotential> *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":2818
 *                 CountingPotentials potentials,
 *                 CountingChart inside_chart):
 *         cdef CountingChart out_chart = CountingChart()             # <<<<<<<<<<<<<<
 *         out_chart.chart = outside_Counting(graph.thisptr,
 *                                              deref(potentials.thisptr),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_CountingChart)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out_chart = ((struct __pyx_obj_8pydecode_5hyper_CountingChart *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2821
 *         out_chart.chart = outside_Counting(graph.thisptr,
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))             # <<<<<<<<<<<<<<
 *         return out_chart
 * 
 */
  try {
    __pyx_t_2 = general_outside<CountingPotential>(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), (*__pyx_v_inside_chart->chart));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pydecode/hyper.pyx":2819
 *                 CountingChart inside_chart):
 *         cdef CountingChart out_chart = CountingChart()
 *         out_chart.chart = outside_Counting(graph.thisptr,             # <<<<<<<<<<<<<<
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 */
  __pyx_v_out_chart->chart = __pyx_t_2;

  /* "pydecode/hyper.pyx":2822
 *                                              deref(potentials.thisptr),
 *                                              deref(inside_chart.chart))
 *         return out_chart             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_out_chart));
  __pyx_r = ((PyObject *)__pyx_v_out_chart);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Counting.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_out_chart);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_8Counting_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_8Counting_4compute_marginals[] = "Counting.compute_marginals(Hypergraph graph, CountingPotentials potentials)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_8Counting_5compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_8Counting_5compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_8Counting_4compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_8Counting_5compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Counting.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_8Counting_4compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2827
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           CountingPotentials potentials):
 *         cdef const CCountingMarginals *marginals = \
 */

static PyObject *__pyx_pf_8pydecode_5hyper_8Counting_4compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials) {
  Marginals<CountingPotential> const *__pyx_v_marginals;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":2830
 *                           CountingPotentials potentials):
 *         cdef const CCountingMarginals *marginals = \
 *             Counting_compute(graph.thisptr, potentials.thisptr)             # <<<<<<<<<<<<<<
 *         return _CountingMarginals().init(marginals, graph)
 * 
 */
  __pyx_v_marginals = Marginals<CountingPotential>::compute(__pyx_v_graph->thisptr, __pyx_v_potentials->thisptr);

  /* "pydecode/hyper.pyx":2831
 *         cdef const CCountingMarginals *marginals = \
 *             Counting_compute(graph.thisptr, potentials.thisptr)
 *         return _CountingMarginals().init(marginals, graph)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__CountingMarginals)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pydecode_5hyper__CountingMarginals *)((struct __pyx_obj_8pydecode_5hyper__CountingMarginals *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper__CountingMarginals *)__pyx_t_1), __pyx_v_marginals, __pyx_v_graph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.Counting.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_8Counting_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_8Counting_6prune_hypergraph[] = "Counting.prune_hypergraph(Hypergraph graph, CountingPotentials potentials, threshold)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_8Counting_7prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_8Counting_7prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_8Counting_6prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_8Counting_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_threshold = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__threshold,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__threshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)values[1]);
    __pyx_v_threshold = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Counting.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_8Counting_6prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_threshold);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2835
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          CountingPotentials potentials,
 *                          threshold):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_8Counting_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials, PyObject *__pyx_v_threshold) {
  PyObject *__pyx_v_marginals = NULL;
  PyObject *__pyx_v_bool_potentials = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":2838
 *                          CountingPotentials potentials,
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(((PyObject *)__pyx_v_potentials));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_potentials));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_potentials));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_marginals = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pydecode/hyper.pyx":2839
 *                          threshold):
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)             # <<<<<<<<<<<<<<
 *         return make_pruning_projections(graph, bool_potentials)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_marginals, __pyx_n_s__threshold); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_threshold);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_threshold);
  __Pyx_GIVEREF(__pyx_v_threshold);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_bool_potentials = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2840
 *         marginals = compute_marginals(graph, potentials)
 *         bool_potentials = marginals.threshold(threshold)
 *         return make_pruning_projections(graph, bool_potentials)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_bool_potentials);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_bool_potentials);
  __Pyx_GIVEREF(__pyx_v_bool_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.Counting.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_marginals);
  __Pyx_XDECREF(__pyx_v_bool_potentials);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_inside[] = "inside(Hypergraph graph, potentials)\n\n    inside(Hypergraph graph, Potentials potentials):\n\n    Compute inside chart values for the given potentials.\n\n    Parameters\n    ----------\n\n    graph : :py:class:`Hypergraph`\n      The hypergraph :math:`({\\cal V}, {\\cal E})` to search.\n\n    potentials : :py:class:`Potentials`\n      The potentials :math:`\\theta` to use for inside computations.\n\n    Returns\n    -------\n\n    chart : :py:class:`Chart`\n       The inside chart. Type depends on potentials type, i.e. for inside potentials this\n       will be the probability paths reaching this node.\n    ";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_1inside = {__Pyx_NAMESTR("inside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_1inside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_inside)};
static PyObject *__pyx_pw_8pydecode_5hyper_1inside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  PyObject *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2844; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2844; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inside", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2844; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_inside(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2844
 * 
 * 
 * def inside(Hypergraph graph, potentials):             # <<<<<<<<<<<<<<
 *     r"""
 *     inside(Hypergraph graph, Potentials potentials):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_inside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("inside", 0);

  /* "pydecode/hyper.pyx":2866
 *        will be the probability paths reaching this node.
 *     """
 *     return potentials.kind.inside(graph, potentials)             # <<<<<<<<<<<<<<
 * 
 * def outside(Hypergraph graph, potentials, inside_chart):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_potentials, __pyx_n_s__kind); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s__inside); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_potentials);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_potentials);
  __Pyx_GIVEREF(__pyx_v_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.inside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_2outside[] = "outside(Hypergraph graph, potentials, inside_chart)\n\n    outside(Hypergraph graph, Potentials potentials, Chart inside_chart)\n\n    Compute the outside scores for the hypergraph.\n\n    Parameters\n    -----------\n\n    graph : :py:class:`Hypergraph`\n       The hypergraph to search.\n\n    potentials : :py:class:`Potentials`\n       The potentials :math:`\\theta` to use for outside computations.\n\n    inside_chart : :py:class:`Chart`\n       The associated inside chart. Compute by calling\n       :py:function:`inside`.  Must be the same type as potentials.\n\n    Returns\n    ---------\n\n    chart : :py:class:`Chart`\n       The outside chart. Type depends on potentials type, i.e. for\n       inside potentials this will be the probability paths reaching\n       this node.\n\n    ";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_3outside = {__Pyx_NAMESTR("outside"), (PyCFunction)__pyx_pw_8pydecode_5hyper_3outside, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_2outside)};
static PyObject *__pyx_pw_8pydecode_5hyper_3outside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  PyObject *__pyx_v_potentials = 0;
  PyObject *__pyx_v_inside_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("outside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__inside_chart,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2868; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inside_chart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2868; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "outside") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2868; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = values[1];
    __pyx_v_inside_chart = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("outside", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2868; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_2outside(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_inside_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2868
 *     return potentials.kind.inside(graph, potentials)
 * 
 * def outside(Hypergraph graph, potentials, inside_chart):             # <<<<<<<<<<<<<<
 *     r"""
 *     outside(Hypergraph graph, Potentials potentials, Chart inside_chart)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_2outside(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials, PyObject *__pyx_v_inside_chart) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("outside", 0);

  /* "pydecode/hyper.pyx":2896
 * 
 *     """
 *     return potentials.kind.outside(graph, potentials, inside_chart)             # <<<<<<<<<<<<<<
 * 
 * def best_path(Hypergraph graph, potentials, chart=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_potentials, __pyx_n_s__kind); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s__outside); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_potentials);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_potentials);
  __Pyx_GIVEREF(__pyx_v_potentials);
  __Pyx_INCREF(__pyx_v_inside_chart);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_inside_chart);
  __Pyx_GIVEREF(__pyx_v_inside_chart);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.outside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_5best_path(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_4best_path[] = "best_path(Hypergraph graph, potentials, chart=None)\n\n    best_path(Hypergraph graph, Potentials potentials):\n\n    Find the highest-scoring path :math:`\\arg \\max_{y \\in {\\cal X}} \\theta^{\\top} x`\n    in the hypergraph.\n\n    Parameters\n    ----------\n\n    graph : :py:class:`Hypergraph`\n      The hypergraph :math:`({\\cal V}, {\\cal E})` to search.\n\n    potentials : :py:class:`Potentials`\n      The potentials :math:`\\theta` of the hypergraph.\n\n    Returns\n    -------\n    path : :py:class:`Path`\n      The best path :math:`\\arg \\max_{y \\in {\\cal X}} \\theta^{\\top} x`.\n    ";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_5best_path = {__Pyx_NAMESTR("best_path"), (PyCFunction)__pyx_pw_8pydecode_5hyper_5best_path, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_4best_path)};
static PyObject *__pyx_pw_8pydecode_5hyper_5best_path(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  PyObject *__pyx_v_potentials = 0;
  PyObject *__pyx_v_chart = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("best_path (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__chart,0};
    PyObject* values[3] = {0,0,0};

    /* "pydecode/hyper.pyx":2898
 *     return potentials.kind.outside(graph, potentials, inside_chart)
 * 
 * def best_path(Hypergraph graph, potentials, chart=None):             # <<<<<<<<<<<<<<
 *     r"""
 *     best_path(Hypergraph graph, Potentials potentials):
 */
    values[2] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("best_path", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__chart);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "best_path") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = values[1];
    __pyx_v_chart = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("best_path", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.best_path", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_4best_path(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_chart);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pydecode_5hyper_4best_path(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials, PyObject *__pyx_v_chart) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("best_path", 0);

  /* "pydecode/hyper.pyx":2919
 *       The best path :math:`\arg \max_{y \in {\cal X}} \theta^{\top} x`.
 *     """
 *     return potentials.kind.viterbi(graph, potentials, chart)             # <<<<<<<<<<<<<<
 * 
 * def prune_hypergraph(Hypergraph graph, potentials, thres):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_potentials, __pyx_n_s__kind); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s__viterbi); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_potentials);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_potentials);
  __Pyx_GIVEREF(__pyx_v_potentials);
  __Pyx_INCREF(__pyx_v_chart);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_chart);
  __Pyx_GIVEREF(__pyx_v_chart);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.best_path", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_6prune_hypergraph[] = "prune_hypergraph(Hypergraph graph, potentials, thres)\n\n    prune_hypergraph(Hypergraph graph, potentials, thres)\n\n    Prune hyperedges with low max-marginal score from the hypergraph.\n\n    Parameters\n    -----------\n\n    graph : :py:class:`Hypergraph`\n       The hypergraph to search.\n\n    potentials : :py:class:`Potentials`\n       The potentials of the hypergraph.\n\n    Returns\n    --------\n    (hypergraph, potentials) : :py:class:`Hypergraph`, :py:class:`Potentials`\n       The new hypergraphs and potentials.\n    ";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_7prune_hypergraph = {__Pyx_NAMESTR("prune_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_7prune_hypergraph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6prune_hypergraph)};
static PyObject *__pyx_pw_8pydecode_5hyper_7prune_hypergraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  PyObject *__pyx_v_potentials = 0;
  PyObject *__pyx_v_thres = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_hypergraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__thres,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__thres)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prune_hypergraph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = values[1];
    __pyx_v_thres = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prune_hypergraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_6prune_hypergraph(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_thres);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2921
 *     return potentials.kind.viterbi(graph, potentials, chart)
 * 
 * def prune_hypergraph(Hypergraph graph, potentials, thres):             # <<<<<<<<<<<<<<
 *     r"""
 *     prune_hypergraph(Hypergraph graph, potentials, thres)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_6prune_hypergraph(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials, PyObject *__pyx_v_thres) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_hypergraph", 0);

  /* "pydecode/hyper.pyx":2941
 *        The new hypergraphs and potentials.
 *     """
 *     return potentials.kind.prune_hypergraph(graph, potentials, thres)             # <<<<<<<<<<<<<<
 * 
 * def compute_marginals(Hypergraph graph, potentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_potentials, __pyx_n_s__kind); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s__prune_hypergraph); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_potentials);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_potentials);
  __Pyx_GIVEREF(__pyx_v_potentials);
  __Pyx_INCREF(__pyx_v_thres);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_thres);
  __Pyx_GIVEREF(__pyx_v_thres);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.prune_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_8compute_marginals[] = "compute_marginals(Hypergraph graph, potentials)\n\n    compute_marginals(Hypergraph graph, Potentials potentials):\n\n    Compute marginals for hypergraph and potentials.\n\n    Parameters\n    -----------\n    graph : :py:class:`Hypergraph`\n       The hypergraph to search.\n\n    potentials : :py:class:`Potentials`\n       The potentials of the hypergraph.\n\n    Returns\n    --------\n    marginals : :py:class:`Marginals`\n       The node and edge marginals associated with these potentials.\n    ";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_9compute_marginals = {__Pyx_NAMESTR("compute_marginals"), (PyCFunction)__pyx_pw_8pydecode_5hyper_9compute_marginals, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_8compute_marginals)};
static PyObject *__pyx_pw_8pydecode_5hyper_9compute_marginals(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  PyObject *__pyx_v_potentials = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_marginals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2943; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_marginals") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2943; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_marginals", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2943; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_8compute_marginals(__pyx_self, __pyx_v_graph, __pyx_v_potentials);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2943
 *     return potentials.kind.prune_hypergraph(graph, potentials, thres)
 * 
 * def compute_marginals(Hypergraph graph, potentials):             # <<<<<<<<<<<<<<
 *     r"""
 *     compute_marginals(Hypergraph graph, Potentials potentials):
 */

static PyObject *__pyx_pf_8pydecode_5hyper_8compute_marginals(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, PyObject *__pyx_v_potentials) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_marginals", 0);

  /* "pydecode/hyper.pyx":2962
 *        The node and edge marginals associated with these potentials.
 *     """
 *     return potentials.kind.compute_marginals(graph, potentials)             # <<<<<<<<<<<<<<
 * 
 * class Potentials(LogViterbiPotentials):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_potentials, __pyx_n_s__kind); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s__compute_marginals); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_graph));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_graph));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_graph));
  __Pyx_INCREF(__pyx_v_potentials);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_potentials);
  __Pyx_GIVEREF(__pyx_v_potentials);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.compute_marginals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_11pairwise_dot(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10pairwise_dot[] = "pairwise_dot(SparseVectorPotentials potentials, vec, LogViterbiPotentials weights)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_11pairwise_dot = {__Pyx_NAMESTR("pairwise_dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_11pairwise_dot, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10pairwise_dot)};
static PyObject *__pyx_pw_8pydecode_5hyper_11pairwise_dot(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials = 0;
  PyObject *__pyx_v_vec = 0;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_weights = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pairwise_dot (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__potentials,&__pyx_n_s__vec,&__pyx_n_s__weights,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__vec)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pairwise_dot", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__weights)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pairwise_dot", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pairwise_dot") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)values[0]);
    __pyx_v_vec = values[1];
    __pyx_v_weights = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pairwise_dot", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.pairwise_dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_SparseVectorPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_weights), __pyx_ptype_8pydecode_5hyper_LogViterbiPotentials, 1, "weights", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_10pairwise_dot(__pyx_self, __pyx_v_potentials, __pyx_v_vec, __pyx_v_weights);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":2992
 * ####### Methods that use specific potential ########
 * 
 * def pairwise_dot(SparseVectorPotentials potentials, vec, LogViterbiPotentials weights):             # <<<<<<<<<<<<<<
 *     cdef vector[double] rvec
 *     for i in vec:
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10pairwise_dot(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *__pyx_v_potentials, PyObject *__pyx_v_vec, struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *__pyx_v_weights) {
  std::vector<double> __pyx_v_rvec;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pairwise_dot", 0);

  /* "pydecode/hyper.pyx":2994
 * def pairwise_dot(SparseVectorPotentials potentials, vec, LogViterbiPotentials weights):
 *     cdef vector[double] rvec
 *     for i in vec:             # <<<<<<<<<<<<<<
 *         rvec.push_back(<double>i)
 *     cpairwise_dot(deref(potentials.thisptr), rvec, weights.thisptr)
 */
  if (PyList_CheckExact(__pyx_v_vec) || PyTuple_CheckExact(__pyx_v_vec)) {
    __pyx_t_1 = __pyx_v_vec; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_vec); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2994; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_3 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2994; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2994; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_3 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2994; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2994; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2994; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "pydecode/hyper.pyx":2995
 *     cdef vector[double] rvec
 *     for i in vec:
 *         rvec.push_back(<double>i)             # <<<<<<<<<<<<<<
 *     cpairwise_dot(deref(potentials.thisptr), rvec, weights.thisptr)
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_i); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_rvec.push_back(((double)__pyx_t_5));
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2996
 *     for i in vec:
 *         rvec.push_back(<double>i)
 *     cpairwise_dot(deref(potentials.thisptr), rvec, weights.thisptr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  pairwise_dot((*__pyx_v_potentials->thisptr), __pyx_v_rvec, __pyx_v_weights->thisptr);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.pairwise_dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_8pydecode_5hyper_10Projection_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_8pydecode_5hyper_10Projection_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_8pydecode_5hyper_10Projection___cinit__(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3000
 * 
 * cdef class Projection:
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 * 
 */

static int __pyx_pf_8pydecode_5hyper_10Projection___cinit__(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pydecode/hyper.pyx":3001
 * cdef class Projection:
 *     def __cinit__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     cdef Projection init(self, const CHypergraphProjection *thisptr,
 */
  __pyx_v_self->thisptr = NULL;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3003
 *         self.thisptr = NULL
 * 
 *     cdef Projection init(self, const CHypergraphProjection *thisptr,             # <<<<<<<<<<<<<<
 *                          Hypergraph small_graph):
 *         self.thisptr = thisptr
 */

static struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_f_8pydecode_5hyper_10Projection_init(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self, HypergraphProjection const *__pyx_v_thisptr, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_small_graph) {
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init", 0);

  /* "pydecode/hyper.pyx":3005
 *     cdef Projection init(self, const CHypergraphProjection *thisptr,
 *                          Hypergraph small_graph):
 *         self.thisptr = thisptr             # <<<<<<<<<<<<<<
 *         assert thisptr.big_graph().id() >= 0
 *         assert thisptr.new_graph().id() >= 0
 */
  __pyx_v_self->thisptr = __pyx_v_thisptr;

  /* "pydecode/hyper.pyx":3006
 *                          Hypergraph small_graph):
 *         self.thisptr = thisptr
 *         assert thisptr.big_graph().id() >= 0             # <<<<<<<<<<<<<<
 *         assert thisptr.new_graph().id() >= 0
 *         if small_graph == None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!((__pyx_v_thisptr->big_graph()->id() >= 0) != 0))) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "pydecode/hyper.pyx":3007
 *         self.thisptr = thisptr
 *         assert thisptr.big_graph().id() >= 0
 *         assert thisptr.new_graph().id() >= 0             # <<<<<<<<<<<<<<
 *         if small_graph == None:
 *             self.small_graph = self.small_hypergraph()
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!((__pyx_v_thisptr->new_graph()->id() >= 0) != 0))) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "pydecode/hyper.pyx":3008
 *         assert thisptr.big_graph().id() >= 0
 *         assert thisptr.new_graph().id() >= 0
 *         if small_graph == None:             # <<<<<<<<<<<<<<
 *             self.small_graph = self.small_hypergraph()
 *         else:
 */
  __pyx_t_1 = PyObject_RichCompare(((PyObject *)__pyx_v_small_graph), Py_None, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":3009
 *         assert thisptr.new_graph().id() >= 0
 *         if small_graph == None:
 *             self.small_graph = self.small_hypergraph()             # <<<<<<<<<<<<<<
 *         else:
 *             self.small_graph = small_graph
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s__small_hypergraph); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8pydecode_10hypergraph_Hypergraph))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_v_self->small_graph);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->small_graph));
    __pyx_v_self->small_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "pydecode/hyper.pyx":3011
 *             self.small_graph = self.small_hypergraph()
 *         else:
 *             self.small_graph = small_graph             # <<<<<<<<<<<<<<
 *         self.big_graph = self.big_hypergraph()
 *         return self
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_small_graph));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_small_graph));
    __Pyx_GOTREF(__pyx_v_self->small_graph);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->small_graph));
    __pyx_v_self->small_graph = __pyx_v_small_graph;
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":3012
 *         else:
 *             self.small_graph = small_graph
 *         self.big_graph = self.big_hypergraph()             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s__big_hypergraph); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3012; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3012; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8pydecode_10hypergraph_Hypergraph))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3012; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->big_graph);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->big_graph));
  __pyx_v_self->big_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":3013
 *             self.small_graph = small_graph
 *         self.big_graph = self.big_hypergraph()
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def compose(self, Projection other, bool reverse):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = __pyx_v_self;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pydecode.hyper.Projection.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_3compose(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10Projection_2compose[] = "Projection.compose(self, Projection other, bool reverse)";
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_3compose(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_other = 0;
  bool __pyx_v_reverse;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compose (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__other,&__pyx_n_s__reverse,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__other)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__reverse)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compose", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3015; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compose") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3015; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_other = ((struct __pyx_obj_8pydecode_5hyper_Projection *)values[0]);
    __pyx_v_reverse = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_reverse == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3015; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compose", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3015; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.Projection.compose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pydecode_5hyper_Projection, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_10Projection_2compose(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_v_self), __pyx_v_other, __pyx_v_reverse);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3015
 *         return self
 * 
 *     def compose(self, Projection other, bool reverse):             # <<<<<<<<<<<<<<
 *         cdef CHypergraphProjection *newptr = \
 *             ccompose_projections(other.thisptr, reverse, self.thisptr)
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_2compose(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self, struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_other, bool __pyx_v_reverse) {
  HypergraphProjection *__pyx_v_newptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compose", 0);

  /* "pydecode/hyper.pyx":3017
 *     def compose(self, Projection other, bool reverse):
 *         cdef CHypergraphProjection *newptr = \
 *             ccompose_projections(other.thisptr, reverse, self.thisptr)             # <<<<<<<<<<<<<<
 *         return Projection().init(newptr, None)
 * 
 */
  __pyx_v_newptr = HypergraphProjection::compose_projections(__pyx_v_other->thisptr, __pyx_v_reverse, __pyx_v_self->thisptr);

  /* "pydecode/hyper.pyx":3018
 *         cdef CHypergraphProjection *newptr = \
 *             ccompose_projections(other.thisptr, reverse, self.thisptr)
 *         return Projection().init(newptr, None)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_Projection)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_5hyper_Projection *)((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_t_1), __pyx_v_newptr, ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.Projection.compose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_8pydecode_5hyper_10Projection_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_8pydecode_5hyper_10Projection_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_8pydecode_5hyper_10Projection_4__dealloc__(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "pydecode/hyper.pyx":3021
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr is not NULL:
 *             del self.thisptr
 */

static void __pyx_pf_8pydecode_5hyper_10Projection_4__dealloc__(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pydecode/hyper.pyx":3022
 * 
 *     def __dealloc__(self):
 *         if self.thisptr is not NULL:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 *             self.thisptr = NULL
 */
  __pyx_t_1 = ((__pyx_v_self->thisptr != NULL) != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":3023
 *     def __dealloc__(self):
 *         if self.thisptr is not NULL:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 *             self.thisptr = NULL
 * 
 */
    delete __pyx_v_self->thisptr;

    /* "pydecode/hyper.pyx":3024
 *         if self.thisptr is not NULL:
 *             del self.thisptr
 *             self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, obj):
 */
    __pyx_v_self->thisptr = NULL;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_10Projection_6__getitem__(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_v_self), ((PyObject *)__pyx_v_obj));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3026
 *             self.thisptr = NULL
 * 
 *     def __getitem__(self, obj):             # <<<<<<<<<<<<<<
 *         cdef const CHyperedge *edge
 *         cdef const CHypernode *node
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_6__getitem__(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self, PyObject *__pyx_v_obj) {
  Hyperedge const *__pyx_v_edge;
  Hypernode const *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pydecode/hyper.pyx":3029
 *         cdef const CHyperedge *edge
 *         cdef const CHypernode *node
 *         if isinstance(obj, Edge):             # <<<<<<<<<<<<<<
 *             edge = self.thisptr.project((<Edge>obj).edgeptr)
 *             assert edge.id() >= 0
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Edge)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pydecode/hyper.pyx":3030
 *         cdef const CHypernode *node
 *         if isinstance(obj, Edge):
 *             edge = self.thisptr.project((<Edge>obj).edgeptr)             # <<<<<<<<<<<<<<
 *             assert edge.id() >= 0
 *             assert edge.id() == self.small_graph.edges[edge.id()].id
 */
    __pyx_v_edge = __pyx_v_self->thisptr->project(((struct __pyx_obj_8pydecode_10hypergraph_Edge *)__pyx_v_obj)->edgeptr);

    /* "pydecode/hyper.pyx":3031
 *         if isinstance(obj, Edge):
 *             edge = self.thisptr.project((<Edge>obj).edgeptr)
 *             assert edge.id() >= 0             # <<<<<<<<<<<<<<
 *             assert edge.id() == self.small_graph.edges[edge.id()].id
 *             return self.small_graph.edges[edge.id()]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!((__pyx_v_edge->id() >= 0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3031; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    #endif

    /* "pydecode/hyper.pyx":3032
 *             edge = self.thisptr.project((<Edge>obj).edgeptr)
 *             assert edge.id() >= 0
 *             assert edge.id() == self.small_graph.edges[edge.id()].id             # <<<<<<<<<<<<<<
 *             return self.small_graph.edges[edge.id()]
 *         if isinstance(obj, Node):
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    __pyx_t_3 = PyInt_FromLong(__pyx_v_edge->id()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->small_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __pyx_v_edge->id();
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, __pyx_t_5, sizeof(int), PyInt_FromLong, 0, 1, 1); if (!__pyx_t_6) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s__id); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_3, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    #endif

    /* "pydecode/hyper.pyx":3033
 *             assert edge.id() >= 0
 *             assert edge.id() == self.small_graph.edges[edge.id()].id
 *             return self.small_graph.edges[edge.id()]             # <<<<<<<<<<<<<<
 *         if isinstance(obj, Node):
 *             node = self.thisptr.project((<Node>obj).nodeptr)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->small_graph), __pyx_n_s__edges); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3033; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __pyx_v_edge->id();
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, __pyx_t_5, sizeof(int), PyInt_FromLong, 0, 1, 1); if (!__pyx_t_4) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3033; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pydecode/hyper.pyx":3034
 *             assert edge.id() == self.small_graph.edges[edge.id()].id
 *             return self.small_graph.edges[edge.id()]
 *         if isinstance(obj, Node):             # <<<<<<<<<<<<<<
 *             node = self.thisptr.project((<Node>obj).nodeptr)
 *             assert node.id() >= 0
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, ((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Node)); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pydecode/hyper.pyx":3035
 *             return self.small_graph.edges[edge.id()]
 *         if isinstance(obj, Node):
 *             node = self.thisptr.project((<Node>obj).nodeptr)             # <<<<<<<<<<<<<<
 *             assert node.id() >= 0
 *             return self.small_graph.nodes[node.id()]
 */
    __pyx_v_node = __pyx_v_self->thisptr->project(((struct __pyx_obj_8pydecode_10hypergraph_Node *)__pyx_v_obj)->nodeptr);

    /* "pydecode/hyper.pyx":3036
 *         if isinstance(obj, Node):
 *             node = self.thisptr.project((<Node>obj).nodeptr)
 *             assert node.id() >= 0             # <<<<<<<<<<<<<<
 *             return self.small_graph.nodes[node.id()]
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!((__pyx_v_node->id() >= 0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    #endif

    /* "pydecode/hyper.pyx":3037
 *             node = self.thisptr.project((<Node>obj).nodeptr)
 *             assert node.id() >= 0
 *             return self.small_graph.nodes[node.id()]             # <<<<<<<<<<<<<<
 * 
 *     def project(self, Hypergraph graph):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->small_graph), __pyx_n_s__nodes); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __pyx_v_node->id();
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, __pyx_t_5, sizeof(int), PyInt_FromLong, 0, 1, 1); if (!__pyx_t_6) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pydecode.hyper.Projection.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_9project(PyObject *__pyx_v_self, PyObject *__pyx_v_graph); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10Projection_8project[] = "Projection.project(self, Hypergraph graph)";
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_9project(PyObject *__pyx_v_self, PyObject *__pyx_v_graph) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("project (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3039; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_10Projection_8project(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_v_self), ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_v_graph));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3039
 *             return self.small_graph.nodes[node.id()]
 * 
 *     def project(self, Hypergraph graph):             # <<<<<<<<<<<<<<
 *         cdef Hypergraph new_graph = Hypergraph()
 *         cdef const CHypergraphProjection *projection = self.thisptr
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_8project(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_new_graph = 0;
  HypergraphProjection const *__pyx_v_projection;
  PyObject *__pyx_v_node_labels = NULL;
  std::vector<Hypernode const *> __pyx_v_old_nodes;
  Hypernode const *__pyx_v_node;
  size_t __pyx_v_i;
  PyObject *__pyx_v_edge_labels = NULL;
  std::vector<Hyperedge const *> __pyx_v_old_edges;
  Hyperedge const *__pyx_v_edge;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  HypergraphProjection const *__pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("project", 0);

  /* "pydecode/hyper.pyx":3040
 * 
 *     def project(self, Hypergraph graph):
 *         cdef Hypergraph new_graph = Hypergraph()             # <<<<<<<<<<<<<<
 *         cdef const CHypergraphProjection *projection = self.thisptr
 * 
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Hypergraph)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3040; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_new_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":3041
 *     def project(self, Hypergraph graph):
 *         cdef Hypergraph new_graph = Hypergraph()
 *         cdef const CHypergraphProjection *projection = self.thisptr             # <<<<<<<<<<<<<<
 * 
 *         # Map nodes.
 */
  __pyx_t_2 = __pyx_v_self->thisptr;
  __pyx_v_projection = __pyx_t_2;

  /* "pydecode/hyper.pyx":3044
 * 
 *         # Map nodes.
 *         node_labels = [None] * projection.new_graph().nodes().size()             # <<<<<<<<<<<<<<
 *         cdef vector[const CHypernode*] old_nodes = graph.thisptr.nodes()
 *         cdef const CHypernode *node
 */
  __pyx_t_1 = PyList_New(1 * ((__pyx_v_projection->new_graph()->nodes().size()<0) ? 0:__pyx_v_projection->new_graph()->nodes().size())); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3044; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  { Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < __pyx_v_projection->new_graph()->nodes().size(); __pyx_temp++) {
      __Pyx_INCREF(Py_None);
      PyList_SET_ITEM(__pyx_t_1, __pyx_temp, Py_None);
      __Pyx_GIVEREF(Py_None);
    }
  }
  __pyx_v_node_labels = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":3045
 *         # Map nodes.
 *         node_labels = [None] * projection.new_graph().nodes().size()
 *         cdef vector[const CHypernode*] old_nodes = graph.thisptr.nodes()             # <<<<<<<<<<<<<<
 *         cdef const CHypernode *node
 *         for i in range(old_nodes.size()):
 */
  __pyx_v_old_nodes = __pyx_v_graph->thisptr->nodes();

  /* "pydecode/hyper.pyx":3047
 *         cdef vector[const CHypernode*] old_nodes = graph.thisptr.nodes()
 *         cdef const CHypernode *node
 *         for i in range(old_nodes.size()):             # <<<<<<<<<<<<<<
 *             node = projection.project(old_nodes[i])
 *             if node != NULL and node.id() >= 0:
 */
  __pyx_t_3 = __pyx_v_old_nodes.size();
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "pydecode/hyper.pyx":3048
 *         cdef const CHypernode *node
 *         for i in range(old_nodes.size()):
 *             node = projection.project(old_nodes[i])             # <<<<<<<<<<<<<<
 *             if node != NULL and node.id() >= 0:
 *                 node_labels[node.id()] = graph.node_labels[i]
 */
    __pyx_v_node = __pyx_v_projection->project((__pyx_v_old_nodes[__pyx_v_i]));

    /* "pydecode/hyper.pyx":3049
 *         for i in range(old_nodes.size()):
 *             node = projection.project(old_nodes[i])
 *             if node != NULL and node.id() >= 0:             # <<<<<<<<<<<<<<
 *                 node_labels[node.id()] = graph.node_labels[i]
 * 
 */
    __pyx_t_5 = ((__pyx_v_node != NULL) != 0);
    if (__pyx_t_5) {
      __pyx_t_6 = ((__pyx_v_node->id() >= 0) != 0);
      __pyx_t_7 = __pyx_t_6;
    } else {
      __pyx_t_7 = __pyx_t_5;
    }
    if (__pyx_t_7) {

      /* "pydecode/hyper.pyx":3050
 *             node = projection.project(old_nodes[i])
 *             if node != NULL and node.id() >= 0:
 *                 node_labels[node.id()] = graph.node_labels[i]             # <<<<<<<<<<<<<<
 * 
 *         # Map edges.
 */
      __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_graph->node_labels, __pyx_v_i, sizeof(size_t)+1, __Pyx_PyInt_FromSize_t, 0, 0, 1); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3050; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __pyx_v_node->id();
      if (__Pyx_SetItemInt(((PyObject *)__pyx_v_node_labels), __pyx_t_8, __pyx_t_1, sizeof(int), PyInt_FromLong, 1, 1, 1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3050; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L5;
    }
    __pyx_L5:;
  }

  /* "pydecode/hyper.pyx":3053
 * 
 *         # Map edges.
 *         edge_labels = [None] * projection.new_graph().edges().size()             # <<<<<<<<<<<<<<
 *         cdef vector[const CHyperedge *] old_edges = graph.thisptr.edges()
 *         cdef const CHyperedge *edge
 */
  __pyx_t_1 = PyList_New(1 * ((__pyx_v_projection->new_graph()->edges().size()<0) ? 0:__pyx_v_projection->new_graph()->edges().size())); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3053; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  { Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < __pyx_v_projection->new_graph()->edges().size(); __pyx_temp++) {
      __Pyx_INCREF(Py_None);
      PyList_SET_ITEM(__pyx_t_1, __pyx_temp, Py_None);
      __Pyx_GIVEREF(Py_None);
    }
  }
  __pyx_v_edge_labels = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":3054
 *         # Map edges.
 *         edge_labels = [None] * projection.new_graph().edges().size()
 *         cdef vector[const CHyperedge *] old_edges = graph.thisptr.edges()             # <<<<<<<<<<<<<<
 *         cdef const CHyperedge *edge
 *         for i in range(old_edges.size()):
 */
  __pyx_v_old_edges = __pyx_v_graph->thisptr->edges();

  /* "pydecode/hyper.pyx":3056
 *         cdef vector[const CHyperedge *] old_edges = graph.thisptr.edges()
 *         cdef const CHyperedge *edge
 *         for i in range(old_edges.size()):             # <<<<<<<<<<<<<<
 *             edge = projection.project(old_edges[i])
 *             if edge != NULL and edge.id() >= 0:
 */
  __pyx_t_3 = __pyx_v_old_edges.size();
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "pydecode/hyper.pyx":3057
 *         cdef const CHyperedge *edge
 *         for i in range(old_edges.size()):
 *             edge = projection.project(old_edges[i])             # <<<<<<<<<<<<<<
 *             if edge != NULL and edge.id() >= 0:
 *                 edge_labels[edge.id()] = graph.edge_labels[i]
 */
    __pyx_v_edge = __pyx_v_projection->project((__pyx_v_old_edges[__pyx_v_i]));

    /* "pydecode/hyper.pyx":3058
 *         for i in range(old_edges.size()):
 *             edge = projection.project(old_edges[i])
 *             if edge != NULL and edge.id() >= 0:             # <<<<<<<<<<<<<<
 *                 edge_labels[edge.id()] = graph.edge_labels[i]
 * 
 */
    __pyx_t_7 = ((__pyx_v_edge != NULL) != 0);
    if (__pyx_t_7) {
      __pyx_t_5 = ((__pyx_v_edge->id() >= 0) != 0);
      __pyx_t_6 = __pyx_t_5;
    } else {
      __pyx_t_6 = __pyx_t_7;
    }
    if (__pyx_t_6) {

      /* "pydecode/hyper.pyx":3059
 *             edge = projection.project(old_edges[i])
 *             if edge != NULL and edge.id() >= 0:
 *                 edge_labels[edge.id()] = graph.edge_labels[i]             # <<<<<<<<<<<<<<
 * 
 *         new_graph.init(projection.new_graph(), node_labels, edge_labels)
 */
      __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_graph->edge_labels, __pyx_v_i, sizeof(size_t)+1, __Pyx_PyInt_FromSize_t, 0, 0, 1); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __pyx_v_edge->id();
      if (__Pyx_SetItemInt(((PyObject *)__pyx_v_edge_labels), __pyx_t_8, __pyx_t_1, sizeof(int), PyInt_FromLong, 1, 1, 1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L8;
    }
    __pyx_L8:;
  }

  /* "pydecode/hyper.pyx":3061
 *                 edge_labels[edge.id()] = graph.edge_labels[i]
 * 
 *         new_graph.init(projection.new_graph(), node_labels, edge_labels)             # <<<<<<<<<<<<<<
 *         return new_graph
 * 
 */
  __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Hypergraph *)__pyx_v_new_graph->__pyx_vtab)->init(__pyx_v_new_graph, __pyx_v_projection->new_graph(), ((PyObject *)__pyx_v_node_labels), ((PyObject *)__pyx_v_edge_labels))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":3062
 * 
 *         new_graph.init(projection.new_graph(), node_labels, edge_labels)
 *         return new_graph             # <<<<<<<<<<<<<<
 * 
 *     def small_hypergraph(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_new_graph));
  __pyx_r = ((PyObject *)__pyx_v_new_graph);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.Projection.project", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_new_graph);
  __Pyx_XDECREF(__pyx_v_node_labels);
  __Pyx_XDECREF(__pyx_v_edge_labels);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_11small_hypergraph(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10Projection_10small_hypergraph[] = "Projection.small_hypergraph(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_11small_hypergraph(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("small_hypergraph (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_10Projection_10small_hypergraph(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3064
 *         return new_graph
 * 
 *     def small_hypergraph(self):             # <<<<<<<<<<<<<<
 *         cdef const CHypergraph *graph = self.thisptr.new_graph()
 *         return Hypergraph().init(graph, [], [])
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_10small_hypergraph(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self) {
  Hypergraph const *__pyx_v_graph;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("small_hypergraph", 0);

  /* "pydecode/hyper.pyx":3065
 * 
 *     def small_hypergraph(self):
 *         cdef const CHypergraph *graph = self.thisptr.new_graph()             # <<<<<<<<<<<<<<
 *         return Hypergraph().init(graph, [], [])
 * 
 */
  __pyx_v_graph = __pyx_v_self->thisptr->new_graph();

  /* "pydecode/hyper.pyx":3066
 *     def small_hypergraph(self):
 *         cdef const CHypergraph *graph = self.thisptr.new_graph()
 *         return Hypergraph().init(graph, [], [])             # <<<<<<<<<<<<<<
 * 
 *     def big_hypergraph(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Hypergraph)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Hypergraph *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_t_1), __pyx_v_graph, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_t_3))); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.Projection.small_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_13big_hypergraph(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8pydecode_5hyper_10Projection_12big_hypergraph[] = "Projection.big_hypergraph(self)";
static PyObject *__pyx_pw_8pydecode_5hyper_10Projection_13big_hypergraph(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("big_hypergraph (wrapper)", 0);
  __pyx_r = __pyx_pf_8pydecode_5hyper_10Projection_12big_hypergraph(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3068
 *         return Hypergraph().init(graph, [], [])
 * 
 *     def big_hypergraph(self):             # <<<<<<<<<<<<<<
 *         cdef const CHypergraph *graph = self.thisptr.big_graph()
 *         assert graph.id() >= 0
 */

static PyObject *__pyx_pf_8pydecode_5hyper_10Projection_12big_hypergraph(struct __pyx_obj_8pydecode_5hyper_Projection *__pyx_v_self) {
  Hypergraph const *__pyx_v_graph;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("big_hypergraph", 0);

  /* "pydecode/hyper.pyx":3069
 * 
 *     def big_hypergraph(self):
 *         cdef const CHypergraph *graph = self.thisptr.big_graph()             # <<<<<<<<<<<<<<
 *         assert graph.id() >= 0
 *         return Hypergraph().init(graph, [], [])
 */
  __pyx_v_graph = __pyx_v_self->thisptr->big_graph();

  /* "pydecode/hyper.pyx":3070
 *     def big_hypergraph(self):
 *         cdef const CHypergraph *graph = self.thisptr.big_graph()
 *         assert graph.id() >= 0             # <<<<<<<<<<<<<<
 *         return Hypergraph().init(graph, [], [])
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!((__pyx_v_graph->id() >= 0) != 0))) {
    PyErr_SetNone(PyExc_AssertionError);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3070; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #endif

  /* "pydecode/hyper.pyx":3071
 *         cdef const CHypergraph *graph = self.thisptr.big_graph()
 *         assert graph.id() >= 0
 *         return Hypergraph().init(graph, [], [])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_10hypergraph_Hypergraph)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_10hypergraph_Hypergraph *)((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)__pyx_t_1), __pyx_v_graph, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_t_3))); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pydecode.hyper.Projection.big_hypergraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_13make_pruning_projections(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_12make_pruning_projections[] = "make_pruning_projections(Hypergraph graph, BoolPotentials filt)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_13make_pruning_projections = {__Pyx_NAMESTR("make_pruning_projections"), (PyCFunction)__pyx_pw_8pydecode_5hyper_13make_pruning_projections, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12make_pruning_projections)};
static PyObject *__pyx_pw_8pydecode_5hyper_13make_pruning_projections(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_filt = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("make_pruning_projections (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__filt,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__filt)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("make_pruning_projections", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3074; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "make_pruning_projections") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3074; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_filt = ((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("make_pruning_projections", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3074; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.make_pruning_projections", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_filt), __pyx_ptype_8pydecode_5hyper_BoolPotentials, 1, "filt", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_12make_pruning_projections(__pyx_self, __pyx_v_graph, __pyx_v_filt);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3074
 * 
 * 
 * def make_pruning_projections(Hypergraph graph, BoolPotentials filt):             # <<<<<<<<<<<<<<
 *     cdef const CHypergraphProjection *projection = \
 *         cproject_hypergraph(graph.thisptr,
 */

static PyObject *__pyx_pf_8pydecode_5hyper_12make_pruning_projections(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_BoolPotentials *__pyx_v_filt) {
  HypergraphProjection const *__pyx_v_projection;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("make_pruning_projections", 0);

  /* "pydecode/hyper.pyx":3077
 *     cdef const CHypergraphProjection *projection = \
 *         cproject_hypergraph(graph.thisptr,
 *                             deref(filt.thisptr))             # <<<<<<<<<<<<<<
 *     return Projection().init(projection, None)
 * 
 */
  __pyx_v_projection = HypergraphProjection::project_hypergraph(__pyx_v_graph->thisptr, (*__pyx_v_filt->thisptr));

  /* "pydecode/hyper.pyx":3078
 *         cproject_hypergraph(graph.thisptr,
 *                             deref(filt.thisptr))
 *     return Projection().init(projection, None)             # <<<<<<<<<<<<<<
 * 
 * def valid_binary_vectors(Bitset lhs, Bitset rhs):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_Projection)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3078; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_5hyper_Projection *)((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_t_1), __pyx_v_projection, ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3078; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.make_pruning_projections", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_15valid_binary_vectors(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_14valid_binary_vectors[] = "valid_binary_vectors(Bitset lhs, Bitset rhs)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_15valid_binary_vectors = {__Pyx_NAMESTR("valid_binary_vectors"), (PyCFunction)__pyx_pw_8pydecode_5hyper_15valid_binary_vectors, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14valid_binary_vectors)};
static PyObject *__pyx_pw_8pydecode_5hyper_15valid_binary_vectors(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_lhs = 0;
  struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_rhs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("valid_binary_vectors (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__lhs,&__pyx_n_s__rhs,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lhs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rhs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("valid_binary_vectors", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "valid_binary_vectors") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_lhs = ((struct __pyx_obj_8pydecode_5hyper_Bitset *)values[0]);
    __pyx_v_rhs = ((struct __pyx_obj_8pydecode_5hyper_Bitset *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("valid_binary_vectors", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.valid_binary_vectors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_lhs), __pyx_ptype_8pydecode_5hyper_Bitset, 1, "lhs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rhs), __pyx_ptype_8pydecode_5hyper_Bitset, 1, "rhs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_14valid_binary_vectors(__pyx_self, __pyx_v_lhs, __pyx_v_rhs);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3080
 *     return Projection().init(projection, None)
 * 
 * def valid_binary_vectors(Bitset lhs, Bitset rhs):             # <<<<<<<<<<<<<<
 *     return cvalid_binary_vectors(lhs.data, rhs.data)
 * 
 */

static PyObject *__pyx_pf_8pydecode_5hyper_14valid_binary_vectors(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_lhs, struct __pyx_obj_8pydecode_5hyper_Bitset *__pyx_v_rhs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("valid_binary_vectors", 0);

  /* "pydecode/hyper.pyx":3081
 * 
 * def valid_binary_vectors(Bitset lhs, Bitset rhs):
 *     return cvalid_binary_vectors(lhs.data, rhs.data)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(valid_binary_vectors(__pyx_v_lhs->data, __pyx_v_rhs->data)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pydecode.hyper.valid_binary_vectors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_8pydecode_5hyper_17extend_hypergraph_by_count(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8pydecode_5hyper_16extend_hypergraph_by_count[] = "extend_hypergraph_by_count(Hypergraph graph, CountingPotentials potentials, int lower_limit, int upper_limit, int goal)";
static PyMethodDef __pyx_mdef_8pydecode_5hyper_17extend_hypergraph_by_count = {__Pyx_NAMESTR("extend_hypergraph_by_count"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17extend_hypergraph_by_count, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16extend_hypergraph_by_count)};
static PyObject *__pyx_pw_8pydecode_5hyper_17extend_hypergraph_by_count(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph = 0;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials = 0;
  int __pyx_v_lower_limit;
  int __pyx_v_upper_limit;
  int __pyx_v_goal;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("extend_hypergraph_by_count (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__graph,&__pyx_n_s__potentials,&__pyx_n_s__lower_limit,&__pyx_n_s__upper_limit,&__pyx_n_s__goal,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__graph)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__potentials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("extend_hypergraph_by_count", 1, 5, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lower_limit)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("extend_hypergraph_by_count", 1, 5, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__upper_limit)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("extend_hypergraph_by_count", 1, 5, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__goal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("extend_hypergraph_by_count", 1, 5, 5, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "extend_hypergraph_by_count") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)values[0]);
    __pyx_v_potentials = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)values[1]);
    __pyx_v_lower_limit = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_lower_limit == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3086; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_upper_limit = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_upper_limit == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3087; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_goal = __Pyx_PyInt_AsInt(values[4]); if (unlikely((__pyx_v_goal == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("extend_hypergraph_by_count", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pydecode.hyper.extend_hypergraph_by_count", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_graph), __pyx_ptype_8pydecode_10hypergraph_Hypergraph, 1, "graph", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_potentials), __pyx_ptype_8pydecode_5hyper_CountingPotentials, 1, "potentials", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_8pydecode_5hyper_16extend_hypergraph_by_count(__pyx_self, __pyx_v_graph, __pyx_v_potentials, __pyx_v_lower_limit, __pyx_v_upper_limit, __pyx_v_goal);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pydecode/hyper.pyx":3084
 * 
 * 
 * def extend_hypergraph_by_count(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                CountingPotentials potentials,
 *                                int lower_limit,
 */

static PyObject *__pyx_pf_8pydecode_5hyper_16extend_hypergraph_by_count(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *__pyx_v_graph, struct __pyx_obj_8pydecode_5hyper_CountingPotentials *__pyx_v_potentials, int __pyx_v_lower_limit, int __pyx_v_upper_limit, int __pyx_v_goal) {
  HypergraphProjection *__pyx_v_projection;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("extend_hypergraph_by_count", 0);

  /* "pydecode/hyper.pyx":3094
 *                                     lower_limit,
 *                                     upper_limit,
 *                                     goal)             # <<<<<<<<<<<<<<
 *     return Projection().init(projection, graph)
 */
  __pyx_v_projection = extend_hypergraph_by_count(__pyx_v_graph->thisptr, (*__pyx_v_potentials->thisptr), __pyx_v_lower_limit, __pyx_v_upper_limit, __pyx_v_goal);

  /* "pydecode/hyper.pyx":3095
 *                                     upper_limit,
 *                                     goal)
 *     return Projection().init(projection, graph)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_Projection)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((PyObject *)((struct __pyx_vtabstruct_8pydecode_5hyper_Projection *)((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_t_1)->__pyx_vtab)->init(((struct __pyx_obj_8pydecode_5hyper_Projection *)__pyx_t_1), __pyx_v_projection, __pyx_v_graph)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pydecode.hyper.extend_hypergraph_by_count", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pair.from_py":163
 * 
 * @cname("__pyx_convert_pair_from_py_int____int")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int____int(object o) except *:             # <<<<<<<<<<<<<<
 *     x, y = o
 *     return pair[X,Y](X_from_py(x), Y_from_py(y))
 */

static std::pair<int,int> __pyx_convert_pair_from_py_int____int(PyObject *__pyx_v_o) {
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  std::pair<int,int> __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *(*__pyx_t_4)(PyObject *);
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_pair_from_py_int____int", 0);

  /* "pair.from_py":164
 * @cname("__pyx_convert_pair_from_py_int____int")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int____int(object o) except *:
 *     x, y = o             # <<<<<<<<<<<<<<
 *     return pair[X,Y](X_from_py(x), Y_from_py(y))
 * 
 */
  if ((likely(PyTuple_CheckExact(__pyx_v_o))) || (PyList_CheckExact(__pyx_v_o))) {
    PyObject* sequence = __pyx_v_o;
    #if CYTHON_COMPILING_IN_CPYTHON
    Py_ssize_t size = Py_SIZE(sequence);
    #else
    Py_ssize_t size = PySequence_Size(sequence);
    #endif
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    #if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    #endif
  } else
  {
    Py_ssize_t index = -1;
    __pyx_t_3 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = Py_TYPE(__pyx_t_3)->tp_iternext;
    index = 0; __pyx_t_1 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_2 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_4(__pyx_t_3), 2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = NULL;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_x = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_y = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pair.from_py":165
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int____int(object o) except *:
 *     x, y = o
 *     return pair[X,Y](X_from_py(x), Y_from_py(y))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __Pyx_PyInt_AsInt(__pyx_v_x); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = __Pyx_PyInt_AsInt(__pyx_v_y); if (unlikely(__pyx_t_6 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = std::pair<int,int>(__pyx_t_5, __pyx_t_6);
  goto __pyx_L0;

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pair.from_py.__pyx_convert_pair_from_py_int____int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":46
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<std::pair<int,int> > __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(PyObject *__pyx_v_o) {
  std::vector<std::pair<int,int> > __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<std::pair<int,int> > __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::pair<int,int> __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_", 0);

  /* "vector.from_py":48
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  if (PyList_CheckExact(__pyx_v_o) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_3 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_3 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":49
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(X_from_py(item))             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_convert_pair_from_py_int____int(__pyx_v_item); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_v.push_back(__pyx_t_5);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":50
 *     for item in o:
 *         v.push_back(X_from_py(item))
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e_", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pair.to_py":180
 * 
 * @cname("__pyx_convert_pair_to_py_int____int")
 * cdef object __pyx_convert_pair_to_py_int____int(pair[X,Y]& p):             # <<<<<<<<<<<<<<
 *     return X_to_py(p.first), Y_to_py(p.second)
 * 
 */

static PyObject *__pyx_convert_pair_to_py_int____int(const std::pair<int,int> &__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_pair_to_py_int____int", 0);

  /* "pair.to_py":181
 * @cname("__pyx_convert_pair_to_py_int____int")
 * cdef object __pyx_convert_pair_to_py_int____int(pair[X,Y]& p):
 *     return X_to_py(p.first), Y_to_py(p.second)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_p.first); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_p.second); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pair.to_py.__pyx_convert_pair_to_py_int____int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":63
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_(const std::vector<std::pair<int,int> > &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_", 0);

  /* "vector.to_py":64
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_(vector[X]& v):
 *     return [X_to_py(v[i]) for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = __pyx_convert_pair_to_py_int____int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_8pydecode_5hyper_Bitset __pyx_vtable_8pydecode_5hyper_Bitset;

static PyObject *__pyx_tp_new_8pydecode_5hyper_Bitset(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_Bitset *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_Bitset *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_Bitset;
  new((void*)&(p->data)) bitset<500>();
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_Bitset(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_Bitset *p = (struct __pyx_obj_8pydecode_5hyper_Bitset *)o;
  p->data.bitset<500>::~bitset();
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_Bitset(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_8pydecode_5hyper_Bitset(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_8pydecode_5hyper_6Bitset_1__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_Bitset[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Bitset = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_Bitset, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Bitset = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_6Bitset_3__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_8pydecode_5hyper_Bitset, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_Bitset = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.Bitset"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_Bitset), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_Bitset, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Bitset, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Bitset, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_Bitset, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_Bitset, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper__SparseVectorW(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__SparseVectorW(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__SparseVectorW[] = {
  {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14_SparseVectorW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14_SparseVectorW_one)},
  {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14_SparseVectorW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14_SparseVectorW_2zero)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_8pydecode_5hyper__SparseVectorW = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._SparseVectorW"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__SparseVectorW), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__SparseVectorW, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__SparseVectorW, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__SparseVectorW, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_BinaryVectorPotentials __pyx_vtable_8pydecode_5hyper_BinaryVectorPotentials;

static PyObject *__pyx_tp_new_8pydecode_5hyper_BinaryVectorPotentials(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_BinaryVectorPotentials;
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  p->kind = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_BinaryVectorPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->hypergraph);
  Py_CLEAR(p->projection);
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_BinaryVectorPotentials(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)o;
  if (p->hypergraph) {
    e = (*v)(((PyObject*)p->hypergraph), a); if (e) return e;
  }
  if (p->projection) {
    e = (*v)(((PyObject*)p->projection), a); if (e) return e;
  }
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_BinaryVectorPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->hypergraph);
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->projection);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_BinaryVectorPotentials(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_8pydecode_5hyper_22BinaryVectorPotentials_kind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_4kind_1__get__(o);
}

static PyObject *__pyx_getprop_8pydecode_5hyper_22BinaryVectorPotentials_bias(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_4bias_1__get__(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_BinaryVectorPotentials[] = {
  {__Pyx_NAMESTR("times"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_5times, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_4times)},
  {__Pyx_NAMESTR("clone"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_7clone, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_6clone)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_9project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_8project)},
  {__Pyx_NAMESTR("up_project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_11up_project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_10up_project)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_13show, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_12show)},
  {__Pyx_NAMESTR("build"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_15build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_14build)},
  {__Pyx_NAMESTR("from_potentials"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_17from_potentials, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_16from_potentials)},
  {__Pyx_NAMESTR("from_vector"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_19from_vector, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_18from_vector)},
  {__Pyx_NAMESTR("from_map"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_21from_map, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_20from_map)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_25dot, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22BinaryVectorPotentials_24dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pydecode_5hyper_BinaryVectorPotentials[] = {
  {(char *)"kind", __pyx_getprop_8pydecode_5hyper_22BinaryVectorPotentials_kind, 0, 0, 0},
  {(char *)"bias", __pyx_getprop_8pydecode_5hyper_22BinaryVectorPotentials_bias, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_BinaryVectorPotentials = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_BinaryVectorPotentials, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BinaryVectorPotentials = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_22BinaryVectorPotentials_23__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_BinaryVectorPotentials = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.BinaryVectorPotentials"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_BinaryVectorPotentials, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_BinaryVectorPotentials, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BinaryVectorPotentials, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Potential vector :math:`\\theta \\in R^{|{\\cal E}|}` associated with a hypergraph.\n\n    Acts as a dictionary::\n       >> print potentials[edge]\n    "), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_BinaryVectorPotentials, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_BinaryVectorPotentials, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_BinaryVectorPotentials, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pydecode_5hyper_BinaryVectorPotentials, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_BinaryVectorPotentials, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper__BinaryVectorW(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__BinaryVectorW(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__BinaryVectorW[] = {
  {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14_BinaryVectorW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14_BinaryVectorW_one)},
  {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14_BinaryVectorW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14_BinaryVectorW_2zero)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_8pydecode_5hyper__BinaryVectorW = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._BinaryVectorW"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__BinaryVectorW), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__BinaryVectorW, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__BinaryVectorW, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__BinaryVectorW, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper__CountingMarginals __pyx_vtable_8pydecode_5hyper__CountingMarginals;

static PyObject *__pyx_tp_new_8pydecode_5hyper__CountingMarginals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper__CountingMarginals *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper__CountingMarginals *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper__CountingMarginals;
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__CountingMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__CountingMarginals *p = (struct __pyx_obj_8pydecode_5hyper__CountingMarginals *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_18_CountingMarginals_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper__CountingMarginals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper__CountingMarginals *p = (struct __pyx_obj_8pydecode_5hyper__CountingMarginals *)o;
  if (p->graph) {
    e = (*v)(((PyObject*)p->graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper__CountingMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__CountingMarginals *p = (struct __pyx_obj_8pydecode_5hyper__CountingMarginals *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->graph);
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper__CountingMarginals(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__CountingMarginals[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__CountingMarginals = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper__CountingMarginals, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__CountingMarginals = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_18_CountingMarginals_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper__CountingMarginals = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._CountingMarginals"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__CountingMarginals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__CountingMarginals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__CountingMarginals, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__CountingMarginals, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("_CountingMarginals()"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper__CountingMarginals, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper__CountingMarginals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__CountingMarginals, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_18_CountingMarginals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__CountingMarginals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper_MaxSparseVectorChart(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)o);
  p->kind = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_MaxSparseVectorChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_20MaxSparseVectorChart_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_MaxSparseVectorChart(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)o;
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_MaxSparseVectorChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_MaxSparseVectorChart(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_MaxSparseVectorChart[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_MaxSparseVectorChart = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_MaxSparseVectorChart, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_MaxSparseVectorChart = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_20MaxSparseVectorChart_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_MaxSparseVectorChart = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.MaxSparseVectorChart"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorChart), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_MaxSparseVectorChart, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_MaxSparseVectorChart, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_MaxSparseVectorChart, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("MaxSparseVectorChart(Hypergraph graph=None)"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_MaxSparseVectorChart, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_MaxSparseVectorChart, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_MaxSparseVectorChart, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_20MaxSparseVectorChart_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_MaxSparseVectorChart, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper__ViterbiMarginals __pyx_vtable_8pydecode_5hyper__ViterbiMarginals;

static PyObject *__pyx_tp_new_8pydecode_5hyper__ViterbiMarginals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper__ViterbiMarginals;
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__ViterbiMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *p = (struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper__ViterbiMarginals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *p = (struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)o;
  if (p->graph) {
    e = (*v)(((PyObject*)p->graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper__ViterbiMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *p = (struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->graph);
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper__ViterbiMarginals(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__ViterbiMarginals[] = {
  {__Pyx_NAMESTR("threshold"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_7threshold, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17_ViterbiMarginals_6threshold)},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__ViterbiMarginals = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper__ViterbiMarginals, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__ViterbiMarginals = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper__ViterbiMarginals = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._ViterbiMarginals"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__ViterbiMarginals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__ViterbiMarginals, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__ViterbiMarginals, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("_ViterbiMarginals()"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper__ViterbiMarginals, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper__ViterbiMarginals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__ViterbiMarginals, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_17_ViterbiMarginals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__ViterbiMarginals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper_ViterbiChart(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_ViterbiChart *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)o);
  p->kind = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_ViterbiChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_ViterbiChart *p = (struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_12ViterbiChart_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_ViterbiChart(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_ViterbiChart *p = (struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)o;
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_ViterbiChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_ViterbiChart *p = (struct __pyx_obj_8pydecode_5hyper_ViterbiChart *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_ViterbiChart(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_ViterbiChart[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_ViterbiChart = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_ViterbiChart, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ViterbiChart = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_12ViterbiChart_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_ViterbiChart = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.ViterbiChart"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_ViterbiChart), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_ViterbiChart, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_ViterbiChart, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ViterbiChart, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("ViterbiChart(Hypergraph graph=None)"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_ViterbiChart, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_ViterbiChart, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_ViterbiChart, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_12ViterbiChart_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_ViterbiChart, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_MaxSparseVectorPotentials __pyx_vtable_8pydecode_5hyper_MaxSparseVectorPotentials;

static PyObject *__pyx_tp_new_8pydecode_5hyper_MaxSparseVectorPotentials(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_MaxSparseVectorPotentials;
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  p->kind = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_MaxSparseVectorPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->hypergraph);
  Py_CLEAR(p->projection);
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_MaxSparseVectorPotentials(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)o;
  if (p->hypergraph) {
    e = (*v)(((PyObject*)p->hypergraph), a); if (e) return e;
  }
  if (p->projection) {
    e = (*v)(((PyObject*)p->projection), a); if (e) return e;
  }
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_MaxSparseVectorPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->hypergraph);
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->projection);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_MaxSparseVectorPotentials(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_8pydecode_5hyper_25MaxSparseVectorPotentials_kind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_4kind_1__get__(o);
}

static PyObject *__pyx_getprop_8pydecode_5hyper_25MaxSparseVectorPotentials_bias(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_4bias_1__get__(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_MaxSparseVectorPotentials[] = {
  {__Pyx_NAMESTR("times"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_5times, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_4times)},
  {__Pyx_NAMESTR("clone"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_7clone, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_6clone)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_9project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_8project)},
  {__Pyx_NAMESTR("up_project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_11up_project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_10up_project)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_13show, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_12show)},
  {__Pyx_NAMESTR("build"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_15build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_14build)},
  {__Pyx_NAMESTR("from_potentials"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_17from_potentials, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_16from_potentials)},
  {__Pyx_NAMESTR("from_vector"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_19from_vector, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_18from_vector)},
  {__Pyx_NAMESTR("from_map"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_21from_map, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_20from_map)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_25dot, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MaxSparseVectorPotentials_24dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pydecode_5hyper_MaxSparseVectorPotentials[] = {
  {(char *)"kind", __pyx_getprop_8pydecode_5hyper_25MaxSparseVectorPotentials_kind, 0, 0, 0},
  {(char *)"bias", __pyx_getprop_8pydecode_5hyper_25MaxSparseVectorPotentials_bias, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_MaxSparseVectorPotentials = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_MaxSparseVectorPotentials, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_MaxSparseVectorPotentials = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_25MaxSparseVectorPotentials_23__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_MaxSparseVectorPotentials = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.MaxSparseVectorPotentials"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_MaxSparseVectorPotentials, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_MaxSparseVectorPotentials, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_MaxSparseVectorPotentials, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Potential vector :math:`\\theta \\in R^{|{\\cal E}|}` associated with a hypergraph.\n\n    Acts as a dictionary::\n       >> print potentials[edge]\n    "), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_MaxSparseVectorPotentials, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_MaxSparseVectorPotentials, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_MaxSparseVectorPotentials, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pydecode_5hyper_MaxSparseVectorPotentials, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_MaxSparseVectorPotentials, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_LogViterbiPotentials __pyx_vtable_8pydecode_5hyper_LogViterbiPotentials;

static PyObject *__pyx_tp_new_8pydecode_5hyper_LogViterbiPotentials(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_LogViterbiPotentials;
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  p->kind = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_LogViterbiPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *p = (struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->hypergraph);
  Py_CLEAR(p->projection);
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_LogViterbiPotentials(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *p = (struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)o;
  if (p->hypergraph) {
    e = (*v)(((PyObject*)p->hypergraph), a); if (e) return e;
  }
  if (p->projection) {
    e = (*v)(((PyObject*)p->projection), a); if (e) return e;
  }
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_LogViterbiPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *p = (struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->hypergraph);
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->projection);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_LogViterbiPotentials(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_8pydecode_5hyper_20LogViterbiPotentials_kind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_4kind_1__get__(o);
}

static PyObject *__pyx_getprop_8pydecode_5hyper_20LogViterbiPotentials_bias(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_4bias_1__get__(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_LogViterbiPotentials[] = {
  {__Pyx_NAMESTR("times"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_5times, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_4times)},
  {__Pyx_NAMESTR("clone"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_7clone, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_6clone)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_9project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_8project)},
  {__Pyx_NAMESTR("up_project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_11up_project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_10up_project)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_13show, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_12show)},
  {__Pyx_NAMESTR("build"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_15build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_14build)},
  {__Pyx_NAMESTR("from_potentials"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_17from_potentials, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_16from_potentials)},
  {__Pyx_NAMESTR("from_vector"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_19from_vector, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_18from_vector)},
  {__Pyx_NAMESTR("from_map"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_21from_map, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_20from_map)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_25dot, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20LogViterbiPotentials_24dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pydecode_5hyper_LogViterbiPotentials[] = {
  {(char *)"kind", __pyx_getprop_8pydecode_5hyper_20LogViterbiPotentials_kind, 0, 0, 0},
  {(char *)"bias", __pyx_getprop_8pydecode_5hyper_20LogViterbiPotentials_bias, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_LogViterbiPotentials = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_LogViterbiPotentials, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LogViterbiPotentials = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_20LogViterbiPotentials_23__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_LogViterbiPotentials = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.LogViterbiPotentials"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_LogViterbiPotentials, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_LogViterbiPotentials, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LogViterbiPotentials, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Potential vector :math:`\\theta \\in R^{|{\\cal E}|}` associated with a hypergraph.\n\n    Acts as a dictionary::\n       >> print potentials[edge]\n    "), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_LogViterbiPotentials, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_LogViterbiPotentials, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_LogViterbiPotentials, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pydecode_5hyper_LogViterbiPotentials, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_LogViterbiPotentials, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_ViterbiPotentials __pyx_vtable_8pydecode_5hyper_ViterbiPotentials;

static PyObject *__pyx_tp_new_8pydecode_5hyper_ViterbiPotentials(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_ViterbiPotentials;
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  p->kind = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_ViterbiPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *p = (struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_17ViterbiPotentials_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->hypergraph);
  Py_CLEAR(p->projection);
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_ViterbiPotentials(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *p = (struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)o;
  if (p->hypergraph) {
    e = (*v)(((PyObject*)p->hypergraph), a); if (e) return e;
  }
  if (p->projection) {
    e = (*v)(((PyObject*)p->projection), a); if (e) return e;
  }
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_ViterbiPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *p = (struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->hypergraph);
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->projection);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_ViterbiPotentials(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_8pydecode_5hyper_17ViterbiPotentials_kind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_17ViterbiPotentials_4kind_1__get__(o);
}

static PyObject *__pyx_getprop_8pydecode_5hyper_17ViterbiPotentials_bias(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_17ViterbiPotentials_4bias_1__get__(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_ViterbiPotentials[] = {
  {__Pyx_NAMESTR("times"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_5times, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_4times)},
  {__Pyx_NAMESTR("clone"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_7clone, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_6clone)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_9project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_8project)},
  {__Pyx_NAMESTR("up_project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_11up_project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_10up_project)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_13show, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_12show)},
  {__Pyx_NAMESTR("build"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_15build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_14build)},
  {__Pyx_NAMESTR("from_potentials"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_17from_potentials, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_16from_potentials)},
  {__Pyx_NAMESTR("from_vector"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_19from_vector, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_18from_vector)},
  {__Pyx_NAMESTR("from_map"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_21from_map, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_20from_map)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17ViterbiPotentials_25dot, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17ViterbiPotentials_24dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pydecode_5hyper_ViterbiPotentials[] = {
  {(char *)"kind", __pyx_getprop_8pydecode_5hyper_17ViterbiPotentials_kind, 0, 0, 0},
  {(char *)"bias", __pyx_getprop_8pydecode_5hyper_17ViterbiPotentials_bias, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_ViterbiPotentials = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_ViterbiPotentials, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ViterbiPotentials = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_17ViterbiPotentials_23__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_ViterbiPotentials = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.ViterbiPotentials"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_ViterbiPotentials, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_ViterbiPotentials, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ViterbiPotentials, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Potential vector :math:`\\theta \\in R^{|{\\cal E}|}` associated with a hypergraph.\n\n    Acts as a dictionary::\n       >> print potentials[edge]\n    "), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_ViterbiPotentials, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_ViterbiPotentials, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_ViterbiPotentials, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pydecode_5hyper_ViterbiPotentials, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_ViterbiPotentials, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper_BoolChart(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_BoolChart *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_BoolChart *)o);
  p->kind = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_BoolChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_BoolChart *p = (struct __pyx_obj_8pydecode_5hyper_BoolChart *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_9BoolChart_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_BoolChart(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_BoolChart *p = (struct __pyx_obj_8pydecode_5hyper_BoolChart *)o;
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_BoolChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_BoolChart *p = (struct __pyx_obj_8pydecode_5hyper_BoolChart *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_BoolChart(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_BoolChart[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_BoolChart = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_BoolChart, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BoolChart = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_9BoolChart_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_BoolChart = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.BoolChart"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_BoolChart), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_BoolChart, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_BoolChart, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BoolChart, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("BoolChart(Hypergraph graph=None)"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_BoolChart, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_BoolChart, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_BoolChart, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_9BoolChart_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_BoolChart, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper_CountingChart(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_CountingChart *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_CountingChart *)o);
  p->kind = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_CountingChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_CountingChart *p = (struct __pyx_obj_8pydecode_5hyper_CountingChart *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_13CountingChart_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_CountingChart(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_CountingChart *p = (struct __pyx_obj_8pydecode_5hyper_CountingChart *)o;
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_CountingChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_CountingChart *p = (struct __pyx_obj_8pydecode_5hyper_CountingChart *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_CountingChart(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_CountingChart[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_CountingChart = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_CountingChart, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CountingChart = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_13CountingChart_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_CountingChart = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.CountingChart"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_CountingChart), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_CountingChart, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_CountingChart, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CountingChart, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("CountingChart(Hypergraph graph=None)"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_CountingChart, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_CountingChart, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_CountingChart, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_13CountingChart_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_CountingChart, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper__MaxSparseVectorW(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__MaxSparseVectorW(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__MaxSparseVectorW[] = {
  {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17_MaxSparseVectorW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17_MaxSparseVectorW_one)},
  {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17_MaxSparseVectorW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17_MaxSparseVectorW_2zero)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_8pydecode_5hyper__MaxSparseVectorW = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._MaxSparseVectorW"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorW), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__MaxSparseVectorW, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__MaxSparseVectorW, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__MaxSparseVectorW, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper__InsideW(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__InsideW(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__InsideW[] = {
  {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_8_InsideW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_8_InsideW_one)},
  {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_8_InsideW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_8_InsideW_2zero)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_8pydecode_5hyper__InsideW = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._InsideW"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__InsideW), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__InsideW, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__InsideW, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__InsideW, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper_InsideChart(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_InsideChart *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_InsideChart *)o);
  p->kind = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_InsideChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_InsideChart *p = (struct __pyx_obj_8pydecode_5hyper_InsideChart *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_11InsideChart_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_InsideChart(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_InsideChart *p = (struct __pyx_obj_8pydecode_5hyper_InsideChart *)o;
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_InsideChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_InsideChart *p = (struct __pyx_obj_8pydecode_5hyper_InsideChart *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_InsideChart(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_InsideChart[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_InsideChart = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_InsideChart, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_InsideChart = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_11InsideChart_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_InsideChart = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.InsideChart"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_InsideChart), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_InsideChart, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_InsideChart, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_InsideChart, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("InsideChart(Hypergraph graph=None)"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_InsideChart, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_InsideChart, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_InsideChart, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_11InsideChart_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_InsideChart, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper__SparseVectorMarginals __pyx_vtable_8pydecode_5hyper__SparseVectorMarginals;

static PyObject *__pyx_tp_new_8pydecode_5hyper__SparseVectorMarginals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper__SparseVectorMarginals;
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__SparseVectorMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_22_SparseVectorMarginals_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper__SparseVectorMarginals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *)o;
  if (p->graph) {
    e = (*v)(((PyObject*)p->graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper__SparseVectorMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->graph);
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper__SparseVectorMarginals(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__SparseVectorMarginals[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__SparseVectorMarginals = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper__SparseVectorMarginals, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__SparseVectorMarginals = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_22_SparseVectorMarginals_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper__SparseVectorMarginals = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._SparseVectorMarginals"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__SparseVectorMarginals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__SparseVectorMarginals, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__SparseVectorMarginals, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("_SparseVectorMarginals()"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper__SparseVectorMarginals, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper__SparseVectorMarginals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__SparseVectorMarginals, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_22_SparseVectorMarginals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__SparseVectorMarginals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_BoolPotentials __pyx_vtable_8pydecode_5hyper_BoolPotentials;

static PyObject *__pyx_tp_new_8pydecode_5hyper_BoolPotentials(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_BoolPotentials;
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  p->kind = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_14BoolPotentials_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_BoolPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *p = (struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_14BoolPotentials_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->hypergraph);
  Py_CLEAR(p->projection);
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_BoolPotentials(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *p = (struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)o;
  if (p->hypergraph) {
    e = (*v)(((PyObject*)p->hypergraph), a); if (e) return e;
  }
  if (p->projection) {
    e = (*v)(((PyObject*)p->projection), a); if (e) return e;
  }
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_BoolPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_BoolPotentials *p = (struct __pyx_obj_8pydecode_5hyper_BoolPotentials *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->hypergraph);
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->projection);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_BoolPotentials(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_8pydecode_5hyper_14BoolPotentials_kind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_14BoolPotentials_4kind_1__get__(o);
}

static PyObject *__pyx_getprop_8pydecode_5hyper_14BoolPotentials_bias(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_14BoolPotentials_4bias_1__get__(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_BoolPotentials[] = {
  {__Pyx_NAMESTR("times"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_5times, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_4times)},
  {__Pyx_NAMESTR("clone"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_7clone, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_6clone)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_9project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_8project)},
  {__Pyx_NAMESTR("up_project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_11up_project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_10up_project)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_13show, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_12show)},
  {__Pyx_NAMESTR("build"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_15build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_14build)},
  {__Pyx_NAMESTR("from_potentials"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_17from_potentials, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_16from_potentials)},
  {__Pyx_NAMESTR("from_vector"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_19from_vector, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_18from_vector)},
  {__Pyx_NAMESTR("from_map"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_21from_map, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_20from_map)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14BoolPotentials_25dot, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14BoolPotentials_24dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pydecode_5hyper_BoolPotentials[] = {
  {(char *)"kind", __pyx_getprop_8pydecode_5hyper_14BoolPotentials_kind, 0, 0, 0},
  {(char *)"bias", __pyx_getprop_8pydecode_5hyper_14BoolPotentials_bias, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_BoolPotentials = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_BoolPotentials, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BoolPotentials = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_14BoolPotentials_23__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_BoolPotentials = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.BoolPotentials"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_BoolPotentials), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_BoolPotentials, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_BoolPotentials, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BoolPotentials, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Potential vector :math:`\\theta \\in R^{|{\\cal E}|}` associated with a hypergraph.\n\n    Acts as a dictionary::\n       >> print potentials[edge]\n    "), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_BoolPotentials, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_BoolPotentials, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_BoolPotentials, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pydecode_5hyper_BoolPotentials, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_BoolPotentials, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper__MinSparseVectorW(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__MinSparseVectorW(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__MinSparseVectorW[] = {
  {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17_MinSparseVectorW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17_MinSparseVectorW_one)},
  {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_17_MinSparseVectorW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_17_MinSparseVectorW_2zero)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_8pydecode_5hyper__MinSparseVectorW = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._MinSparseVectorW"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__MinSparseVectorW), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__MinSparseVectorW, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__MinSparseVectorW, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__MinSparseVectorW, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper__LogViterbiMarginals __pyx_vtable_8pydecode_5hyper__LogViterbiMarginals;

static PyObject *__pyx_tp_new_8pydecode_5hyper__LogViterbiMarginals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper__LogViterbiMarginals;
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__LogViterbiMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *p = (struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper__LogViterbiMarginals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *p = (struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)o;
  if (p->graph) {
    e = (*v)(((PyObject*)p->graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper__LogViterbiMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *p = (struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->graph);
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper__LogViterbiMarginals(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__LogViterbiMarginals[] = {
  {__Pyx_NAMESTR("threshold"), (PyCFunction)__pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_7threshold, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_20_LogViterbiMarginals_6threshold)},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__LogViterbiMarginals = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper__LogViterbiMarginals, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__LogViterbiMarginals = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper__LogViterbiMarginals = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._LogViterbiMarginals"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__LogViterbiMarginals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__LogViterbiMarginals, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__LogViterbiMarginals, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("_LogViterbiMarginals()"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper__LogViterbiMarginals, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper__LogViterbiMarginals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__LogViterbiMarginals, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_20_LogViterbiMarginals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__LogViterbiMarginals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper__InsideMarginals __pyx_vtable_8pydecode_5hyper__InsideMarginals;

static PyObject *__pyx_tp_new_8pydecode_5hyper__InsideMarginals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper__InsideMarginals *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper__InsideMarginals;
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__InsideMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__InsideMarginals *p = (struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_16_InsideMarginals_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper__InsideMarginals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper__InsideMarginals *p = (struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)o;
  if (p->graph) {
    e = (*v)(((PyObject*)p->graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper__InsideMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__InsideMarginals *p = (struct __pyx_obj_8pydecode_5hyper__InsideMarginals *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->graph);
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper__InsideMarginals(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__InsideMarginals[] = {
  {__Pyx_NAMESTR("threshold"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16_InsideMarginals_7threshold, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16_InsideMarginals_6threshold)},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__InsideMarginals = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper__InsideMarginals, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__InsideMarginals = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_16_InsideMarginals_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper__InsideMarginals = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._InsideMarginals"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__InsideMarginals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__InsideMarginals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__InsideMarginals, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__InsideMarginals, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("_InsideMarginals()"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper__InsideMarginals, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper__InsideMarginals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__InsideMarginals, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_16_InsideMarginals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__InsideMarginals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper_MinSparseVectorChart(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)o);
  p->kind = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_MinSparseVectorChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_20MinSparseVectorChart_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_MinSparseVectorChart(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)o;
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_MinSparseVectorChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_MinSparseVectorChart(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_MinSparseVectorChart[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_MinSparseVectorChart = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_MinSparseVectorChart, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_MinSparseVectorChart = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_20MinSparseVectorChart_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_MinSparseVectorChart = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.MinSparseVectorChart"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorChart), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_MinSparseVectorChart, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_MinSparseVectorChart, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_MinSparseVectorChart, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("MinSparseVectorChart(Hypergraph graph=None)"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_MinSparseVectorChart, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_MinSparseVectorChart, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_MinSparseVectorChart, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_20MinSparseVectorChart_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_MinSparseVectorChart, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_MinSparseVectorPotentials __pyx_vtable_8pydecode_5hyper_MinSparseVectorPotentials;

static PyObject *__pyx_tp_new_8pydecode_5hyper_MinSparseVectorPotentials(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_MinSparseVectorPotentials;
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  p->kind = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_MinSparseVectorPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->hypergraph);
  Py_CLEAR(p->projection);
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_MinSparseVectorPotentials(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)o;
  if (p->hypergraph) {
    e = (*v)(((PyObject*)p->hypergraph), a); if (e) return e;
  }
  if (p->projection) {
    e = (*v)(((PyObject*)p->projection), a); if (e) return e;
  }
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_MinSparseVectorPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->hypergraph);
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->projection);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_MinSparseVectorPotentials(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_8pydecode_5hyper_25MinSparseVectorPotentials_kind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_4kind_1__get__(o);
}

static PyObject *__pyx_getprop_8pydecode_5hyper_25MinSparseVectorPotentials_bias(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_4bias_1__get__(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_MinSparseVectorPotentials[] = {
  {__Pyx_NAMESTR("times"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_5times, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_4times)},
  {__Pyx_NAMESTR("clone"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_7clone, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_6clone)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_9project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_8project)},
  {__Pyx_NAMESTR("up_project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_11up_project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_10up_project)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_13show, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_12show)},
  {__Pyx_NAMESTR("build"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_15build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_14build)},
  {__Pyx_NAMESTR("from_potentials"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_17from_potentials, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_16from_potentials)},
  {__Pyx_NAMESTR("from_vector"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_19from_vector, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_18from_vector)},
  {__Pyx_NAMESTR("from_map"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_21from_map, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_20from_map)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_25dot, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_25MinSparseVectorPotentials_24dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pydecode_5hyper_MinSparseVectorPotentials[] = {
  {(char *)"kind", __pyx_getprop_8pydecode_5hyper_25MinSparseVectorPotentials_kind, 0, 0, 0},
  {(char *)"bias", __pyx_getprop_8pydecode_5hyper_25MinSparseVectorPotentials_bias, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_MinSparseVectorPotentials = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_MinSparseVectorPotentials, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_MinSparseVectorPotentials = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_25MinSparseVectorPotentials_23__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_MinSparseVectorPotentials = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.MinSparseVectorPotentials"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_MinSparseVectorPotentials, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_MinSparseVectorPotentials, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_MinSparseVectorPotentials, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Potential vector :math:`\\theta \\in R^{|{\\cal E}|}` associated with a hypergraph.\n\n    Acts as a dictionary::\n       >> print potentials[edge]\n    "), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_MinSparseVectorPotentials, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_MinSparseVectorPotentials, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_MinSparseVectorPotentials, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pydecode_5hyper_MinSparseVectorPotentials, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_MinSparseVectorPotentials, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper__MaxSparseVectorMarginals __pyx_vtable_8pydecode_5hyper__MaxSparseVectorMarginals;

static PyObject *__pyx_tp_new_8pydecode_5hyper__MaxSparseVectorMarginals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper__MaxSparseVectorMarginals;
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__MaxSparseVectorMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_25_MaxSparseVectorMarginals_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper__MaxSparseVectorMarginals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *)o;
  if (p->graph) {
    e = (*v)(((PyObject*)p->graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper__MaxSparseVectorMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->graph);
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper__MaxSparseVectorMarginals(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__MaxSparseVectorMarginals[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__MaxSparseVectorMarginals = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper__MaxSparseVectorMarginals, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__MaxSparseVectorMarginals = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_25_MaxSparseVectorMarginals_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper__MaxSparseVectorMarginals = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._MaxSparseVectorMarginals"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__MaxSparseVectorMarginals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__MaxSparseVectorMarginals, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__MaxSparseVectorMarginals, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("_MaxSparseVectorMarginals()"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper__MaxSparseVectorMarginals, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper__MaxSparseVectorMarginals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__MaxSparseVectorMarginals, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_25_MaxSparseVectorMarginals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__MaxSparseVectorMarginals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper__ViterbiW(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__ViterbiW(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__ViterbiW[] = {
  {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_9_ViterbiW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_9_ViterbiW_one)},
  {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_9_ViterbiW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_9_ViterbiW_2zero)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_8pydecode_5hyper__ViterbiW = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._ViterbiW"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__ViterbiW), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__ViterbiW, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__ViterbiW, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__ViterbiW, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_InsidePotentials __pyx_vtable_8pydecode_5hyper_InsidePotentials;

static PyObject *__pyx_tp_new_8pydecode_5hyper_InsidePotentials(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_InsidePotentials;
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  p->kind = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_16InsidePotentials_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_InsidePotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *p = (struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_16InsidePotentials_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->hypergraph);
  Py_CLEAR(p->projection);
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_InsidePotentials(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *p = (struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)o;
  if (p->hypergraph) {
    e = (*v)(((PyObject*)p->hypergraph), a); if (e) return e;
  }
  if (p->projection) {
    e = (*v)(((PyObject*)p->projection), a); if (e) return e;
  }
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_InsidePotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_InsidePotentials *p = (struct __pyx_obj_8pydecode_5hyper_InsidePotentials *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->hypergraph);
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->projection);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_InsidePotentials(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_8pydecode_5hyper_16InsidePotentials_kind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_16InsidePotentials_4kind_1__get__(o);
}

static PyObject *__pyx_getprop_8pydecode_5hyper_16InsidePotentials_bias(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_16InsidePotentials_4bias_1__get__(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_InsidePotentials[] = {
  {__Pyx_NAMESTR("times"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_5times, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_4times)},
  {__Pyx_NAMESTR("clone"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_7clone, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_6clone)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_9project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_8project)},
  {__Pyx_NAMESTR("up_project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_11up_project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_10up_project)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_13show, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_12show)},
  {__Pyx_NAMESTR("build"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_15build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_14build)},
  {__Pyx_NAMESTR("from_potentials"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_17from_potentials, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_16from_potentials)},
  {__Pyx_NAMESTR("from_vector"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_19from_vector, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_18from_vector)},
  {__Pyx_NAMESTR("from_map"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_21from_map, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_20from_map)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_16InsidePotentials_25dot, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_16InsidePotentials_24dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pydecode_5hyper_InsidePotentials[] = {
  {(char *)"kind", __pyx_getprop_8pydecode_5hyper_16InsidePotentials_kind, 0, 0, 0},
  {(char *)"bias", __pyx_getprop_8pydecode_5hyper_16InsidePotentials_bias, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_InsidePotentials = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_InsidePotentials, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_InsidePotentials = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_16InsidePotentials_23__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_InsidePotentials = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.InsidePotentials"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_InsidePotentials), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_InsidePotentials, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_InsidePotentials, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_InsidePotentials, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Potential vector :math:`\\theta \\in R^{|{\\cal E}|}` associated with a hypergraph.\n\n    Acts as a dictionary::\n       >> print potentials[edge]\n    "), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_InsidePotentials, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_InsidePotentials, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_InsidePotentials, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pydecode_5hyper_InsidePotentials, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_InsidePotentials, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper__LogViterbiW(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__LogViterbiW(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__LogViterbiW[] = {
  {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12_LogViterbiW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12_LogViterbiW_one)},
  {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_12_LogViterbiW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_12_LogViterbiW_2zero)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_8pydecode_5hyper__LogViterbiW = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._LogViterbiW"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__LogViterbiW), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__LogViterbiW, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__LogViterbiW, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__LogViterbiW, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper_BinaryVectorChart(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)o);
  p->kind = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_BinaryVectorChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_17BinaryVectorChart_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_BinaryVectorChart(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)o;
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_BinaryVectorChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_BinaryVectorChart(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_BinaryVectorChart[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_BinaryVectorChart = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_BinaryVectorChart, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BinaryVectorChart = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_17BinaryVectorChart_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_BinaryVectorChart = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.BinaryVectorChart"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_BinaryVectorChart), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_BinaryVectorChart, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_BinaryVectorChart, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BinaryVectorChart, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("BinaryVectorChart(Hypergraph graph=None)"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_BinaryVectorChart, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_BinaryVectorChart, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_BinaryVectorChart, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_17BinaryVectorChart_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_BinaryVectorChart, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_CountingPotentials __pyx_vtable_8pydecode_5hyper_CountingPotentials;

static PyObject *__pyx_tp_new_8pydecode_5hyper_CountingPotentials(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_CountingPotentials;
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  p->kind = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_18CountingPotentials_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_CountingPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *p = (struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_18CountingPotentials_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->hypergraph);
  Py_CLEAR(p->projection);
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_CountingPotentials(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *p = (struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)o;
  if (p->hypergraph) {
    e = (*v)(((PyObject*)p->hypergraph), a); if (e) return e;
  }
  if (p->projection) {
    e = (*v)(((PyObject*)p->projection), a); if (e) return e;
  }
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_CountingPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_CountingPotentials *p = (struct __pyx_obj_8pydecode_5hyper_CountingPotentials *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->hypergraph);
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->projection);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_CountingPotentials(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_8pydecode_5hyper_18CountingPotentials_kind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_18CountingPotentials_4kind_1__get__(o);
}

static PyObject *__pyx_getprop_8pydecode_5hyper_18CountingPotentials_bias(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_18CountingPotentials_4bias_1__get__(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_CountingPotentials[] = {
  {__Pyx_NAMESTR("times"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_5times, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_4times)},
  {__Pyx_NAMESTR("clone"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_7clone, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_6clone)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_9project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_8project)},
  {__Pyx_NAMESTR("up_project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_11up_project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_10up_project)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_13show, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_12show)},
  {__Pyx_NAMESTR("build"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_15build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_14build)},
  {__Pyx_NAMESTR("from_potentials"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_17from_potentials, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_16from_potentials)},
  {__Pyx_NAMESTR("from_vector"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_19from_vector, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_18from_vector)},
  {__Pyx_NAMESTR("from_map"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_21from_map, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_20from_map)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_18CountingPotentials_25dot, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_18CountingPotentials_24dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pydecode_5hyper_CountingPotentials[] = {
  {(char *)"kind", __pyx_getprop_8pydecode_5hyper_18CountingPotentials_kind, 0, 0, 0},
  {(char *)"bias", __pyx_getprop_8pydecode_5hyper_18CountingPotentials_bias, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_CountingPotentials = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_CountingPotentials, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CountingPotentials = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_18CountingPotentials_23__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_CountingPotentials = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.CountingPotentials"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_CountingPotentials), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_CountingPotentials, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_CountingPotentials, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CountingPotentials, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Potential vector :math:`\\theta \\in R^{|{\\cal E}|}` associated with a hypergraph.\n\n    Acts as a dictionary::\n       >> print potentials[edge]\n    "), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_CountingPotentials, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_CountingPotentials, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_CountingPotentials, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pydecode_5hyper_CountingPotentials, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_CountingPotentials, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_SparseVectorPotentials __pyx_vtable_8pydecode_5hyper_SparseVectorPotentials;

static PyObject *__pyx_tp_new_8pydecode_5hyper_SparseVectorPotentials(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_SparseVectorPotentials;
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  p->kind = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_SparseVectorPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->hypergraph);
  Py_CLEAR(p->projection);
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_SparseVectorPotentials(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)o;
  if (p->hypergraph) {
    e = (*v)(((PyObject*)p->hypergraph), a); if (e) return e;
  }
  if (p->projection) {
    e = (*v)(((PyObject*)p->projection), a); if (e) return e;
  }
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_SparseVectorPotentials(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *p = (struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->hypergraph);
  p->hypergraph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->projection);
  p->projection = ((struct __pyx_obj_8pydecode_5hyper_Projection *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_SparseVectorPotentials(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_8pydecode_5hyper_22SparseVectorPotentials_kind(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_4kind_1__get__(o);
}

static PyObject *__pyx_getprop_8pydecode_5hyper_22SparseVectorPotentials_bias(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_4bias_1__get__(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_SparseVectorPotentials[] = {
  {__Pyx_NAMESTR("times"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_5times, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_4times)},
  {__Pyx_NAMESTR("clone"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_7clone, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_6clone)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_9project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_8project)},
  {__Pyx_NAMESTR("up_project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_11up_project, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_10up_project)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_13show, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_12show)},
  {__Pyx_NAMESTR("build"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_15build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_14build)},
  {__Pyx_NAMESTR("from_potentials"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_17from_potentials, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_16from_potentials)},
  {__Pyx_NAMESTR("from_vector"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_19from_vector, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_18from_vector)},
  {__Pyx_NAMESTR("from_map"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_21from_map, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_20from_map)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_25dot, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_22SparseVectorPotentials_24dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pydecode_5hyper_SparseVectorPotentials[] = {
  {(char *)"kind", __pyx_getprop_8pydecode_5hyper_22SparseVectorPotentials_kind, 0, 0, 0},
  {(char *)"bias", __pyx_getprop_8pydecode_5hyper_22SparseVectorPotentials_bias, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_SparseVectorPotentials = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_SparseVectorPotentials, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SparseVectorPotentials = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_22SparseVectorPotentials_23__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_SparseVectorPotentials = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.SparseVectorPotentials"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_SparseVectorPotentials, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_SparseVectorPotentials, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SparseVectorPotentials, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Potential vector :math:`\\theta \\in R^{|{\\cal E}|}` associated with a hypergraph.\n\n    Acts as a dictionary::\n       >> print potentials[edge]\n    "), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_SparseVectorPotentials, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_SparseVectorPotentials, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_SparseVectorPotentials, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pydecode_5hyper_SparseVectorPotentials, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_SparseVectorPotentials, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper__MinSparseVectorMarginals __pyx_vtable_8pydecode_5hyper__MinSparseVectorMarginals;

static PyObject *__pyx_tp_new_8pydecode_5hyper__MinSparseVectorMarginals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper__MinSparseVectorMarginals;
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__MinSparseVectorMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_25_MinSparseVectorMarginals_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper__MinSparseVectorMarginals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *)o;
  if (p->graph) {
    e = (*v)(((PyObject*)p->graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper__MinSparseVectorMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->graph);
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper__MinSparseVectorMarginals(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__MinSparseVectorMarginals[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__MinSparseVectorMarginals = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper__MinSparseVectorMarginals, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__MinSparseVectorMarginals = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_25_MinSparseVectorMarginals_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper__MinSparseVectorMarginals = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._MinSparseVectorMarginals"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__MinSparseVectorMarginals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__MinSparseVectorMarginals, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__MinSparseVectorMarginals, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("_MinSparseVectorMarginals()"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper__MinSparseVectorMarginals, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper__MinSparseVectorMarginals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__MinSparseVectorMarginals, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_25_MinSparseVectorMarginals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__MinSparseVectorMarginals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper__CountingW(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__CountingW(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__CountingW[] = {
  {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10_CountingW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10_CountingW_one)},
  {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10_CountingW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10_CountingW_2zero)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_8pydecode_5hyper__CountingW = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._CountingW"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__CountingW), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__CountingW, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__CountingW, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__CountingW, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper__BinaryVectorMarginals __pyx_vtable_8pydecode_5hyper__BinaryVectorMarginals;

static PyObject *__pyx_tp_new_8pydecode_5hyper__BinaryVectorMarginals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper__BinaryVectorMarginals;
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__BinaryVectorMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_22_BinaryVectorMarginals_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper__BinaryVectorMarginals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *)o;
  if (p->graph) {
    e = (*v)(((PyObject*)p->graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper__BinaryVectorMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *p = (struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->graph);
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper__BinaryVectorMarginals(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__BinaryVectorMarginals[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__BinaryVectorMarginals = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper__BinaryVectorMarginals, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__BinaryVectorMarginals = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_22_BinaryVectorMarginals_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper__BinaryVectorMarginals = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._BinaryVectorMarginals"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__BinaryVectorMarginals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__BinaryVectorMarginals, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__BinaryVectorMarginals, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("_BinaryVectorMarginals()"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper__BinaryVectorMarginals, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper__BinaryVectorMarginals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__BinaryVectorMarginals, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_22_BinaryVectorMarginals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__BinaryVectorMarginals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper__BoolW(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__BoolW(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__BoolW[] = {
  {__Pyx_NAMESTR("one"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6_BoolW_1one, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6_BoolW_one)},
  {__Pyx_NAMESTR("zero"), (PyCFunction)__pyx_pw_8pydecode_5hyper_6_BoolW_3zero, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_6_BoolW_2zero)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_8pydecode_5hyper__BoolW = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._BoolW"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__BoolW), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__BoolW, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__BoolW, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__BoolW, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper_LogViterbiChart(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)o);
  p->kind = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_LogViterbiChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *p = (struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_15LogViterbiChart_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_LogViterbiChart(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *p = (struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)o;
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_LogViterbiChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *p = (struct __pyx_obj_8pydecode_5hyper_LogViterbiChart *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_LogViterbiChart(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_LogViterbiChart[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_LogViterbiChart = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_LogViterbiChart, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LogViterbiChart = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_15LogViterbiChart_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_LogViterbiChart = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.LogViterbiChart"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_LogViterbiChart), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_LogViterbiChart, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_LogViterbiChart, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LogViterbiChart, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("LogViterbiChart(Hypergraph graph=None)"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_LogViterbiChart, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_LogViterbiChart, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_LogViterbiChart, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_15LogViterbiChart_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_LogViterbiChart, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper_Projection __pyx_vtable_8pydecode_5hyper_Projection;

static PyObject *__pyx_tp_new_8pydecode_5hyper_Projection(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_Projection *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_Projection *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper_Projection;
  p->small_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  p->big_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_8pydecode_5hyper_10Projection_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_Projection(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_Projection *p = (struct __pyx_obj_8pydecode_5hyper_Projection *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_10Projection_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->small_graph);
  Py_CLEAR(p->big_graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_Projection(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_Projection *p = (struct __pyx_obj_8pydecode_5hyper_Projection *)o;
  if (p->small_graph) {
    e = (*v)(((PyObject*)p->small_graph), a); if (e) return e;
  }
  if (p->big_graph) {
    e = (*v)(((PyObject*)p->big_graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_Projection(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_Projection *p = (struct __pyx_obj_8pydecode_5hyper_Projection *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->small_graph);
  p->small_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->big_graph);
  p->big_graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_Projection(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_Projection[] = {
  {__Pyx_NAMESTR("compose"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10Projection_3compose, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10Projection_2compose)},
  {__Pyx_NAMESTR("project"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10Projection_9project, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10Projection_8project)},
  {__Pyx_NAMESTR("small_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10Projection_11small_hypergraph, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10Projection_10small_hypergraph)},
  {__Pyx_NAMESTR("big_hypergraph"), (PyCFunction)__pyx_pw_8pydecode_5hyper_10Projection_13big_hypergraph, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_10Projection_12big_hypergraph)},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Projection = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_Projection, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Projection = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_10Projection_7__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_Projection = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.Projection"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_Projection), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_Projection, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Projection, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Projection, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_Projection, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_Projection, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_Projection, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_Projection, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_8pydecode_5hyper__BoolMarginals __pyx_vtable_8pydecode_5hyper__BoolMarginals;

static PyObject *__pyx_tp_new_8pydecode_5hyper__BoolMarginals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper__BoolMarginals *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pydecode_5hyper__BoolMarginals;
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper__BoolMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__BoolMarginals *p = (struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_14_BoolMarginals_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->graph);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper__BoolMarginals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper__BoolMarginals *p = (struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)o;
  if (p->graph) {
    e = (*v)(((PyObject*)p->graph), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper__BoolMarginals(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper__BoolMarginals *p = (struct __pyx_obj_8pydecode_5hyper__BoolMarginals *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->graph);
  p->graph = ((struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper__BoolMarginals(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper__BoolMarginals[] = {
  {__Pyx_NAMESTR("threshold"), (PyCFunction)__pyx_pw_8pydecode_5hyper_14_BoolMarginals_7threshold, METH_O, __Pyx_DOCSTR(__pyx_doc_8pydecode_5hyper_14_BoolMarginals_6threshold)},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence__BoolMarginals = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper__BoolMarginals, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping__BoolMarginals = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_14_BoolMarginals_5__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper__BoolMarginals = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper._BoolMarginals"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper__BoolMarginals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper__BoolMarginals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence__BoolMarginals, /*tp_as_sequence*/
  &__pyx_tp_as_mapping__BoolMarginals, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("_BoolMarginals()"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper__BoolMarginals, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper__BoolMarginals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper__BoolMarginals, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_14_BoolMarginals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper__BoolMarginals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_8pydecode_5hyper_SparseVectorChart(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)o);
  p->kind = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pydecode_5hyper_SparseVectorChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_8pydecode_5hyper_17SparseVectorChart_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->kind);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pydecode_5hyper_SparseVectorChart(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)o;
  if (p->kind) {
    e = (*v)(p->kind, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pydecode_5hyper_SparseVectorChart(PyObject *o) {
  struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *p = (struct __pyx_obj_8pydecode_5hyper_SparseVectorChart *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->kind);
  p->kind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_8pydecode_5hyper_SparseVectorChart(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_8pydecode_5hyper_SparseVectorChart[] = {
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_SparseVectorChart = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_8pydecode_5hyper_SparseVectorChart, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SparseVectorChart = {
  0, /*mp_length*/
  __pyx_pw_8pydecode_5hyper_17SparseVectorChart_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_8pydecode_5hyper_SparseVectorChart = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pydecode.hyper.SparseVectorChart"), /*tp_name*/
  sizeof(struct __pyx_obj_8pydecode_5hyper_SparseVectorChart), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pydecode_5hyper_SparseVectorChart, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_SparseVectorChart, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SparseVectorChart, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("SparseVectorChart(Hypergraph graph=None)"), /*tp_doc*/
  __pyx_tp_traverse_8pydecode_5hyper_SparseVectorChart, /*tp_traverse*/
  __pyx_tp_clear_8pydecode_5hyper_SparseVectorChart, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pydecode_5hyper_SparseVectorChart, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_8pydecode_5hyper_17SparseVectorChart_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pydecode_5hyper_SparseVectorChart, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    __Pyx_NAMESTR("hyper"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_kp_s_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 0, 1, 0},
  {&__pyx_n_s_101, __pyx_k_101, sizeof(__pyx_k_101), 0, 0, 1, 1},
  {&__pyx_n_s_106, __pyx_k_106, sizeof(__pyx_k_106), 0, 0, 1, 1},
  {&__pyx_n_s_109, __pyx_k_109, sizeof(__pyx_k_109), 0, 0, 1, 1},
  {&__pyx_kp_s_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 0, 1, 0},
  {&__pyx_n_s_112, __pyx_k_112, sizeof(__pyx_k_112), 0, 0, 1, 1},
  {&__pyx_n_s_115, __pyx_k_115, sizeof(__pyx_k_115), 0, 0, 1, 1},
  {&__pyx_kp_s_12, __pyx_k_12, sizeof(__pyx_k_12), 0, 0, 1, 0},
  {&__pyx_n_s_120, __pyx_k_120, sizeof(__pyx_k_120), 0, 0, 1, 1},
  {&__pyx_n_s_123, __pyx_k_123, sizeof(__pyx_k_123), 0, 0, 1, 1},
  {&__pyx_n_s_126, __pyx_k_126, sizeof(__pyx_k_126), 0, 0, 1, 1},
  {&__pyx_n_s_129, __pyx_k_129, sizeof(__pyx_k_129), 0, 0, 1, 1},
  {&__pyx_kp_s_13, __pyx_k_13, sizeof(__pyx_k_13), 0, 0, 1, 0},
  {&__pyx_n_s_134, __pyx_k_134, sizeof(__pyx_k_134), 0, 0, 1, 1},
  {&__pyx_n_s_137, __pyx_k_137, sizeof(__pyx_k_137), 0, 0, 1, 1},
  {&__pyx_kp_s_14, __pyx_k_14, sizeof(__pyx_k_14), 0, 0, 1, 0},
  {&__pyx_n_s_140, __pyx_k_140, sizeof(__pyx_k_140), 0, 0, 1, 1},
  {&__pyx_n_s_143, __pyx_k_143, sizeof(__pyx_k_143), 0, 0, 1, 1},
  {&__pyx_n_s_148, __pyx_k_148, sizeof(__pyx_k_148), 0, 0, 1, 1},
  {&__pyx_n_s_151, __pyx_k_151, sizeof(__pyx_k_151), 0, 0, 1, 1},
  {&__pyx_n_s_154, __pyx_k_154, sizeof(__pyx_k_154), 0, 0, 1, 1},
  {&__pyx_n_s_157, __pyx_k_157, sizeof(__pyx_k_157), 0, 0, 1, 1},
  {&__pyx_kp_s_16, __pyx_k_16, sizeof(__pyx_k_16), 0, 0, 1, 0},
  {&__pyx_n_s_162, __pyx_k_162, sizeof(__pyx_k_162), 0, 0, 1, 1},
  {&__pyx_n_s_165, __pyx_k_165, sizeof(__pyx_k_165), 0, 0, 1, 1},
  {&__pyx_n_s_168, __pyx_k_168, sizeof(__pyx_k_168), 0, 0, 1, 1},
  {&__pyx_n_s_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 0, 1, 1},
  {&__pyx_n_s_171, __pyx_k_171, sizeof(__pyx_k_171), 0, 0, 1, 1},
  {&__pyx_kp_s_182, __pyx_k_182, sizeof(__pyx_k_182), 0, 0, 1, 0},
  {&__pyx_kp_s_183, __pyx_k_183, sizeof(__pyx_k_183), 0, 0, 1, 0},
  {&__pyx_n_s_190, __pyx_k_190, sizeof(__pyx_k_190), 0, 0, 1, 1},
  {&__pyx_n_s_193, __pyx_k_193, sizeof(__pyx_k_193), 0, 0, 1, 1},
  {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
  {&__pyx_n_s_21, __pyx_k_21, sizeof(__pyx_k_21), 0, 0, 1, 1},
  {&__pyx_n_s_24, __pyx_k_24, sizeof(__pyx_k_24), 0, 0, 1, 1},
  {&__pyx_n_s_28, __pyx_k_28, sizeof(__pyx_k_28), 0, 0, 1, 1},
  {&__pyx_n_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 1},
  {&__pyx_n_s_31, __pyx_k_31, sizeof(__pyx_k_31), 0, 0, 1, 1},
  {&__pyx_n_s_32, __pyx_k_32, sizeof(__pyx_k_32), 0, 0, 1, 1},
  {&__pyx_n_s_35, __pyx_k_35, sizeof(__pyx_k_35), 0, 0, 1, 1},
  {&__pyx_n_s_38, __pyx_k_38, sizeof(__pyx_k_38), 0, 0, 1, 1},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_n_s_43, __pyx_k_43, sizeof(__pyx_k_43), 0, 0, 1, 1},
  {&__pyx_n_s_46, __pyx_k_46, sizeof(__pyx_k_46), 0, 0, 1, 1},
  {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
  {&__pyx_n_s_50, __pyx_k_50, sizeof(__pyx_k_50), 0, 0, 1, 1},
  {&__pyx_n_s_53, __pyx_k_53, sizeof(__pyx_k_53), 0, 0, 1, 1},
  {&__pyx_n_s_56, __pyx_k_56, sizeof(__pyx_k_56), 0, 0, 1, 1},
  {&__pyx_n_s_59, __pyx_k_59, sizeof(__pyx_k_59), 0, 0, 1, 1},
  {&__pyx_n_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 1},
  {&__pyx_n_s_64, __pyx_k_64, sizeof(__pyx_k_64), 0, 0, 1, 1},
  {&__pyx_n_s_67, __pyx_k_67, sizeof(__pyx_k_67), 0, 0, 1, 1},
  {&__pyx_kp_s_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 0, 1, 0},
  {&__pyx_n_s_71, __pyx_k_71, sizeof(__pyx_k_71), 0, 0, 1, 1},
  {&__pyx_n_s_74, __pyx_k_74, sizeof(__pyx_k_74), 0, 0, 1, 1},
  {&__pyx_n_s_77, __pyx_k_77, sizeof(__pyx_k_77), 0, 0, 1, 1},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_n_s_80, __pyx_k_80, sizeof(__pyx_k_80), 0, 0, 1, 1},
  {&__pyx_n_s_85, __pyx_k_85, sizeof(__pyx_k_85), 0, 0, 1, 1},
  {&__pyx_n_s_88, __pyx_k_88, sizeof(__pyx_k_88), 0, 0, 1, 1},
  {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
  {&__pyx_n_s_92, __pyx_k_92, sizeof(__pyx_k_92), 0, 0, 1, 1},
  {&__pyx_n_s_95, __pyx_k_95, sizeof(__pyx_k_95), 0, 0, 1, 1},
  {&__pyx_n_s_98, __pyx_k_98, sizeof(__pyx_k_98), 0, 0, 1, 1},
  {&__pyx_n_s__BinaryVector, __pyx_k__BinaryVector, sizeof(__pyx_k__BinaryVector), 0, 0, 1, 1},
  {&__pyx_n_s__Bool, __pyx_k__Bool, sizeof(__pyx_k__Bool), 0, 0, 1, 1},
  {&__pyx_n_s__Chart, __pyx_k__Chart, sizeof(__pyx_k__Chart), 0, 0, 1, 1},
  {&__pyx_n_s__Counting, __pyx_k__Counting, sizeof(__pyx_k__Counting), 0, 0, 1, 1},
  {&__pyx_n_s__Inside, __pyx_k__Inside, sizeof(__pyx_k__Inside), 0, 0, 1, 1},
  {&__pyx_n_s__LogViterbi, __pyx_k__LogViterbi, sizeof(__pyx_k__LogViterbi), 0, 0, 1, 1},
  {&__pyx_n_s__Marginals, __pyx_k__Marginals, sizeof(__pyx_k__Marginals), 0, 0, 1, 1},
  {&__pyx_n_s__MaxSparseVector, __pyx_k__MaxSparseVector, sizeof(__pyx_k__MaxSparseVector), 0, 0, 1, 1},
  {&__pyx_n_s__MinSparseVector, __pyx_k__MinSparseVector, sizeof(__pyx_k__MinSparseVector), 0, 0, 1, 1},
  {&__pyx_n_s__Potentials, __pyx_k__Potentials, sizeof(__pyx_k__Potentials), 0, 0, 1, 1},
  {&__pyx_n_s__SparseVector, __pyx_k__SparseVector, sizeof(__pyx_k__SparseVector), 0, 0, 1, 1},
  {&__pyx_n_s__Viterbi, __pyx_k__Viterbi, sizeof(__pyx_k__Viterbi), 0, 0, 1, 1},
  {&__pyx_n_s____class__, __pyx_k____class__, sizeof(__pyx_k____class__), 0, 0, 1, 1},
  {&__pyx_n_s____import__, __pyx_k____import__, sizeof(__pyx_k____import__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____metaclass__, __pyx_k____metaclass__, sizeof(__pyx_k____metaclass__), 0, 0, 1, 1},
  {&__pyx_n_s____module__, __pyx_k____module__, sizeof(__pyx_k____module__), 0, 0, 1, 1},
  {&__pyx_n_s____pyx_vtable__, __pyx_k____pyx_vtable__, sizeof(__pyx_k____pyx_vtable__), 0, 0, 1, 1},
  {&__pyx_n_s____qualname__, __pyx_k____qualname__, sizeof(__pyx_k____qualname__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s__best_path, __pyx_k__best_path, sizeof(__pyx_k__best_path), 0, 0, 1, 1},
  {&__pyx_n_s__bias, __pyx_k__bias, sizeof(__pyx_k__bias), 0, 0, 1, 1},
  {&__pyx_n_s__big_hypergraph, __pyx_k__big_hypergraph, sizeof(__pyx_k__big_hypergraph), 0, 0, 1, 1},
  {&__pyx_n_s__bool_potentials, __pyx_k__bool_potentials, sizeof(__pyx_k__bool_potentials), 0, 0, 1, 1},
  {&__pyx_n_s__chart, __pyx_k__chart, sizeof(__pyx_k__chart), 0, 0, 1, 1},
  {&__pyx_n_s__compute_marginals, __pyx_k__compute_marginals, sizeof(__pyx_k__compute_marginals), 0, 0, 1, 1},
  {&__pyx_n_s__count_potentials, __pyx_k__count_potentials, sizeof(__pyx_k__count_potentials), 0, 0, 1, 1},
  {&__pyx_n_s__edges, __pyx_k__edges, sizeof(__pyx_k__edges), 0, 0, 1, 1},
  {&__pyx_n_s__enumerate, __pyx_k__enumerate, sizeof(__pyx_k__enumerate), 0, 0, 1, 1},
  {&__pyx_n_s__filt, __pyx_k__filt, sizeof(__pyx_k__filt), 0, 0, 1, 1},
  {&__pyx_n_s__fn, __pyx_k__fn, sizeof(__pyx_k__fn), 0, 0, 1, 1},
  {&__pyx_n_s__goal, __pyx_k__goal, sizeof(__pyx_k__goal), 0, 0, 1, 1},
  {&__pyx_n_s__graph, __pyx_k__graph, sizeof(__pyx_k__graph), 0, 0, 1, 1},
  {&__pyx_n_s__hypergraph, __pyx_k__hypergraph, sizeof(__pyx_k__hypergraph), 0, 0, 1, 1},
  {&__pyx_n_s__i, __pyx_k__i, sizeof(__pyx_k__i), 0, 0, 1, 1},
  {&__pyx_n_s__id, __pyx_k__id, sizeof(__pyx_k__id), 0, 0, 1, 1},
  {&__pyx_n_s__in_map, __pyx_k__in_map, sizeof(__pyx_k__in_map), 0, 0, 1, 1},
  {&__pyx_n_s__in_vec, __pyx_k__in_vec, sizeof(__pyx_k__in_vec), 0, 0, 1, 1},
  {&__pyx_n_s__inside, __pyx_k__inside, sizeof(__pyx_k__inside), 0, 0, 1, 1},
  {&__pyx_n_s__inside_chart, __pyx_k__inside_chart, sizeof(__pyx_k__inside_chart), 0, 0, 1, 1},
  {&__pyx_n_s__inside_values, __pyx_k__inside_values, sizeof(__pyx_k__inside_values), 0, 0, 1, 1},
  {&__pyx_n_s__iteritems, __pyx_k__iteritems, sizeof(__pyx_k__iteritems), 0, 0, 1, 1},
  {&__pyx_n_s__join, __pyx_k__join, sizeof(__pyx_k__join), 0, 0, 1, 1},
  {&__pyx_n_s__kind, __pyx_k__kind, sizeof(__pyx_k__kind), 0, 0, 1, 1},
  {&__pyx_n_s__label, __pyx_k__label, sizeof(__pyx_k__label), 0, 0, 1, 1},
  {&__pyx_n_s__lhs, __pyx_k__lhs, sizeof(__pyx_k__lhs), 0, 0, 1, 1},
  {&__pyx_n_s__limit, __pyx_k__limit, sizeof(__pyx_k__limit), 0, 0, 1, 1},
  {&__pyx_n_s__lower_limit, __pyx_k__lower_limit, sizeof(__pyx_k__lower_limit), 0, 0, 1, 1},
  {&__pyx_n_s__marginals, __pyx_k__marginals, sizeof(__pyx_k__marginals), 0, 0, 1, 1},
  {&__pyx_n_s__nodes, __pyx_k__nodes, sizeof(__pyx_k__nodes), 0, 0, 1, 1},
  {&__pyx_n_s__one, __pyx_k__one, sizeof(__pyx_k__one), 0, 0, 1, 1},
  {&__pyx_n_s__other, __pyx_k__other, sizeof(__pyx_k__other), 0, 0, 1, 1},
  {&__pyx_n_s__out_chart, __pyx_k__out_chart, sizeof(__pyx_k__out_chart), 0, 0, 1, 1},
  {&__pyx_n_s__outside, __pyx_k__outside, sizeof(__pyx_k__outside), 0, 0, 1, 1},
  {&__pyx_n_s__outside_values, __pyx_k__outside_values, sizeof(__pyx_k__outside_values), 0, 0, 1, 1},
  {&__pyx_n_s__pairwise_dot, __pyx_k__pairwise_dot, sizeof(__pyx_k__pairwise_dot), 0, 0, 1, 1},
  {&__pyx_n_s__path, __pyx_k__path, sizeof(__pyx_k__path), 0, 0, 1, 1},
  {&__pyx_n_s__potentials, __pyx_k__potentials, sizeof(__pyx_k__potentials), 0, 0, 1, 1},
  {&__pyx_n_s__projection, __pyx_k__projection, sizeof(__pyx_k__projection), 0, 0, 1, 1},
  {&__pyx_n_s__prune_hypergraph, __pyx_k__prune_hypergraph, sizeof(__pyx_k__prune_hypergraph), 0, 0, 1, 1},
  {&__pyx_n_s__py_hypergraph, __pyx_k__py_hypergraph, sizeof(__pyx_k__py_hypergraph), 0, 0, 1, 1},
  {&__pyx_n_s__range, __pyx_k__range, sizeof(__pyx_k__range), 0, 0, 1, 1},
  {&__pyx_n_s__reverse, __pyx_k__reverse, sizeof(__pyx_k__reverse), 0, 0, 1, 1},
  {&__pyx_n_s__rhs, __pyx_k__rhs, sizeof(__pyx_k__rhs), 0, 0, 1, 1},
  {&__pyx_n_s__rvec, __pyx_k__rvec, sizeof(__pyx_k__rvec), 0, 0, 1, 1},
  {&__pyx_n_s__small_hypergraph, __pyx_k__small_hypergraph, sizeof(__pyx_k__small_hypergraph), 0, 0, 1, 1},
  {&__pyx_n_s__staticmethod, __pyx_k__staticmethod, sizeof(__pyx_k__staticmethod), 0, 0, 1, 1},
  {&__pyx_n_s__thres, __pyx_k__thres, sizeof(__pyx_k__thres), 0, 0, 1, 1},
  {&__pyx_n_s__threshold, __pyx_k__threshold, sizeof(__pyx_k__threshold), 0, 0, 1, 1},
  {&__pyx_n_s__upper_limit, __pyx_k__upper_limit, sizeof(__pyx_k__upper_limit), 0, 0, 1, 1},
  {&__pyx_n_s__used_chart, __pyx_k__used_chart, sizeof(__pyx_k__used_chart), 0, 0, 1, 1},
  {&__pyx_n_s__vec, __pyx_k__vec, sizeof(__pyx_k__vec), 0, 0, 1, 1},
  {&__pyx_n_s__viterbi, __pyx_k__viterbi, sizeof(__pyx_k__viterbi), 0, 0, 1, 1},
  {&__pyx_n_s__weights, __pyx_k__weights, sizeof(__pyx_k__weights), 0, 0, 1, 1},
  {&__pyx_n_s__zero, __pyx_k__zero, sizeof(__pyx_k__zero), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s__staticmethod); if (!__pyx_builtin_staticmethod) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s__enumerate); if (!__pyx_builtin_enumerate) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s__range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "pydecode/hyper.pyx":186
 * cdef class _ViterbiW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _ViterbiW_from_cpp(Viterbi_one())
 * 
 */
  __pyx_k_codeobj_15 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__one, 186, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":190
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _ViterbiW_from_cpp(Viterbi_zero())
 * 
 */
  __pyx_k_codeobj_18 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__zero, 190, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":295
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                ViterbiPotentials potentials):
 *         cdef ViterbiChart chart = ViterbiChart()
 */
  __pyx_k_tuple_19 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_19);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_19));
  __pyx_k_codeobj_20 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_19, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 295, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":302
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 ViterbiPotentials potentials,
 *                 ViterbiChart inside_chart):
 */
  __pyx_k_tuple_22 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart), ((PyObject *)__pyx_n_s__out_chart)); if (unlikely(!__pyx_k_tuple_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_22);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_22));
  __pyx_k_codeobj_23 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 302, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":313
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 ViterbiPotentials potentials,
 *                 ViterbiChart chart=None):
 */
  __pyx_k_tuple_25 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart), ((PyObject *)__pyx_n_s__used_chart), ((PyObject *)__pyx_n_s__path)); if (unlikely(!__pyx_k_tuple_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_25);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_25));
  __pyx_k_codeobj_26 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_25, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__viterbi, 313, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_tuple_27 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_k_tuple_27)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_27);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_27));

  /* "pydecode/hyper.pyx":330
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   ViterbiPotentials potentials,
 *                                   CountingPotentials count_potentials,
 */
  __pyx_k_tuple_29 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__count_potentials), ((PyObject *)__pyx_n_s__limit), ((PyObject *)__pyx_n_s__path)); if (unlikely(!__pyx_k_tuple_29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_29);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_29));
  __pyx_k_codeobj_30 = (PyObject*)__Pyx_PyCode_New(4, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_29, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s_31, 330, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":344
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           ViterbiPotentials potentials):
 *         cdef const CViterbiMarginals *marginals = \
 */
  __pyx_k_tuple_33 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__marginals)); if (unlikely(!__pyx_k_tuple_33)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_33);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_33));
  __pyx_k_codeobj_34 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_33, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 344, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":352
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          ViterbiPotentials potentials,
 *                          threshold):
 */
  __pyx_k_tuple_36 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__threshold), ((PyObject *)__pyx_n_s__marginals), ((PyObject *)__pyx_n_s__bool_potentials)); if (unlikely(!__pyx_k_tuple_36)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_36);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_36));
  __pyx_k_codeobj_37 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_36, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 352, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_37)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":517
 * cdef class _LogViterbiW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _LogViterbiW_from_cpp(LogViterbi_one())
 * 
 */
  __pyx_k_codeobj_39 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__one, 517, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_39)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":521
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _LogViterbiW_from_cpp(LogViterbi_zero())
 * 
 */
  __pyx_k_codeobj_40 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__zero, 521, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_40)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":626
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                LogViterbiPotentials potentials):
 *         cdef LogViterbiChart chart = LogViterbiChart()
 */
  __pyx_k_tuple_41 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_41)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_41);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_41));
  __pyx_k_codeobj_42 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 626, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":633
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 LogViterbiPotentials potentials,
 *                 LogViterbiChart inside_chart):
 */
  __pyx_k_tuple_44 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart), ((PyObject *)__pyx_n_s__out_chart)); if (unlikely(!__pyx_k_tuple_44)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_44);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_44));
  __pyx_k_codeobj_45 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 633, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_45)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":644
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 LogViterbiPotentials potentials,
 *                 LogViterbiChart chart=None):
 */
  __pyx_k_tuple_47 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart), ((PyObject *)__pyx_n_s__used_chart), ((PyObject *)__pyx_n_s__path)); if (unlikely(!__pyx_k_tuple_47)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_47);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_47));
  __pyx_k_codeobj_48 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__viterbi, 644, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_48)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_tuple_49 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_k_tuple_49)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_49);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_49));

  /* "pydecode/hyper.pyx":661
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   LogViterbiPotentials potentials,
 *                                   CountingPotentials count_potentials,
 */
  __pyx_k_tuple_51 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__count_potentials), ((PyObject *)__pyx_n_s__limit), ((PyObject *)__pyx_n_s__path)); if (unlikely(!__pyx_k_tuple_51)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_51);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_51));
  __pyx_k_codeobj_52 = (PyObject*)__Pyx_PyCode_New(4, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_51, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s_31, 661, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_52)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":675
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           LogViterbiPotentials potentials):
 *         cdef const CLogViterbiMarginals *marginals = \
 */
  __pyx_k_tuple_54 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__marginals)); if (unlikely(!__pyx_k_tuple_54)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_54);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_54));
  __pyx_k_codeobj_55 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 675, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_55)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":683
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          LogViterbiPotentials potentials,
 *                          threshold):
 */
  __pyx_k_tuple_57 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__threshold), ((PyObject *)__pyx_n_s__marginals), ((PyObject *)__pyx_n_s__bool_potentials)); if (unlikely(!__pyx_k_tuple_57)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_57);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_57));
  __pyx_k_codeobj_58 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_57, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 683, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_58)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":848
 * cdef class _InsideW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _InsideW_from_cpp(Inside_one())
 * 
 */
  __pyx_k_codeobj_60 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__one, 848, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_60)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":852
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _InsideW_from_cpp(Inside_zero())
 * 
 */
  __pyx_k_codeobj_61 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__zero, 852, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_61)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":957
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                InsidePotentials potentials):
 *         cdef InsideChart chart = InsideChart()
 */
  __pyx_k_tuple_62 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_62)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_62);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_62));
  __pyx_k_codeobj_63 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 957, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_63)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":964
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 InsidePotentials potentials,
 *                 InsideChart inside_chart):
 */
  __pyx_k_tuple_65 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart), ((PyObject *)__pyx_n_s__out_chart)); if (unlikely(!__pyx_k_tuple_65)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_65);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_65));
  __pyx_k_codeobj_66 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_65, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 964, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_66)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":975
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 InsidePotentials potentials,
 *                 InsideChart chart=None):
 */
  __pyx_k_tuple_68 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart), ((PyObject *)__pyx_n_s__used_chart), ((PyObject *)__pyx_n_s__path)); if (unlikely(!__pyx_k_tuple_68)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_68);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_68));
  __pyx_k_codeobj_69 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__viterbi, 975, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_69)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_tuple_70 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_k_tuple_70)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_70);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_70));

  /* "pydecode/hyper.pyx":992
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   InsidePotentials potentials,
 *                                   CountingPotentials count_potentials,
 */
  __pyx_k_tuple_72 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__count_potentials), ((PyObject *)__pyx_n_s__limit), ((PyObject *)__pyx_n_s__path)); if (unlikely(!__pyx_k_tuple_72)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_72);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_72));
  __pyx_k_codeobj_73 = (PyObject*)__Pyx_PyCode_New(4, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s_31, 992, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_73)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1006
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           InsidePotentials potentials):
 *         cdef const CInsideMarginals *marginals = \
 */
  __pyx_k_tuple_75 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__marginals)); if (unlikely(!__pyx_k_tuple_75)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_75);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_75));
  __pyx_k_codeobj_76 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_75, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 1006, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_76)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1014
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          InsidePotentials potentials,
 *                          threshold):
 */
  __pyx_k_tuple_78 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__threshold), ((PyObject *)__pyx_n_s__marginals), ((PyObject *)__pyx_n_s__bool_potentials)); if (unlikely(!__pyx_k_tuple_78)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_78);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_78));
  __pyx_k_codeobj_79 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_78, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 1014, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_79)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1179
 * cdef class _BoolW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _BoolW_from_cpp(Bool_one())
 * 
 */
  __pyx_k_codeobj_81 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__one, 1179, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_81)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1183
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _BoolW_from_cpp(Bool_zero())
 * 
 */
  __pyx_k_codeobj_82 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__zero, 1183, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_82)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1288
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                BoolPotentials potentials):
 *         cdef BoolChart chart = BoolChart()
 */
  __pyx_k_tuple_83 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_83)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_83);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_83));
  __pyx_k_codeobj_84 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_83, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 1288, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_84)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1295
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 BoolPotentials potentials,
 *                 BoolChart inside_chart):
 */
  __pyx_k_tuple_86 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart), ((PyObject *)__pyx_n_s__out_chart)); if (unlikely(!__pyx_k_tuple_86)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_86);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_86));
  __pyx_k_codeobj_87 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_86, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 1295, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_87)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1306
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 BoolPotentials potentials,
 *                 BoolChart chart=None):
 */
  __pyx_k_tuple_89 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart), ((PyObject *)__pyx_n_s__used_chart), ((PyObject *)__pyx_n_s__path)); if (unlikely(!__pyx_k_tuple_89)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_89);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_89));
  __pyx_k_codeobj_90 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_89, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__viterbi, 1306, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_90)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_tuple_91 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_k_tuple_91)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_91);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_91));

  /* "pydecode/hyper.pyx":1323
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   BoolPotentials potentials,
 *                                   CountingPotentials count_potentials,
 */
  __pyx_k_tuple_93 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__count_potentials), ((PyObject *)__pyx_n_s__limit), ((PyObject *)__pyx_n_s__path)); if (unlikely(!__pyx_k_tuple_93)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_93);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_93));
  __pyx_k_codeobj_94 = (PyObject*)__Pyx_PyCode_New(4, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_93, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s_31, 1323, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_94)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1337
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           BoolPotentials potentials):
 *         cdef const CBoolMarginals *marginals = \
 */
  __pyx_k_tuple_96 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__marginals)); if (unlikely(!__pyx_k_tuple_96)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_96);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_96));
  __pyx_k_codeobj_97 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_96, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 1337, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_97)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1345
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          BoolPotentials potentials,
 *                          threshold):
 */
  __pyx_k_tuple_99 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__threshold), ((PyObject *)__pyx_n_s__marginals), ((PyObject *)__pyx_n_s__bool_potentials)); if (unlikely(!__pyx_k_tuple_99)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_99);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_99));
  __pyx_k_codeobj_100 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_99, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 1345, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_100)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1510
 * cdef class _SparseVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _SparseVectorW_from_cpp(SparseVector_one())
 * 
 */
  __pyx_k_codeobj_102 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__one, 1510, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_102)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1514
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _SparseVectorW_from_cpp(SparseVector_zero())
 * 
 */
  __pyx_k_codeobj_103 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__zero, 1514, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_103)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1616
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                SparseVectorPotentials potentials):
 *         cdef SparseVectorChart chart = SparseVectorChart()
 */
  __pyx_k_tuple_104 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_104)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_104);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_104));
  __pyx_k_codeobj_105 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_104, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 1616, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_105)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1623
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 SparseVectorPotentials potentials,
 *                 SparseVectorChart inside_chart):
 */
  __pyx_k_tuple_107 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart), ((PyObject *)__pyx_n_s__out_chart)); if (unlikely(!__pyx_k_tuple_107)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_107);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_107));
  __pyx_k_codeobj_108 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_107, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 1623, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_108)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1635
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           SparseVectorPotentials potentials):
 *         cdef const CSparseVectorMarginals *marginals = \
 */
  __pyx_k_tuple_110 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__marginals)); if (unlikely(!__pyx_k_tuple_110)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_110);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_110));
  __pyx_k_codeobj_111 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_110, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 1635, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_111)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1643
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          SparseVectorPotentials potentials,
 *                          threshold):
 */
  __pyx_k_tuple_113 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__threshold), ((PyObject *)__pyx_n_s__marginals), ((PyObject *)__pyx_n_s__bool_potentials)); if (unlikely(!__pyx_k_tuple_113)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_113);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_113));
  __pyx_k_codeobj_114 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_113, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 1643, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_114)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1808
 * cdef class _MinSparseVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_one())
 * 
 */
  __pyx_k_codeobj_116 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__one, 1808, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_116)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1812
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_zero())
 * 
 */
  __pyx_k_codeobj_117 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__zero, 1812, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_117)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1914
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                MinSparseVectorPotentials potentials):
 *         cdef MinSparseVectorChart chart = MinSparseVectorChart()
 */
  __pyx_k_tuple_118 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_118)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_118);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_118));
  __pyx_k_codeobj_119 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_118, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 1914, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_119)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1921
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 MinSparseVectorPotentials potentials,
 *                 MinSparseVectorChart inside_chart):
 */
  __pyx_k_tuple_121 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart), ((PyObject *)__pyx_n_s__out_chart)); if (unlikely(!__pyx_k_tuple_121)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_121);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_121));
  __pyx_k_codeobj_122 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_121, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 1921, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_122)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1933
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           MinSparseVectorPotentials potentials):
 *         cdef const CMinSparseVectorMarginals *marginals = \
 */
  __pyx_k_tuple_124 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__marginals)); if (unlikely(!__pyx_k_tuple_124)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_124);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_124));
  __pyx_k_codeobj_125 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_124, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 1933, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_125)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1941
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          MinSparseVectorPotentials potentials,
 *                          threshold):
 */
  __pyx_k_tuple_127 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__threshold), ((PyObject *)__pyx_n_s__marginals), ((PyObject *)__pyx_n_s__bool_potentials)); if (unlikely(!__pyx_k_tuple_127)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_127);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_127));
  __pyx_k_codeobj_128 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_127, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 1941, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_128)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2106
 * cdef class _MaxSparseVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_one())
 * 
 */
  __pyx_k_codeobj_130 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__one, 2106, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_130)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2110
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_zero())
 * 
 */
  __pyx_k_codeobj_131 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__zero, 2110, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_131)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2212
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                MaxSparseVectorPotentials potentials):
 *         cdef MaxSparseVectorChart chart = MaxSparseVectorChart()
 */
  __pyx_k_tuple_132 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_132)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_132);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_132));
  __pyx_k_codeobj_133 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_132, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 2212, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_133)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2219
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 MaxSparseVectorPotentials potentials,
 *                 MaxSparseVectorChart inside_chart):
 */
  __pyx_k_tuple_135 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart), ((PyObject *)__pyx_n_s__out_chart)); if (unlikely(!__pyx_k_tuple_135)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_135);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_135));
  __pyx_k_codeobj_136 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_135, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 2219, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_136)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2231
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           MaxSparseVectorPotentials potentials):
 *         cdef const CMaxSparseVectorMarginals *marginals = \
 */
  __pyx_k_tuple_138 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__marginals)); if (unlikely(!__pyx_k_tuple_138)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_138);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_138));
  __pyx_k_codeobj_139 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_138, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 2231, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_139)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2239
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          MaxSparseVectorPotentials potentials,
 *                          threshold):
 */
  __pyx_k_tuple_141 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__threshold), ((PyObject *)__pyx_n_s__marginals), ((PyObject *)__pyx_n_s__bool_potentials)); if (unlikely(!__pyx_k_tuple_141)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_141);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_141));
  __pyx_k_codeobj_142 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_141, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 2239, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_142)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2404
 * cdef class _BinaryVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _BinaryVectorW_from_cpp(BinaryVector_one())
 * 
 */
  __pyx_k_codeobj_144 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__one, 2404, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_144)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2408
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _BinaryVectorW_from_cpp(BinaryVector_zero())
 * 
 */
  __pyx_k_codeobj_145 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__zero, 2408, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_145)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2510
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                BinaryVectorPotentials potentials):
 *         cdef BinaryVectorChart chart = BinaryVectorChart()
 */
  __pyx_k_tuple_146 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_146)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_146);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_146));
  __pyx_k_codeobj_147 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_146, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 2510, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_147)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2517
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 BinaryVectorPotentials potentials,
 *                 BinaryVectorChart inside_chart):
 */
  __pyx_k_tuple_149 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart), ((PyObject *)__pyx_n_s__out_chart)); if (unlikely(!__pyx_k_tuple_149)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_149);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_149));
  __pyx_k_codeobj_150 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_149, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 2517, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_150)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2529
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           BinaryVectorPotentials potentials):
 *         cdef const CBinaryVectorMarginals *marginals = \
 */
  __pyx_k_tuple_152 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__marginals)); if (unlikely(!__pyx_k_tuple_152)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_152);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_152));
  __pyx_k_codeobj_153 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_152, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 2529, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_153)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2537
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          BinaryVectorPotentials potentials,
 *                          threshold):
 */
  __pyx_k_tuple_155 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__threshold), ((PyObject *)__pyx_n_s__marginals), ((PyObject *)__pyx_n_s__bool_potentials)); if (unlikely(!__pyx_k_tuple_155)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_155);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_155));
  __pyx_k_codeobj_156 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_155, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 2537, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_156)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2702
 * cdef class _CountingW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _CountingW_from_cpp(Counting_one())
 * 
 */
  __pyx_k_codeobj_158 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__one, 2702, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_158)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2706
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _CountingW_from_cpp(Counting_zero())
 * 
 */
  __pyx_k_codeobj_159 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__zero, 2706, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_159)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2808
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                CountingPotentials potentials):
 *         cdef CountingChart chart = CountingChart()
 */
  __pyx_k_tuple_160 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_160)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_160);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_160));
  __pyx_k_codeobj_161 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_160, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 2808, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_161)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2815
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 CountingPotentials potentials,
 *                 CountingChart inside_chart):
 */
  __pyx_k_tuple_163 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart), ((PyObject *)__pyx_n_s__out_chart)); if (unlikely(!__pyx_k_tuple_163)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_163);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_163));
  __pyx_k_codeobj_164 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_163, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 2815, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_164)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2827
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           CountingPotentials potentials):
 *         cdef const CCountingMarginals *marginals = \
 */
  __pyx_k_tuple_166 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__marginals)); if (unlikely(!__pyx_k_tuple_166)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_166);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_166));
  __pyx_k_codeobj_167 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_166, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 2827, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_167)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2835
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          CountingPotentials potentials,
 *                          threshold):
 */
  __pyx_k_tuple_169 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__threshold), ((PyObject *)__pyx_n_s__marginals), ((PyObject *)__pyx_n_s__bool_potentials)); if (unlikely(!__pyx_k_tuple_169)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_169);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_169));
  __pyx_k_codeobj_170 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_169, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 2835, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_170)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2844
 * 
 * 
 * def inside(Hypergraph graph, potentials):             # <<<<<<<<<<<<<<
 *     r"""
 *     inside(Hypergraph graph, Potentials potentials):
 */
  __pyx_k_tuple_172 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials)); if (unlikely(!__pyx_k_tuple_172)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_172);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_172));
  __pyx_k_codeobj_173 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_172, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__inside, 2844, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_173)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2868
 *     return potentials.kind.inside(graph, potentials)
 * 
 * def outside(Hypergraph graph, potentials, inside_chart):             # <<<<<<<<<<<<<<
 *     r"""
 *     outside(Hypergraph graph, Potentials potentials, Chart inside_chart)
 */
  __pyx_k_tuple_174 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__inside_chart)); if (unlikely(!__pyx_k_tuple_174)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_174);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_174));
  __pyx_k_codeobj_175 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_174, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__outside, 2868, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_175)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2898
 *     return potentials.kind.outside(graph, potentials, inside_chart)
 * 
 * def best_path(Hypergraph graph, potentials, chart=None):             # <<<<<<<<<<<<<<
 *     r"""
 *     best_path(Hypergraph graph, Potentials potentials):
 */
  __pyx_k_tuple_176 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__chart)); if (unlikely(!__pyx_k_tuple_176)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_176);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_176));
  __pyx_k_codeobj_177 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_176, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__best_path, 2898, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_177)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2921
 *     return potentials.kind.viterbi(graph, potentials, chart)
 * 
 * def prune_hypergraph(Hypergraph graph, potentials, thres):             # <<<<<<<<<<<<<<
 *     r"""
 *     prune_hypergraph(Hypergraph graph, potentials, thres)
 */
  __pyx_k_tuple_178 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__thres)); if (unlikely(!__pyx_k_tuple_178)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_178);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_178));
  __pyx_k_codeobj_179 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_178, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__prune_hypergraph, 2921, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_179)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2943
 *     return potentials.kind.prune_hypergraph(graph, potentials, thres)
 * 
 * def compute_marginals(Hypergraph graph, potentials):             # <<<<<<<<<<<<<<
 *     r"""
 *     compute_marginals(Hypergraph graph, Potentials potentials):
 */
  __pyx_k_tuple_180 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials)); if (unlikely(!__pyx_k_tuple_180)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_180);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_180));
  __pyx_k_codeobj_181 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_180, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__compute_marginals, 2943, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_181)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2992
 * ####### Methods that use specific potential ########
 * 
 * def pairwise_dot(SparseVectorPotentials potentials, vec, LogViterbiPotentials weights):             # <<<<<<<<<<<<<<
 *     cdef vector[double] rvec
 *     for i in vec:
 */
  __pyx_k_tuple_184 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__vec), ((PyObject *)__pyx_n_s__weights), ((PyObject *)__pyx_n_s__rvec), ((PyObject *)__pyx_n_s__i)); if (unlikely(!__pyx_k_tuple_184)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_184);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_184));
  __pyx_k_codeobj_185 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_184, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s__pairwise_dot, 2992, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_185)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":3074
 * 
 * 
 * def make_pruning_projections(Hypergraph graph, BoolPotentials filt):             # <<<<<<<<<<<<<<
 *     cdef const CHypergraphProjection *projection = \
 *         cproject_hypergraph(graph.thisptr,
 */
  __pyx_k_tuple_186 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__filt), ((PyObject *)__pyx_n_s__projection)); if (unlikely(!__pyx_k_tuple_186)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_186);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_186));
  __pyx_k_codeobj_187 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_186, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s_6, 3074, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_187)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":3080
 *     return Projection().init(projection, None)
 * 
 * def valid_binary_vectors(Bitset lhs, Bitset rhs):             # <<<<<<<<<<<<<<
 *     return cvalid_binary_vectors(lhs.data, rhs.data)
 * 
 */
  __pyx_k_tuple_188 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__lhs), ((PyObject *)__pyx_n_s__rhs)); if (unlikely(!__pyx_k_tuple_188)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_188);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_188));
  __pyx_k_codeobj_189 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_188, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s_190, 3080, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_189)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":3084
 * 
 * 
 * def extend_hypergraph_by_count(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                CountingPotentials potentials,
 *                                int lower_limit,
 */
  __pyx_k_tuple_191 = PyTuple_Pack(6, ((PyObject *)__pyx_n_s__graph), ((PyObject *)__pyx_n_s__potentials), ((PyObject *)__pyx_n_s__lower_limit), ((PyObject *)__pyx_n_s__upper_limit), ((PyObject *)__pyx_n_s__goal), ((PyObject *)__pyx_n_s__projection)); if (unlikely(!__pyx_k_tuple_191)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_191);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_191));
  __pyx_k_codeobj_192 = (PyObject*)__Pyx_PyCode_New(5, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_191, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_16, __pyx_n_s_193, 3084, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_192)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC inithyper(void); /*proto*/
PyMODINIT_FUNC inithyper(void)
#else
PyMODINIT_FUNC PyInit_hyper(void); /*proto*/
PyMODINIT_FUNC PyInit_hyper(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_hyper(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("hyper"), __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "pydecode.hyper")) {
      if (unlikely(PyDict_SetItemString(modules, "pydecode.hyper", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME)); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_pydecode__hyper) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_8pydecode_5hyper_Bitset = &__pyx_vtable_8pydecode_5hyper_Bitset;
  __pyx_vtable_8pydecode_5hyper_Bitset.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_Bitset *, bitset<500>))__pyx_f_8pydecode_5hyper_6Bitset_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_Bitset) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_Bitset.tp_dict, __pyx_vtabptr_8pydecode_5hyper_Bitset) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Bitset", (PyObject *)&__pyx_type_8pydecode_5hyper_Bitset) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_Bitset = &__pyx_type_8pydecode_5hyper_Bitset;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__SparseVectorW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_SparseVectorW", (PyObject *)&__pyx_type_8pydecode_5hyper__SparseVectorW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__SparseVectorW = &__pyx_type_8pydecode_5hyper__SparseVectorW;
  __pyx_vtabptr_8pydecode_5hyper_BinaryVectorPotentials = &__pyx_vtable_8pydecode_5hyper_BinaryVectorPotentials;
  __pyx_vtable_8pydecode_5hyper_BinaryVectorPotentials.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_BinaryVectorPotentials *, HypergraphPotentials<BinaryVectorPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *))__pyx_f_8pydecode_5hyper_22BinaryVectorPotentials_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_BinaryVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_BinaryVectorPotentials.tp_dict, __pyx_vtabptr_8pydecode_5hyper_BinaryVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BinaryVectorPotentials", (PyObject *)&__pyx_type_8pydecode_5hyper_BinaryVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials = &__pyx_type_8pydecode_5hyper_BinaryVectorPotentials;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__BinaryVectorW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_BinaryVectorW", (PyObject *)&__pyx_type_8pydecode_5hyper__BinaryVectorW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__BinaryVectorW = &__pyx_type_8pydecode_5hyper__BinaryVectorW;
  __pyx_vtabptr_8pydecode_5hyper__CountingMarginals = &__pyx_vtable_8pydecode_5hyper__CountingMarginals;
  __pyx_vtable_8pydecode_5hyper__CountingMarginals.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper__CountingMarginals *, Marginals<CountingPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_18_CountingMarginals_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__CountingMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper__CountingMarginals.tp_dict, __pyx_vtabptr_8pydecode_5hyper__CountingMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_CountingMarginals", (PyObject *)&__pyx_type_8pydecode_5hyper__CountingMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__CountingMarginals = &__pyx_type_8pydecode_5hyper__CountingMarginals;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_MaxSparseVectorChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "MaxSparseVectorChart", (PyObject *)&__pyx_type_8pydecode_5hyper_MaxSparseVectorChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_MaxSparseVectorChart = &__pyx_type_8pydecode_5hyper_MaxSparseVectorChart;
  __pyx_vtabptr_8pydecode_5hyper__ViterbiMarginals = &__pyx_vtable_8pydecode_5hyper__ViterbiMarginals;
  __pyx_vtable_8pydecode_5hyper__ViterbiMarginals.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper__ViterbiMarginals *, Marginals<ViterbiPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_17_ViterbiMarginals_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__ViterbiMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper__ViterbiMarginals.tp_dict, __pyx_vtabptr_8pydecode_5hyper__ViterbiMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_ViterbiMarginals", (PyObject *)&__pyx_type_8pydecode_5hyper__ViterbiMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__ViterbiMarginals = &__pyx_type_8pydecode_5hyper__ViterbiMarginals;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_ViterbiChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ViterbiChart", (PyObject *)&__pyx_type_8pydecode_5hyper_ViterbiChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_ViterbiChart = &__pyx_type_8pydecode_5hyper_ViterbiChart;
  __pyx_vtabptr_8pydecode_5hyper_MaxSparseVectorPotentials = &__pyx_vtable_8pydecode_5hyper_MaxSparseVectorPotentials;
  __pyx_vtable_8pydecode_5hyper_MaxSparseVectorPotentials.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_MaxSparseVectorPotentials *, HypergraphPotentials<MaxSparseVectorPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *))__pyx_f_8pydecode_5hyper_25MaxSparseVectorPotentials_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_MaxSparseVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1950; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_MaxSparseVectorPotentials.tp_dict, __pyx_vtabptr_8pydecode_5hyper_MaxSparseVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1950; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "MaxSparseVectorPotentials", (PyObject *)&__pyx_type_8pydecode_5hyper_MaxSparseVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1950; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials = &__pyx_type_8pydecode_5hyper_MaxSparseVectorPotentials;
  __pyx_vtabptr_8pydecode_5hyper_LogViterbiPotentials = &__pyx_vtable_8pydecode_5hyper_LogViterbiPotentials;
  __pyx_vtable_8pydecode_5hyper_LogViterbiPotentials.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_LogViterbiPotentials *, HypergraphPotentials<LogViterbiPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *))__pyx_f_8pydecode_5hyper_20LogViterbiPotentials_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_LogViterbiPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_LogViterbiPotentials.tp_dict, __pyx_vtabptr_8pydecode_5hyper_LogViterbiPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LogViterbiPotentials", (PyObject *)&__pyx_type_8pydecode_5hyper_LogViterbiPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_LogViterbiPotentials = &__pyx_type_8pydecode_5hyper_LogViterbiPotentials;
  __pyx_vtabptr_8pydecode_5hyper_ViterbiPotentials = &__pyx_vtable_8pydecode_5hyper_ViterbiPotentials;
  __pyx_vtable_8pydecode_5hyper_ViterbiPotentials.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_ViterbiPotentials *, HypergraphPotentials<ViterbiPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *))__pyx_f_8pydecode_5hyper_17ViterbiPotentials_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_ViterbiPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_ViterbiPotentials.tp_dict, __pyx_vtabptr_8pydecode_5hyper_ViterbiPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ViterbiPotentials", (PyObject *)&__pyx_type_8pydecode_5hyper_ViterbiPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_ViterbiPotentials = &__pyx_type_8pydecode_5hyper_ViterbiPotentials;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_BoolChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BoolChart", (PyObject *)&__pyx_type_8pydecode_5hyper_BoolChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_BoolChart = &__pyx_type_8pydecode_5hyper_BoolChart;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_CountingChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CountingChart", (PyObject *)&__pyx_type_8pydecode_5hyper_CountingChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_CountingChart = &__pyx_type_8pydecode_5hyper_CountingChart;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__MaxSparseVectorW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_MaxSparseVectorW", (PyObject *)&__pyx_type_8pydecode_5hyper__MaxSparseVectorW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__MaxSparseVectorW = &__pyx_type_8pydecode_5hyper__MaxSparseVectorW;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__InsideW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_InsideW", (PyObject *)&__pyx_type_8pydecode_5hyper__InsideW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__InsideW = &__pyx_type_8pydecode_5hyper__InsideW;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_InsideChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "InsideChart", (PyObject *)&__pyx_type_8pydecode_5hyper_InsideChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_InsideChart = &__pyx_type_8pydecode_5hyper_InsideChart;
  __pyx_vtabptr_8pydecode_5hyper__SparseVectorMarginals = &__pyx_vtable_8pydecode_5hyper__SparseVectorMarginals;
  __pyx_vtable_8pydecode_5hyper__SparseVectorMarginals.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper__SparseVectorMarginals *, Marginals<SparseVectorPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_22_SparseVectorMarginals_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__SparseVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper__SparseVectorMarginals.tp_dict, __pyx_vtabptr_8pydecode_5hyper__SparseVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_SparseVectorMarginals", (PyObject *)&__pyx_type_8pydecode_5hyper__SparseVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__SparseVectorMarginals = &__pyx_type_8pydecode_5hyper__SparseVectorMarginals;
  __pyx_vtabptr_8pydecode_5hyper_BoolPotentials = &__pyx_vtable_8pydecode_5hyper_BoolPotentials;
  __pyx_vtable_8pydecode_5hyper_BoolPotentials.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_BoolPotentials *, HypergraphPotentials<BoolPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *))__pyx_f_8pydecode_5hyper_14BoolPotentials_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_BoolPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_BoolPotentials.tp_dict, __pyx_vtabptr_8pydecode_5hyper_BoolPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BoolPotentials", (PyObject *)&__pyx_type_8pydecode_5hyper_BoolPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_BoolPotentials = &__pyx_type_8pydecode_5hyper_BoolPotentials;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__MinSparseVectorW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_MinSparseVectorW", (PyObject *)&__pyx_type_8pydecode_5hyper__MinSparseVectorW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__MinSparseVectorW = &__pyx_type_8pydecode_5hyper__MinSparseVectorW;
  __pyx_vtabptr_8pydecode_5hyper__LogViterbiMarginals = &__pyx_vtable_8pydecode_5hyper__LogViterbiMarginals;
  __pyx_vtable_8pydecode_5hyper__LogViterbiMarginals.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper__LogViterbiMarginals *, Marginals<LogViterbiPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_20_LogViterbiMarginals_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__LogViterbiMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper__LogViterbiMarginals.tp_dict, __pyx_vtabptr_8pydecode_5hyper__LogViterbiMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_LogViterbiMarginals", (PyObject *)&__pyx_type_8pydecode_5hyper__LogViterbiMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__LogViterbiMarginals = &__pyx_type_8pydecode_5hyper__LogViterbiMarginals;
  __pyx_vtabptr_8pydecode_5hyper__InsideMarginals = &__pyx_vtable_8pydecode_5hyper__InsideMarginals;
  __pyx_vtable_8pydecode_5hyper__InsideMarginals.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper__InsideMarginals *, Marginals<InsidePotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_16_InsideMarginals_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__InsideMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper__InsideMarginals.tp_dict, __pyx_vtabptr_8pydecode_5hyper__InsideMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_InsideMarginals", (PyObject *)&__pyx_type_8pydecode_5hyper__InsideMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__InsideMarginals = &__pyx_type_8pydecode_5hyper__InsideMarginals;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_MinSparseVectorChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1863; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "MinSparseVectorChart", (PyObject *)&__pyx_type_8pydecode_5hyper_MinSparseVectorChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1863; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_MinSparseVectorChart = &__pyx_type_8pydecode_5hyper_MinSparseVectorChart;
  __pyx_vtabptr_8pydecode_5hyper_MinSparseVectorPotentials = &__pyx_vtable_8pydecode_5hyper_MinSparseVectorPotentials;
  __pyx_vtable_8pydecode_5hyper_MinSparseVectorPotentials.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_MinSparseVectorPotentials *, HypergraphPotentials<MinSparseVectorPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *))__pyx_f_8pydecode_5hyper_25MinSparseVectorPotentials_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_MinSparseVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_MinSparseVectorPotentials.tp_dict, __pyx_vtabptr_8pydecode_5hyper_MinSparseVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "MinSparseVectorPotentials", (PyObject *)&__pyx_type_8pydecode_5hyper_MinSparseVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials = &__pyx_type_8pydecode_5hyper_MinSparseVectorPotentials;
  __pyx_vtabptr_8pydecode_5hyper__MaxSparseVectorMarginals = &__pyx_vtable_8pydecode_5hyper__MaxSparseVectorMarginals;
  __pyx_vtable_8pydecode_5hyper__MaxSparseVectorMarginals.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper__MaxSparseVectorMarginals *, Marginals<MaxSparseVectorPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_25_MaxSparseVectorMarginals_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__MaxSparseVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper__MaxSparseVectorMarginals.tp_dict, __pyx_vtabptr_8pydecode_5hyper__MaxSparseVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_MaxSparseVectorMarginals", (PyObject *)&__pyx_type_8pydecode_5hyper__MaxSparseVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__MaxSparseVectorMarginals = &__pyx_type_8pydecode_5hyper__MaxSparseVectorMarginals;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__ViterbiW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_ViterbiW", (PyObject *)&__pyx_type_8pydecode_5hyper__ViterbiW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__ViterbiW = &__pyx_type_8pydecode_5hyper__ViterbiW;
  __pyx_vtabptr_8pydecode_5hyper_InsidePotentials = &__pyx_vtable_8pydecode_5hyper_InsidePotentials;
  __pyx_vtable_8pydecode_5hyper_InsidePotentials.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_InsidePotentials *, HypergraphPotentials<InsidePotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *))__pyx_f_8pydecode_5hyper_16InsidePotentials_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_InsidePotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_InsidePotentials.tp_dict, __pyx_vtabptr_8pydecode_5hyper_InsidePotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "InsidePotentials", (PyObject *)&__pyx_type_8pydecode_5hyper_InsidePotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_InsidePotentials = &__pyx_type_8pydecode_5hyper_InsidePotentials;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__LogViterbiW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_LogViterbiW", (PyObject *)&__pyx_type_8pydecode_5hyper__LogViterbiW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__LogViterbiW = &__pyx_type_8pydecode_5hyper__LogViterbiW;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_BinaryVectorChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BinaryVectorChart", (PyObject *)&__pyx_type_8pydecode_5hyper_BinaryVectorChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_BinaryVectorChart = &__pyx_type_8pydecode_5hyper_BinaryVectorChart;
  __pyx_vtabptr_8pydecode_5hyper_CountingPotentials = &__pyx_vtable_8pydecode_5hyper_CountingPotentials;
  __pyx_vtable_8pydecode_5hyper_CountingPotentials.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_CountingPotentials *, HypergraphPotentials<CountingPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *))__pyx_f_8pydecode_5hyper_18CountingPotentials_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_CountingPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_CountingPotentials.tp_dict, __pyx_vtabptr_8pydecode_5hyper_CountingPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CountingPotentials", (PyObject *)&__pyx_type_8pydecode_5hyper_CountingPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_CountingPotentials = &__pyx_type_8pydecode_5hyper_CountingPotentials;
  __pyx_vtabptr_8pydecode_5hyper_SparseVectorPotentials = &__pyx_vtable_8pydecode_5hyper_SparseVectorPotentials;
  __pyx_vtable_8pydecode_5hyper_SparseVectorPotentials.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper_SparseVectorPotentials *, HypergraphPotentials<SparseVectorPotential> *, struct __pyx_obj_8pydecode_5hyper_Projection *))__pyx_f_8pydecode_5hyper_22SparseVectorPotentials_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_SparseVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_SparseVectorPotentials.tp_dict, __pyx_vtabptr_8pydecode_5hyper_SparseVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SparseVectorPotentials", (PyObject *)&__pyx_type_8pydecode_5hyper_SparseVectorPotentials) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_SparseVectorPotentials = &__pyx_type_8pydecode_5hyper_SparseVectorPotentials;
  __pyx_vtabptr_8pydecode_5hyper__MinSparseVectorMarginals = &__pyx_vtable_8pydecode_5hyper__MinSparseVectorMarginals;
  __pyx_vtable_8pydecode_5hyper__MinSparseVectorMarginals.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper__MinSparseVectorMarginals *, Marginals<MinSparseVectorPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_25_MinSparseVectorMarginals_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__MinSparseVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1878; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper__MinSparseVectorMarginals.tp_dict, __pyx_vtabptr_8pydecode_5hyper__MinSparseVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1878; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_MinSparseVectorMarginals", (PyObject *)&__pyx_type_8pydecode_5hyper__MinSparseVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1878; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__MinSparseVectorMarginals = &__pyx_type_8pydecode_5hyper__MinSparseVectorMarginals;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__CountingW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_CountingW", (PyObject *)&__pyx_type_8pydecode_5hyper__CountingW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__CountingW = &__pyx_type_8pydecode_5hyper__CountingW;
  __pyx_vtabptr_8pydecode_5hyper__BinaryVectorMarginals = &__pyx_vtable_8pydecode_5hyper__BinaryVectorMarginals;
  __pyx_vtable_8pydecode_5hyper__BinaryVectorMarginals.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper__BinaryVectorMarginals *, Marginals<BinaryVectorPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_22_BinaryVectorMarginals_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__BinaryVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper__BinaryVectorMarginals.tp_dict, __pyx_vtabptr_8pydecode_5hyper__BinaryVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_BinaryVectorMarginals", (PyObject *)&__pyx_type_8pydecode_5hyper__BinaryVectorMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__BinaryVectorMarginals = &__pyx_type_8pydecode_5hyper__BinaryVectorMarginals;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__BoolW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_BoolW", (PyObject *)&__pyx_type_8pydecode_5hyper__BoolW) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__BoolW = &__pyx_type_8pydecode_5hyper__BoolW;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_LogViterbiChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LogViterbiChart", (PyObject *)&__pyx_type_8pydecode_5hyper_LogViterbiChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_LogViterbiChart = &__pyx_type_8pydecode_5hyper_LogViterbiChart;
  __pyx_vtabptr_8pydecode_5hyper_Projection = &__pyx_vtable_8pydecode_5hyper_Projection;
  __pyx_vtable_8pydecode_5hyper_Projection.init = (struct __pyx_obj_8pydecode_5hyper_Projection *(*)(struct __pyx_obj_8pydecode_5hyper_Projection *, HypergraphProjection const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_10Projection_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_Projection) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper_Projection.tp_dict, __pyx_vtabptr_8pydecode_5hyper_Projection) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Projection", (PyObject *)&__pyx_type_8pydecode_5hyper_Projection) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_Projection = &__pyx_type_8pydecode_5hyper_Projection;
  __pyx_vtabptr_8pydecode_5hyper__BoolMarginals = &__pyx_vtable_8pydecode_5hyper__BoolMarginals;
  __pyx_vtable_8pydecode_5hyper__BoolMarginals.init = (PyObject *(*)(struct __pyx_obj_8pydecode_5hyper__BoolMarginals *, Marginals<BoolPotential> const *, struct __pyx_obj_8pydecode_10hypergraph_Hypergraph *))__pyx_f_8pydecode_5hyper_14_BoolMarginals_init;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper__BoolMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pydecode_5hyper__BoolMarginals.tp_dict, __pyx_vtabptr_8pydecode_5hyper__BoolMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "_BoolMarginals", (PyObject *)&__pyx_type_8pydecode_5hyper__BoolMarginals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper__BoolMarginals = &__pyx_type_8pydecode_5hyper__BoolMarginals;
  if (PyType_Ready(&__pyx_type_8pydecode_5hyper_SparseVectorChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SparseVectorChart", (PyObject *)&__pyx_type_8pydecode_5hyper_SparseVectorChart) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_5hyper_SparseVectorChart = &__pyx_type_8pydecode_5hyper_SparseVectorChart;
  /*--- Type import code ---*/
  __pyx_ptype_8pydecode_10hypergraph_Hypergraph = __Pyx_ImportType("pydecode.hypergraph", "Hypergraph", sizeof(struct __pyx_obj_8pydecode_10hypergraph_Hypergraph), 1); if (unlikely(!__pyx_ptype_8pydecode_10hypergraph_Hypergraph)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_8pydecode_10hypergraph_Hypergraph = (struct __pyx_vtabstruct_8pydecode_10hypergraph_Hypergraph*)__Pyx_GetVtable(__pyx_ptype_8pydecode_10hypergraph_Hypergraph->tp_dict); if (unlikely(!__pyx_vtabptr_8pydecode_10hypergraph_Hypergraph)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_10hypergraph_GraphBuilder = __Pyx_ImportType("pydecode.hypergraph", "GraphBuilder", sizeof(struct __pyx_obj_8pydecode_10hypergraph_GraphBuilder), 1); if (unlikely(!__pyx_ptype_8pydecode_10hypergraph_GraphBuilder)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_8pydecode_10hypergraph_GraphBuilder = (struct __pyx_vtabstruct_8pydecode_10hypergraph_GraphBuilder*)__Pyx_GetVtable(__pyx_ptype_8pydecode_10hypergraph_GraphBuilder->tp_dict); if (unlikely(!__pyx_vtabptr_8pydecode_10hypergraph_GraphBuilder)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_10hypergraph_Node = __Pyx_ImportType("pydecode.hypergraph", "Node", sizeof(struct __pyx_obj_8pydecode_10hypergraph_Node), 1); if (unlikely(!__pyx_ptype_8pydecode_10hypergraph_Node)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_8pydecode_10hypergraph_Node = (struct __pyx_vtabstruct_8pydecode_10hypergraph_Node*)__Pyx_GetVtable(__pyx_ptype_8pydecode_10hypergraph_Node->tp_dict); if (unlikely(!__pyx_vtabptr_8pydecode_10hypergraph_Node)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_10hypergraph_Edge = __Pyx_ImportType("pydecode.hypergraph", "Edge", sizeof(struct __pyx_obj_8pydecode_10hypergraph_Edge), 1); if (unlikely(!__pyx_ptype_8pydecode_10hypergraph_Edge)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_8pydecode_10hypergraph_Edge = (struct __pyx_vtabstruct_8pydecode_10hypergraph_Edge*)__Pyx_GetVtable(__pyx_ptype_8pydecode_10hypergraph_Edge->tp_dict); if (unlikely(!__pyx_vtabptr_8pydecode_10hypergraph_Edge)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pydecode_10hypergraph_Path = __Pyx_ImportType("pydecode.hypergraph", "Path", sizeof(struct __pyx_obj_8pydecode_10hypergraph_Path), 1); if (unlikely(!__pyx_ptype_8pydecode_10hypergraph_Path)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_8pydecode_10hypergraph_Path = (struct __pyx_vtabstruct_8pydecode_10hypergraph_Path*)__Pyx_GetVtable(__pyx_ptype_8pydecode_10hypergraph_Path->tp_dict); if (unlikely(!__pyx_vtabptr_8pydecode_10hypergraph_Path)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "pydecode/hyper.pyx":12
 * from wrap cimport *
 * from hypergraph cimport *
 * import hypergraph as py_hypergraph             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__hypergraph), 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__py_hypergraph, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":186
 * cdef class _ViterbiW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _ViterbiW_from_cpp(Viterbi_one())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_9_ViterbiW_1one, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__ViterbiW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__ViterbiW);

  /* "pydecode/hyper.pyx":185
 * 
 * cdef class _ViterbiW:
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def one():
 *         return _ViterbiW_from_cpp(Viterbi_one())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__ViterbiW, __pyx_n_s__one); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__ViterbiW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__ViterbiW);

  /* "pydecode/hyper.pyx":190
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _ViterbiW_from_cpp(Viterbi_zero())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_9_ViterbiW_3zero, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__ViterbiW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__ViterbiW);

  /* "pydecode/hyper.pyx":189
 *         return _ViterbiW_from_cpp(Viterbi_one())
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def zero():
 *         return _ViterbiW_from_cpp(Viterbi_zero())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__ViterbiW, __pyx_n_s__zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__ViterbiW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__ViterbiW);

  /* "pydecode/hyper.pyx":288
 * 
 * 
 * class Viterbi:             # <<<<<<<<<<<<<<
 *     Chart = ViterbiChart
 *     Marginals = _ViterbiMarginals
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "pydecode/hyper.pyx":289
 * 
 * class Viterbi:
 *     Chart = ViterbiChart             # <<<<<<<<<<<<<<
 *     Marginals = _ViterbiMarginals
 *     #Semi = _ViterbiW
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Chart, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_ViterbiChart))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":290
 * class Viterbi:
 *     Chart = ViterbiChart
 *     Marginals = _ViterbiMarginals             # <<<<<<<<<<<<<<
 *     #Semi = _ViterbiW
 *     Potentials = ViterbiPotentials
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Marginals, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__ViterbiMarginals))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":292
 *     Marginals = _ViterbiMarginals
 *     #Semi = _ViterbiW
 *     Potentials = ViterbiPotentials             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Potentials, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_ViterbiPotentials))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":295
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                ViterbiPotentials potentials):
 *         cdef ViterbiChart chart = ViterbiChart()
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_7Viterbi_1inside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_21, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_20)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":302
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 ViterbiPotentials potentials,
 *                 ViterbiChart inside_chart):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_7Viterbi_3outside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_24, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_23)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__outside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":313
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 ViterbiPotentials potentials,
 *                 ViterbiChart chart=None):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_7Viterbi_5viterbi, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_28, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_26)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, ((PyObject *)__pyx_k_tuple_27));
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__viterbi, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":330
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   ViterbiPotentials potentials,
 *                                   CountingPotentials count_potentials,
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_7Viterbi_7count_constrained_viterbi, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_32, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_30)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s_31, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":344
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           ViterbiPotentials potentials):
 *         cdef const CViterbiMarginals *marginals = \
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_7Viterbi_9compute_marginals, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_35, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_34)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__compute_marginals, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":352
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          ViterbiPotentials potentials,
 *                          threshold):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_7Viterbi_11prune_hypergraph, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_38, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_37)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__prune_hypergraph, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":288
 * 
 * 
 * class Viterbi:             # <<<<<<<<<<<<<<
 *     Chart = ViterbiChart
 *     Marginals = _ViterbiMarginals
 */
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1), __pyx_n_s__Viterbi, __pyx_n_s__Viterbi, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__Viterbi, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":517
 * cdef class _LogViterbiW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _LogViterbiW_from_cpp(LogViterbi_one())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12_LogViterbiW_1one, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__LogViterbiW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__LogViterbiW);

  /* "pydecode/hyper.pyx":516
 * 
 * cdef class _LogViterbiW:
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def one():
 *         return _LogViterbiW_from_cpp(LogViterbi_one())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__LogViterbiW, __pyx_n_s__one); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__LogViterbiW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__LogViterbiW);

  /* "pydecode/hyper.pyx":521
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _LogViterbiW_from_cpp(LogViterbi_zero())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12_LogViterbiW_3zero, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__LogViterbiW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__LogViterbiW);

  /* "pydecode/hyper.pyx":520
 *         return _LogViterbiW_from_cpp(LogViterbi_one())
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def zero():
 *         return _LogViterbiW_from_cpp(LogViterbi_zero())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__LogViterbiW, __pyx_n_s__zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__LogViterbiW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__LogViterbiW);

  /* "pydecode/hyper.pyx":619
 * 
 * 
 * class LogViterbi:             # <<<<<<<<<<<<<<
 *     Chart = LogViterbiChart
 *     Marginals = _LogViterbiMarginals
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "pydecode/hyper.pyx":620
 * 
 * class LogViterbi:
 *     Chart = LogViterbiChart             # <<<<<<<<<<<<<<
 *     Marginals = _LogViterbiMarginals
 *     #Semi = _LogViterbiW
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Chart, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiChart))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":621
 * class LogViterbi:
 *     Chart = LogViterbiChart
 *     Marginals = _LogViterbiMarginals             # <<<<<<<<<<<<<<
 *     #Semi = _LogViterbiW
 *     Potentials = LogViterbiPotentials
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Marginals, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__LogViterbiMarginals))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":623
 *     Marginals = _LogViterbiMarginals
 *     #Semi = _LogViterbiW
 *     Potentials = LogViterbiPotentials             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Potentials, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiPotentials))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":626
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                LogViterbiPotentials potentials):
 *         cdef LogViterbiChart chart = LogViterbiChart()
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_10LogViterbi_1inside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_43, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_42)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 625; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 625; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":633
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 LogViterbiPotentials potentials,
 *                 LogViterbiChart inside_chart):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_10LogViterbi_3outside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_46, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_45)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__outside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":644
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 LogViterbiPotentials potentials,
 *                 LogViterbiChart chart=None):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_10LogViterbi_5viterbi, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_50, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_48)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, ((PyObject *)__pyx_k_tuple_49));
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__viterbi, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":661
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   LogViterbiPotentials potentials,
 *                                   CountingPotentials count_potentials,
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_10LogViterbi_7count_constrained_viterbi, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_53, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_52)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s_31, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":675
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           LogViterbiPotentials potentials):
 *         cdef const CLogViterbiMarginals *marginals = \
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_10LogViterbi_9compute_marginals, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_56, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_55)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__compute_marginals, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":683
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          LogViterbiPotentials potentials,
 *                          threshold):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_10LogViterbi_11prune_hypergraph, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_59, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_58)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__prune_hypergraph, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":619
 * 
 * 
 * class LogViterbi:             # <<<<<<<<<<<<<<
 *     Chart = LogViterbiChart
 *     Marginals = _LogViterbiMarginals
 */
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1), __pyx_n_s__LogViterbi, __pyx_n_s__LogViterbi, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__LogViterbi, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":848
 * cdef class _InsideW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _InsideW_from_cpp(Inside_one())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_8_InsideW_1one, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__InsideW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__InsideW);

  /* "pydecode/hyper.pyx":847
 * 
 * cdef class _InsideW:
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def one():
 *         return _InsideW_from_cpp(Inside_one())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__InsideW, __pyx_n_s__one); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__InsideW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__InsideW);

  /* "pydecode/hyper.pyx":852
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _InsideW_from_cpp(Inside_zero())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_8_InsideW_3zero, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__InsideW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__InsideW);

  /* "pydecode/hyper.pyx":851
 *         return _InsideW_from_cpp(Inside_one())
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def zero():
 *         return _InsideW_from_cpp(Inside_zero())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__InsideW, __pyx_n_s__zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__InsideW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__InsideW);

  /* "pydecode/hyper.pyx":950
 * 
 * 
 * class Inside:             # <<<<<<<<<<<<<<
 *     Chart = InsideChart
 *     Marginals = _InsideMarginals
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 950; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "pydecode/hyper.pyx":951
 * 
 * class Inside:
 *     Chart = InsideChart             # <<<<<<<<<<<<<<
 *     Marginals = _InsideMarginals
 *     #Semi = _InsideW
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Chart, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_InsideChart))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":952
 * class Inside:
 *     Chart = InsideChart
 *     Marginals = _InsideMarginals             # <<<<<<<<<<<<<<
 *     #Semi = _InsideW
 *     Potentials = InsidePotentials
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Marginals, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__InsideMarginals))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":954
 *     Marginals = _InsideMarginals
 *     #Semi = _InsideW
 *     Potentials = InsidePotentials             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Potentials, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_InsidePotentials))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":957
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                InsidePotentials potentials):
 *         cdef InsideChart chart = InsideChart()
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_6Inside_1inside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_64, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_63)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":964
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 InsidePotentials potentials,
 *                 InsideChart inside_chart):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_6Inside_3outside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_67, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_66)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__outside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":975
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 InsidePotentials potentials,
 *                 InsideChart chart=None):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_6Inside_5viterbi, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_71, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_69)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, ((PyObject *)__pyx_k_tuple_70));
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 974; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 974; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__viterbi, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":992
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   InsidePotentials potentials,
 *                                   CountingPotentials count_potentials,
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_6Inside_7count_constrained_viterbi, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_74, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_73)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s_31, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1006
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           InsidePotentials potentials):
 *         cdef const CInsideMarginals *marginals = \
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_6Inside_9compute_marginals, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_77, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_76)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__compute_marginals, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1014
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          InsidePotentials potentials,
 *                          threshold):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_6Inside_11prune_hypergraph, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_80, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_79)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__prune_hypergraph, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":950
 * 
 * 
 * class Inside:             # <<<<<<<<<<<<<<
 *     Chart = InsideChart
 *     Marginals = _InsideMarginals
 */
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1), __pyx_n_s__Inside, __pyx_n_s__Inside, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 950; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__Inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 950; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1179
 * cdef class _BoolW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _BoolW_from_cpp(Bool_one())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_6_BoolW_1one, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__BoolW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__BoolW);

  /* "pydecode/hyper.pyx":1178
 * 
 * cdef class _BoolW:
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def one():
 *         return _BoolW_from_cpp(Bool_one())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__BoolW, __pyx_n_s__one); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__BoolW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__BoolW);

  /* "pydecode/hyper.pyx":1183
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _BoolW_from_cpp(Bool_zero())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_6_BoolW_3zero, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__BoolW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__BoolW);

  /* "pydecode/hyper.pyx":1182
 *         return _BoolW_from_cpp(Bool_one())
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def zero():
 *         return _BoolW_from_cpp(Bool_zero())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__BoolW, __pyx_n_s__zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__BoolW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__BoolW);

  /* "pydecode/hyper.pyx":1281
 * 
 * 
 * class Bool:             # <<<<<<<<<<<<<<
 *     Chart = BoolChart
 *     Marginals = _BoolMarginals
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "pydecode/hyper.pyx":1282
 * 
 * class Bool:
 *     Chart = BoolChart             # <<<<<<<<<<<<<<
 *     Marginals = _BoolMarginals
 *     #Semi = _BoolW
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Chart, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolChart))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1283
 * class Bool:
 *     Chart = BoolChart
 *     Marginals = _BoolMarginals             # <<<<<<<<<<<<<<
 *     #Semi = _BoolW
 *     Potentials = BoolPotentials
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Marginals, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__BoolMarginals))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1285
 *     Marginals = _BoolMarginals
 *     #Semi = _BoolW
 *     Potentials = BoolPotentials             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Potentials, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BoolPotentials))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1288
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                BoolPotentials potentials):
 *         cdef BoolChart chart = BoolChart()
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_4Bool_1inside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_85, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_84)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1295
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 BoolPotentials potentials,
 *                 BoolChart inside_chart):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_4Bool_3outside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_88, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_87)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__outside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1306
 * 
 *     @staticmethod
 *     def viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 BoolPotentials potentials,
 *                 BoolChart chart=None):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_4Bool_5viterbi, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_92, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_90)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, ((PyObject *)__pyx_k_tuple_91));
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__viterbi, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1323
 * 
 *     @staticmethod
 *     def count_constrained_viterbi(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                   BoolPotentials potentials,
 *                                   CountingPotentials count_potentials,
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_4Bool_7count_constrained_viterbi, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_95, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_94)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s_31, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1337
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           BoolPotentials potentials):
 *         cdef const CBoolMarginals *marginals = \
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_4Bool_9compute_marginals, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_98, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_97)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__compute_marginals, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1345
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          BoolPotentials potentials,
 *                          threshold):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_4Bool_11prune_hypergraph, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_101, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_100)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__prune_hypergraph, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1281
 * 
 * 
 * class Bool:             # <<<<<<<<<<<<<<
 *     Chart = BoolChart
 *     Marginals = _BoolMarginals
 */
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1), __pyx_n_s__Bool, __pyx_n_s__Bool, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__Bool, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1510
 * cdef class _SparseVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _SparseVectorW_from_cpp(SparseVector_one())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_14_SparseVectorW_1one, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__SparseVectorW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__SparseVectorW);

  /* "pydecode/hyper.pyx":1509
 * 
 * cdef class _SparseVectorW:
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def one():
 *         return _SparseVectorW_from_cpp(SparseVector_one())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__SparseVectorW, __pyx_n_s__one); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__SparseVectorW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__SparseVectorW);

  /* "pydecode/hyper.pyx":1514
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _SparseVectorW_from_cpp(SparseVector_zero())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_14_SparseVectorW_3zero, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__SparseVectorW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__SparseVectorW);

  /* "pydecode/hyper.pyx":1513
 *         return _SparseVectorW_from_cpp(SparseVector_one())
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def zero():
 *         return _SparseVectorW_from_cpp(SparseVector_zero())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__SparseVectorW, __pyx_n_s__zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__SparseVectorW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__SparseVectorW);

  /* "pydecode/hyper.pyx":1609
 * 
 * 
 * class SparseVector:             # <<<<<<<<<<<<<<
 *     Chart = SparseVectorChart
 *     Marginals = _SparseVectorMarginals
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "pydecode/hyper.pyx":1610
 * 
 * class SparseVector:
 *     Chart = SparseVectorChart             # <<<<<<<<<<<<<<
 *     Marginals = _SparseVectorMarginals
 *     #Semi = _SparseVectorW
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Chart, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_SparseVectorChart))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1611
 * class SparseVector:
 *     Chart = SparseVectorChart
 *     Marginals = _SparseVectorMarginals             # <<<<<<<<<<<<<<
 *     #Semi = _SparseVectorW
 *     Potentials = SparseVectorPotentials
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Marginals, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__SparseVectorMarginals))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1613
 *     Marginals = _SparseVectorMarginals
 *     #Semi = _SparseVectorW
 *     Potentials = SparseVectorPotentials             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Potentials, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_SparseVectorPotentials))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1616
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                SparseVectorPotentials potentials):
 *         cdef SparseVectorChart chart = SparseVectorChart()
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12SparseVector_1inside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_106, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_105)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1623
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 SparseVectorPotentials potentials,
 *                 SparseVectorChart inside_chart):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12SparseVector_3outside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_109, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_108)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__outside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1635
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           SparseVectorPotentials potentials):
 *         cdef const CSparseVectorMarginals *marginals = \
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12SparseVector_5compute_marginals, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_112, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_111)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__compute_marginals, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1643
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          SparseVectorPotentials potentials,
 *                          threshold):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12SparseVector_7prune_hypergraph, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_115, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_114)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__prune_hypergraph, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1609
 * 
 * 
 * class SparseVector:             # <<<<<<<<<<<<<<
 *     Chart = SparseVectorChart
 *     Marginals = _SparseVectorMarginals
 */
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1), __pyx_n_s__SparseVector, __pyx_n_s__SparseVector, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__SparseVector, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1808
 * cdef class _MinSparseVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_one())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_17_MinSparseVectorW_1one, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__MinSparseVectorW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__MinSparseVectorW);

  /* "pydecode/hyper.pyx":1807
 * 
 * cdef class _MinSparseVectorW:
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def one():
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_one())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__MinSparseVectorW, __pyx_n_s__one); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__MinSparseVectorW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__MinSparseVectorW);

  /* "pydecode/hyper.pyx":1812
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_zero())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_17_MinSparseVectorW_3zero, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__MinSparseVectorW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__MinSparseVectorW);

  /* "pydecode/hyper.pyx":1811
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_one())
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def zero():
 *         return _MinSparseVectorW_from_cpp(MinSparseVector_zero())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__MinSparseVectorW, __pyx_n_s__zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__MinSparseVectorW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__MinSparseVectorW);

  /* "pydecode/hyper.pyx":1907
 * 
 * 
 * class MinSparseVector:             # <<<<<<<<<<<<<<
 *     Chart = MinSparseVectorChart
 *     Marginals = _MinSparseVectorMarginals
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "pydecode/hyper.pyx":1908
 * 
 * class MinSparseVector:
 *     Chart = MinSparseVectorChart             # <<<<<<<<<<<<<<
 *     Marginals = _MinSparseVectorMarginals
 *     #Semi = _MinSparseVectorW
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Chart, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MinSparseVectorChart))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1908; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1909
 * class MinSparseVector:
 *     Chart = MinSparseVectorChart
 *     Marginals = _MinSparseVectorMarginals             # <<<<<<<<<<<<<<
 *     #Semi = _MinSparseVectorW
 *     Potentials = MinSparseVectorPotentials
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Marginals, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__MinSparseVectorMarginals))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1911
 *     Marginals = _MinSparseVectorMarginals
 *     #Semi = _MinSparseVectorW
 *     Potentials = MinSparseVectorPotentials             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Potentials, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MinSparseVectorPotentials))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":1914
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                MinSparseVectorPotentials potentials):
 *         cdef MinSparseVectorChart chart = MinSparseVectorChart()
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_15MinSparseVector_1inside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_120, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_119)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1913; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1913; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1921
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 MinSparseVectorPotentials potentials,
 *                 MinSparseVectorChart inside_chart):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_15MinSparseVector_3outside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_123, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_122)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__outside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1933
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           MinSparseVectorPotentials potentials):
 *         cdef const CMinSparseVectorMarginals *marginals = \
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_15MinSparseVector_5compute_marginals, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_126, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_125)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1932; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1932; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__compute_marginals, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1941
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          MinSparseVectorPotentials potentials,
 *                          threshold):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_15MinSparseVector_7prune_hypergraph, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_129, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_128)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1940; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1940; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__prune_hypergraph, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":1907
 * 
 * 
 * class MinSparseVector:             # <<<<<<<<<<<<<<
 *     Chart = MinSparseVectorChart
 *     Marginals = _MinSparseVectorMarginals
 */
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1), __pyx_n_s__MinSparseVector, __pyx_n_s__MinSparseVector, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__MinSparseVector, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2106
 * cdef class _MaxSparseVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_one())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_17_MaxSparseVectorW_1one, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW);

  /* "pydecode/hyper.pyx":2105
 * 
 * cdef class _MaxSparseVectorW:
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def one():
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_one())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW, __pyx_n_s__one); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW);

  /* "pydecode/hyper.pyx":2110
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_zero())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_17_MaxSparseVectorW_3zero, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW);

  /* "pydecode/hyper.pyx":2109
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_one())
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def zero():
 *         return _MaxSparseVectorW_from_cpp(MaxSparseVector_zero())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW, __pyx_n_s__zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__MaxSparseVectorW);

  /* "pydecode/hyper.pyx":2205
 * 
 * 
 * class MaxSparseVector:             # <<<<<<<<<<<<<<
 *     Chart = MaxSparseVectorChart
 *     Marginals = _MaxSparseVectorMarginals
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "pydecode/hyper.pyx":2206
 * 
 * class MaxSparseVector:
 *     Chart = MaxSparseVectorChart             # <<<<<<<<<<<<<<
 *     Marginals = _MaxSparseVectorMarginals
 *     #Semi = _MaxSparseVectorW
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Chart, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MaxSparseVectorChart))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2207
 * class MaxSparseVector:
 *     Chart = MaxSparseVectorChart
 *     Marginals = _MaxSparseVectorMarginals             # <<<<<<<<<<<<<<
 *     #Semi = _MaxSparseVectorW
 *     Potentials = MaxSparseVectorPotentials
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Marginals, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__MaxSparseVectorMarginals))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2209
 *     Marginals = _MaxSparseVectorMarginals
 *     #Semi = _MaxSparseVectorW
 *     Potentials = MaxSparseVectorPotentials             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Potentials, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_MaxSparseVectorPotentials))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2212
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                MaxSparseVectorPotentials potentials):
 *         cdef MaxSparseVectorChart chart = MaxSparseVectorChart()
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_15MaxSparseVector_1inside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_134, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_133)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2219
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 MaxSparseVectorPotentials potentials,
 *                 MaxSparseVectorChart inside_chart):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_15MaxSparseVector_3outside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_137, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_136)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__outside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2231
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           MaxSparseVectorPotentials potentials):
 *         cdef const CMaxSparseVectorMarginals *marginals = \
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_15MaxSparseVector_5compute_marginals, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_140, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_139)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__compute_marginals, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2239
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          MaxSparseVectorPotentials potentials,
 *                          threshold):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_15MaxSparseVector_7prune_hypergraph, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_143, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_142)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__prune_hypergraph, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2205
 * 
 * 
 * class MaxSparseVector:             # <<<<<<<<<<<<<<
 *     Chart = MaxSparseVectorChart
 *     Marginals = _MaxSparseVectorMarginals
 */
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1), __pyx_n_s__MaxSparseVector, __pyx_n_s__MaxSparseVector, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__MaxSparseVector, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2404
 * cdef class _BinaryVectorW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _BinaryVectorW_from_cpp(BinaryVector_one())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_14_BinaryVectorW_1one, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__BinaryVectorW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__BinaryVectorW);

  /* "pydecode/hyper.pyx":2403
 * 
 * cdef class _BinaryVectorW:
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def one():
 *         return _BinaryVectorW_from_cpp(BinaryVector_one())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__BinaryVectorW, __pyx_n_s__one); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__BinaryVectorW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__BinaryVectorW);

  /* "pydecode/hyper.pyx":2408
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _BinaryVectorW_from_cpp(BinaryVector_zero())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_14_BinaryVectorW_3zero, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__BinaryVectorW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__BinaryVectorW);

  /* "pydecode/hyper.pyx":2407
 *         return _BinaryVectorW_from_cpp(BinaryVector_one())
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def zero():
 *         return _BinaryVectorW_from_cpp(BinaryVector_zero())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__BinaryVectorW, __pyx_n_s__zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__BinaryVectorW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__BinaryVectorW);

  /* "pydecode/hyper.pyx":2503
 * 
 * 
 * class BinaryVector:             # <<<<<<<<<<<<<<
 *     Chart = BinaryVectorChart
 *     Marginals = _BinaryVectorMarginals
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "pydecode/hyper.pyx":2504
 * 
 * class BinaryVector:
 *     Chart = BinaryVectorChart             # <<<<<<<<<<<<<<
 *     Marginals = _BinaryVectorMarginals
 *     #Semi = _BinaryVectorW
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Chart, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BinaryVectorChart))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2505
 * class BinaryVector:
 *     Chart = BinaryVectorChart
 *     Marginals = _BinaryVectorMarginals             # <<<<<<<<<<<<<<
 *     #Semi = _BinaryVectorW
 *     Potentials = BinaryVectorPotentials
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Marginals, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__BinaryVectorMarginals))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2507
 *     Marginals = _BinaryVectorMarginals
 *     #Semi = _BinaryVectorW
 *     Potentials = BinaryVectorPotentials             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Potentials, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_BinaryVectorPotentials))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2510
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                BinaryVectorPotentials potentials):
 *         cdef BinaryVectorChart chart = BinaryVectorChart()
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12BinaryVector_1inside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_148, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_147)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2517
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 BinaryVectorPotentials potentials,
 *                 BinaryVectorChart inside_chart):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12BinaryVector_3outside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_151, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_150)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__outside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2529
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           BinaryVectorPotentials potentials):
 *         cdef const CBinaryVectorMarginals *marginals = \
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12BinaryVector_5compute_marginals, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_154, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_153)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__compute_marginals, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2537
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          BinaryVectorPotentials potentials,
 *                          threshold):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_12BinaryVector_7prune_hypergraph, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_157, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_156)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__prune_hypergraph, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2503
 * 
 * 
 * class BinaryVector:             # <<<<<<<<<<<<<<
 *     Chart = BinaryVectorChart
 *     Marginals = _BinaryVectorMarginals
 */
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1), __pyx_n_s__BinaryVector, __pyx_n_s__BinaryVector, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__BinaryVector, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2702
 * cdef class _CountingW:
 *     @staticmethod
 *     def one():             # <<<<<<<<<<<<<<
 *         return _CountingW_from_cpp(Counting_one())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_10_CountingW_1one, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__CountingW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__CountingW);

  /* "pydecode/hyper.pyx":2701
 * 
 * cdef class _CountingW:
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def one():
 *         return _CountingW_from_cpp(Counting_one())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__CountingW, __pyx_n_s__one); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__CountingW->tp_dict, __pyx_n_s__one, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__CountingW);

  /* "pydecode/hyper.pyx":2706
 * 
 *     @staticmethod
 *     def zero():             # <<<<<<<<<<<<<<
 *         return _CountingW_from_cpp(Counting_zero())
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_10_CountingW_3zero, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__CountingW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__CountingW);

  /* "pydecode/hyper.pyx":2705
 *         return _CountingW_from_cpp(Counting_one())
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def zero():
 *         return _CountingW_from_cpp(Counting_zero())
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_8pydecode_5hyper__CountingW, __pyx_n_s__zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8pydecode_5hyper__CountingW->tp_dict, __pyx_n_s__zero, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_8pydecode_5hyper__CountingW);

  /* "pydecode/hyper.pyx":2801
 * 
 * 
 * class Counting:             # <<<<<<<<<<<<<<
 *     Chart = CountingChart
 *     Marginals = _CountingMarginals
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "pydecode/hyper.pyx":2802
 * 
 * class Counting:
 *     Chart = CountingChart             # <<<<<<<<<<<<<<
 *     Marginals = _CountingMarginals
 *     #Semi = _CountingW
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Chart, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_CountingChart))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2803
 * class Counting:
 *     Chart = CountingChart
 *     Marginals = _CountingMarginals             # <<<<<<<<<<<<<<
 *     #Semi = _CountingW
 *     Potentials = CountingPotentials
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Marginals, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__CountingMarginals))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2805
 *     Marginals = _CountingMarginals
 *     #Semi = _CountingW
 *     Potentials = CountingPotentials             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__Potentials, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_CountingPotentials))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2805; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pydecode/hyper.pyx":2808
 * 
 *     @staticmethod
 *     def inside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                CountingPotentials potentials):
 *         cdef CountingChart chart = CountingChart()
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_8Counting_1inside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_162, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_161)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__inside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2815
 * 
 *     @staticmethod
 *     def outside(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                 CountingPotentials potentials,
 *                 CountingChart inside_chart):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_8Counting_3outside, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_165, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_164)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__outside, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2827
 * 
 *     @staticmethod
 *     def compute_marginals(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                           CountingPotentials potentials):
 *         cdef const CCountingMarginals *marginals = \
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_8Counting_5compute_marginals, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_168, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_167)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__compute_marginals, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2835
 * 
 *     @staticmethod
 *     def prune_hypergraph(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                          CountingPotentials potentials,
 *                          threshold):
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_8Counting_7prune_hypergraph, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_171, NULL, __pyx_n_s_17, ((PyObject *)__pyx_k_codeobj_170)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_staticmethod, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s__prune_hypergraph, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pydecode/hyper.pyx":2801
 * 
 * 
 * class Counting:             # <<<<<<<<<<<<<<
 *     Chart = CountingChart
 *     Marginals = _CountingMarginals
 */
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1), __pyx_n_s__Counting, __pyx_n_s__Counting, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__Counting, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2844
 * 
 * 
 * def inside(Hypergraph graph, potentials):             # <<<<<<<<<<<<<<
 *     r"""
 *     inside(Hypergraph graph, Potentials potentials):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_1inside, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__inside, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2868
 *     return potentials.kind.inside(graph, potentials)
 * 
 * def outside(Hypergraph graph, potentials, inside_chart):             # <<<<<<<<<<<<<<
 *     r"""
 *     outside(Hypergraph graph, Potentials potentials, Chart inside_chart)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_3outside, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__outside, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2898
 *     return potentials.kind.outside(graph, potentials, inside_chart)
 * 
 * def best_path(Hypergraph graph, potentials, chart=None):             # <<<<<<<<<<<<<<
 *     r"""
 *     best_path(Hypergraph graph, Potentials potentials):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_5best_path, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__best_path, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2921
 *     return potentials.kind.viterbi(graph, potentials, chart)
 * 
 * def prune_hypergraph(Hypergraph graph, potentials, thres):             # <<<<<<<<<<<<<<
 *     r"""
 *     prune_hypergraph(Hypergraph graph, potentials, thres)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_7prune_hypergraph, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__prune_hypergraph, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2943
 *     return potentials.kind.prune_hypergraph(graph, potentials, thres)
 * 
 * def compute_marginals(Hypergraph graph, potentials):             # <<<<<<<<<<<<<<
 *     r"""
 *     compute_marginals(Hypergraph graph, Potentials potentials):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_9compute_marginals, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__compute_marginals, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2964
 *     return potentials.kind.compute_marginals(graph, potentials)
 * 
 * class Potentials(LogViterbiPotentials):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiPotentials)));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiPotentials)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiPotentials)));
  __pyx_t_3 = __Pyx_CreateClass(((PyObject *)__pyx_t_2), ((PyObject *)__pyx_t_1), __pyx_n_s__Potentials, __pyx_n_s__Potentials, __pyx_n_s_17); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__Potentials, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2968
 * 
 * 
 * class Chart(LogViterbiChart):             # <<<<<<<<<<<<<<
 *     r"""
 *     Chart :math:`S^{|{\cal V}|}` associated with a hypergraph (V, E) and semiring S.
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiChart)));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiChart)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper_LogViterbiChart)));
  if (PyDict_SetItemString(((PyObject *)__pyx_t_1), "__doc__", ((PyObject *)__pyx_kp_s_182)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_CreateClass(((PyObject *)__pyx_t_3), ((PyObject *)__pyx_t_1), __pyx_n_s__Chart, __pyx_n_s__Chart, __pyx_n_s_17); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__Chart, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2977
 *     pass
 * 
 * class Marginals(_LogViterbiMarginals):             # <<<<<<<<<<<<<<
 *     r"""
 *     Marginal values :math:`S^{|{\cal E} \times {\cal V}|}` associated with a hypergraph ({\cal V}, {\cal E}) and semiring S.
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__LogViterbiMarginals)));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__LogViterbiMarginals)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_8pydecode_5hyper__LogViterbiMarginals)));
  if (PyDict_SetItemString(((PyObject *)__pyx_t_1), "__doc__", ((PyObject *)__pyx_kp_s_183)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_CreateClass(((PyObject *)__pyx_t_2), ((PyObject *)__pyx_t_1), __pyx_n_s__Marginals, __pyx_n_s__Marginals, __pyx_n_s_17); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__Marginals, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2987
 *     pass
 * 
 * inside_values = inside             # <<<<<<<<<<<<<<
 * outside_values = outside
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__inside); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__inside_values, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2988
 * 
 * inside_values = inside
 * outside_values = outside             # <<<<<<<<<<<<<<
 * 
 * ####### Methods that use specific potential ########
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__outside); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2988; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__outside_values, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2988; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":2992
 * ####### Methods that use specific potential ########
 * 
 * def pairwise_dot(SparseVectorPotentials potentials, vec, LogViterbiPotentials weights):             # <<<<<<<<<<<<<<
 *     cdef vector[double] rvec
 *     for i in vec:
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_11pairwise_dot, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__pairwise_dot, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":3074
 * 
 * 
 * def make_pruning_projections(Hypergraph graph, BoolPotentials filt):             # <<<<<<<<<<<<<<
 *     cdef const CHypergraphProjection *projection = \
 *         cproject_hypergraph(graph.thisptr,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_13make_pruning_projections, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_6, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":3080
 *     return Projection().init(projection, None)
 * 
 * def valid_binary_vectors(Bitset lhs, Bitset rhs):             # <<<<<<<<<<<<<<
 *     return cvalid_binary_vectors(lhs.data, rhs.data)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_15valid_binary_vectors, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_190, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":3084
 * 
 * 
 * def extend_hypergraph_by_count(Hypergraph graph,             # <<<<<<<<<<<<<<
 *                                CountingPotentials potentials,
 *                                int lower_limit,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8pydecode_5hyper_17extend_hypergraph_by_count, NULL, __pyx_n_s_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_193, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pydecode/hyper.pyx":1
 * #cython: embedsignature=True             # <<<<<<<<<<<<<<
 * from cython.operator cimport dereference as deref
 * from libcpp.string cimport string
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  if (PyDict_SetItem(__pyx_d, __pyx_n_s____test__, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "vector.to_py":63
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e_(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    __Pyx_AddTraceback("init pydecode.hyper", __pyx_clineno, __pyx_lineno, __pyx_filename);
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pydecode.hyper");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif /* CYTHON_REFNANNY */

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%s() takes %s %" CYTHON_FORMAT_SSIZE_T "d positional argument%s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (result) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                             int is_tuple, int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    if (!is_tuple && unlikely(!PyTuple_Check(tuple))) {
        iternextfunc iternext;
        iter = PyObject_GetIter(tuple);
        if (unlikely(!iter)) goto bad;
        if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
        iternext = Py_TYPE(iter)->tp_iternext;
        value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
        value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
        if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
        Py_DECREF(iter);
    } else {
        if (!has_known_size && unlikely(PyTuple_GET_SIZE(tuple) != 2)) {
            __Pyx_UnpackTupleError(tuple, 2);
            goto bad;
        }
#if CYTHON_COMPILING_IN_PYPY
        value1 = PySequence_ITEM(tuple, 0);
        if (unlikely(!value1)) goto bad;
        value2 = PySequence_ITEM(tuple, 1);
        if (unlikely(!value2)) goto bad;
#else
        value1 = PyTuple_GET_ITEM(tuple, 0);
        value2 = PyTuple_GET_ITEM(tuple, 1);
        Py_INCREF(value1);
        Py_INCREF(value2);
#endif
        if (decref_tuple) { Py_DECREF(tuple); }
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
#if !CYTHON_COMPILING_IN_PYPY
    if (is_dict) {
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
    }
#endif
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* iter_obj, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CPYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    #if PY_VERSION_HEX < 0x02050000
    if (PyClass_Check(type)) {
    #else
    if (PyType_Check(type)) {
    #endif
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        #if PY_VERSION_HEX < 0x02050000
        if (PyInstance_Check(type)) {
            type = (PyObject*) ((PyInstanceObject*)type)->in_class;
            Py_INCREF(type);
        } else {
            type = 0;
            PyErr_SetString(PyExc_TypeError,
                "raise: exception must be an old-style class or instance");
            goto raise_error;
        }
        #else
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
        #endif
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else /* Python 3+ */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *args;
        if (!value)
            args = PyTuple_New(0);
        else if (PyTuple_Check(value)) {
            Py_INCREF(value);
            args = value;
        } else
            args = PyTuple_Pack(1, value);
        if (!args)
            goto bad;
        owned_instance = PyEval_CallObject(type, args);
        Py_DECREF(args);
        if (!owned_instance)
            goto bad;
        value = owned_instance;
        if (!PyExceptionInstance_Check(value)) {
            PyErr_Format(PyExc_TypeError,
                         "calling %R should have returned an instance of "
                         "BaseException, not %R",
                         type, Py_TYPE(value));
            goto bad;
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (!j) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return -1;
                }
            }
            return m->sq_ass_item(o, i, v);
        }
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (is_list || (PySequence_Check(o) && !PyDict_Check(o))) {
#else
    if (is_list || PySequence_Check(o)) {
#endif
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s____pyx_vtable__, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s____pyx_vtable__);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result)
        result = __Pyx_GetModuleGlobalName(name);
    return result;
}

static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL)
        value = Py_None; /* Mark as deleted */
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(CYTHON_UNUSED __pyx_CyFunctionObject *op)
{
    PyObject* dict = PyModule_GetDict(__pyx_m);
    Py_XINCREF(dict);
    return dict;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    Py_DECREF(res);
    return 0;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
#ifndef PY_WRITE_RESTRICTED /* < Py2.5 */
#define PY_WRITE_RESTRICTED WRITE_RESTRICTED
#endif
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CyFunctionObject, func.m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {__Pyx_NAMESTR("__reduce__"), (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* code) {
    __pyx_CyFunctionObject *op = PyObject_GC_New(__pyx_CyFunctionObject, type);
    if (op == NULL)
        return NULL;
    op->flags = flags;
    op->func_weakreflist = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    PyObject_GC_Track(op);
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyMem_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    if (m->func_weakreflist != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return PyMethod_New(func,
                            type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
    return PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
#if CYTHON_COMPILING_IN_PYPY
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    Py_ssize_t size;
    switch (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST)) {
    case METH_VARARGS:
        if (likely(kw == NULL) || PyDict_Size(kw) == 0)
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL) || PyDict_Size(kw) == 0) {
            size = PyTuple_GET_SIZE(arg);
            if (size == 0)
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%zd given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL) || PyDict_Size(kw) == 0) {
            size = PyTuple_GET_SIZE(arg);
            if (size == 1)
                return (*meth)(self, PyTuple_GET_ITEM(arg, 0));
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%zd given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
#else
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
	return PyCFunction_Call(func, arg, kw);
}
#endif
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __Pyx_NAMESTR("cython_function_or_method"), /*tp_name*/
    sizeof(__pyx_CyFunctionObject),   /*tp_basicsize*/
    0,                                  /*tp_itemsize*/
    (destructor) __Pyx_CyFunction_dealloc, /*tp_dealloc*/
    0,                                  /*tp_print*/
    0,                                  /*tp_getattr*/
    0,                                  /*tp_setattr*/
#if PY_MAJOR_VERSION < 3
    0,                                  /*tp_compare*/
#else
    0,                                  /*reserved*/
#endif
    (reprfunc) __Pyx_CyFunction_repr,   /*tp_repr*/
    0,                                  /*tp_as_number*/
    0,                                  /*tp_as_sequence*/
    0,                                  /*tp_as_mapping*/
    0,                                  /*tp_hash*/
    __Pyx_CyFunction_Call,              /*tp_call*/
    0,                                  /*tp_str*/
    0,                                  /*tp_getattro*/
    0,                                  /*tp_setattro*/
    0,                                  /*tp_as_buffer*/
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC, /* tp_flags*/
    0,                                  /*tp_doc*/
    (traverseproc) __Pyx_CyFunction_traverse,   /*tp_traverse*/
    (inquiry) __Pyx_CyFunction_clear,   /*tp_clear*/
    0,                                  /*tp_richcompare*/
    offsetof(__pyx_CyFunctionObject, func_weakreflist), /* tp_weaklistoffse */
    0,                                  /*tp_iter*/
    0,                                  /*tp_iternext*/
    __pyx_CyFunction_methods,           /*tp_methods*/
    __pyx_CyFunction_members,           /*tp_members*/
    __pyx_CyFunction_getsets,           /*tp_getset*/
    0,                                  /*tp_base*/
    0,                                  /*tp_dict*/
    __Pyx_CyFunction_descr_get,         /*tp_descr_get*/
    0,                                  /*tp_descr_set*/
    offsetof(__pyx_CyFunctionObject, func_dict),/*tp_dictoffset*/
    0,                                  /*tp_init*/
    0,                                  /*tp_alloc*/
    0,                                  /*tp_new*/
    0,                                  /*tp_free*/
    0,                                  /*tp_is_gc*/
    0,                                  /*tp_bases*/
    0,                                  /*tp_mro*/
    0,                                  /*tp_cache*/
    0,                                  /*tp_subclasses*/
    0,                                  /*tp_weaklist*/
    0,                                  /*tp_del*/
#if PY_VERSION_HEX >= 0x02060000
    0,                                  /*tp_version_tag*/
#endif
#if PY_VERSION_HEX >= 0x030400a1 && defined(Py_TPFLAGS_HAVE_FINALIZE)
    0,                                  /*tp_finalize*/
#endif
};
static int __Pyx_CyFunction_init(void) {
#if !CYTHON_COMPILING_IN_PYPY
    __pyx_CyFunctionType_type.tp_call = PyCFunction_Call;
#endif
    if (PyType_Ready(&__pyx_CyFunctionType_type) < 0)
        return -1;
    __pyx_CyFunctionType = &__pyx_CyFunctionType_type;
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyMem_Malloc(size);
    if (!m->defaults)
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s____import__);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    #if PY_VERSION_HEX >= 0x02050000
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0; /* try absolute import on failure */
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
    #else
    if (level>0) {
        PyErr_SetString(PyExc_RuntimeError, "Relative import is not supported for Python <=2.4.");
        goto bad;
    }
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
    #endif
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases) {
    PyObject *metaclass;
#if PY_MAJOR_VERSION < 3
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = __Pyx_PyObject_GetAttrStr(base, __pyx_n_s____class__);
        if (!metaclass) {
            PyErr_Clear();
            metaclass = (PyObject*) Py_TYPE(base);
        }
    } else {
        metaclass = (PyObject *) &PyClass_Type;
    }
#else
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = (PyObject*) Py_TYPE(base);
    } else {
        metaclass = (PyObject *) &PyType_Type;
    }
#endif
    Py_INCREF(metaclass);
    return metaclass;
}

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *qualname, PyObject *modname) {
    PyObject *result;
    PyObject *metaclass;
    if (PyDict_SetItem(dict, __pyx_n_s____module__, modname) < 0)
        return NULL;
    if (PyDict_SetItem(dict, __pyx_n_s____qualname__, qualname) < 0)
        return NULL;
    metaclass = PyDict_GetItem(dict, __pyx_n_s____metaclass__);
    if (metaclass) {
        Py_INCREF(metaclass);
    } else {
        metaclass = __Pyx_FindPy2Metaclass(bases);
    }
    result = PyObject_CallFunctionObjArgs(metaclass, name, bases, dict, NULL);
    Py_DECREF(metaclass);
    return result;
}

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (unsigned long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return (unsigned long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(unsigned long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(unsigned long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (unsigned long)PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return (unsigned PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (unsigned PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return (long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (long)PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return (PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (signed long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return (signed long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(signed long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(signed long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (signed long)PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return (signed PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (signed PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        #if PY_VERSION_HEX < 0x02050000
        return PyErr_Warn(NULL, message);
        #else
        return PyErr_WarnEx(NULL, message, 1);
        #endif
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        if (PyErr_Warn(NULL, warning) < 0) goto bad;
        #else
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
        #endif
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,            /*int argcount,*/
        0,            /*int kwonlyargcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,      /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_globals = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif /*__PYX_DEFAULT_STRING_ENCODING_IS_ASCII*/
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else /* PY_VERSION_HEX < 0x03030000 */
        if (PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_DATA_SIZE(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
        return PyUnicode_AsUTF8AndSize(o, length);
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
#endif /* PY_VERSION_HEX < 0x03030000 */
    } else
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII  || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT */
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (r < 0) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       if ((val != (unsigned PY_LONG_LONG)-1) || !PyErr_Occurred())
           PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
