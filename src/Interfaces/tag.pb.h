// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tag.proto

#ifndef PROTOBUF_tag_2eproto__INCLUDED
#define PROTOBUF_tag_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "hypergraph.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tag_2eproto();
void protobuf_AssignDesc_tag_2eproto();
void protobuf_ShutdownFile_tag_2eproto();

class Tagging;

// ===================================================================

class Tagging : public ::google::protobuf::Message {
 public:
  Tagging();
  virtual ~Tagging();
  
  Tagging(const Tagging& from);
  
  inline Tagging& operator=(const Tagging& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tagging& default_instance();
  
  void Swap(Tagging* other);
  
  // implements Message ----------------------------------------------
  
  Tagging* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tagging& from);
  void MergeFrom(const Tagging& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 ind = 1;
  inline bool has_ind() const;
  inline void clear_ind();
  static const int kIndFieldNumber = 1;
  inline ::google::protobuf::int32 ind() const;
  inline void set_ind(::google::protobuf::int32 value);
  
  // required int32 tag_id = 2;
  inline bool has_tag_id() const;
  inline void clear_tag_id();
  static const int kTagIdFieldNumber = 2;
  inline ::google::protobuf::int32 tag_id() const;
  inline void set_tag_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Tagging)
 private:
  inline void set_has_ind();
  inline void clear_has_ind();
  inline void set_has_tag_id();
  inline void clear_has_tag_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 ind_;
  ::google::protobuf::int32 tag_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tag_2eproto();
  friend void protobuf_AssignDesc_tag_2eproto();
  friend void protobuf_ShutdownFile_tag_2eproto();
  
  void InitAsDefaultInstance();
  static Tagging* default_instance_;
};
// ===================================================================

static const int kTaggingFieldNumber = 120;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Hypergraph_Node,
    ::google::protobuf::internal::MessageTypeTraits< ::Tagging >, 11, false >
  tagging;
static const int kHasTaggingFieldNumber = 121;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Hypergraph_Node,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  has_tagging;

// ===================================================================

// Tagging

// required int32 ind = 1;
inline bool Tagging::has_ind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tagging::set_has_ind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tagging::clear_has_ind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tagging::clear_ind() {
  ind_ = 0;
  clear_has_ind();
}
inline ::google::protobuf::int32 Tagging::ind() const {
  return ind_;
}
inline void Tagging::set_ind(::google::protobuf::int32 value) {
  set_has_ind();
  ind_ = value;
}

// required int32 tag_id = 2;
inline bool Tagging::has_tag_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tagging::set_has_tag_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tagging::clear_has_tag_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tagging::clear_tag_id() {
  tag_id_ = 0;
  clear_has_tag_id();
}
inline ::google::protobuf::int32 Tagging::tag_id() const {
  return tag_id_;
}
inline void Tagging::set_tag_id(::google::protobuf::int32 value) {
  set_has_tag_id();
  tag_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tag_2eproto__INCLUDED
