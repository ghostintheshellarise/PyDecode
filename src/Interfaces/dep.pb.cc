// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dep.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Dep_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dep_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dep_2eproto() {
  protobuf_AddDesc_dep_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dep.proto");
  GOOGLE_CHECK(file != NULL);
  Dep_descriptor_ = file->message_type(0);
  static const int Dep_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dep, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dep, mod_),
  };
  Dep_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Dep_descriptor_,
      Dep::default_instance_,
      Dep_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dep, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dep, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Dep));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dep_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Dep_descriptor_, &Dep::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dep_2eproto() {
  delete Dep::default_instance_;
  delete Dep_reflection_;
}

void protobuf_AddDesc_dep_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_hypergraph_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tdep.proto\032\020hypergraph.proto\" \n\003Dep\022\014\n\004"
    "head\030\001 \002(\005\022\013\n\003mod\030\002 \002(\005:#\n\003dep\022\020.Hypergr"
    "aph.Edge\030n \001(\0132\004.Dep:!\n\007has_dep\022\020.Hyperg"
    "raph.Edge\030o \001(\010:\030\n\003len\022\013.Hypergraph\030\001 \001("
    "\005", 161);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dep.proto", &protobuf_RegisterTypes);
  Dep::default_instance_ = new Dep();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::Hypergraph_Edge::default_instance(),
    110, 11, false, false,
    &::Dep::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::Hypergraph_Edge::default_instance(),
    111, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::Hypergraph::default_instance(),
    1, 5, false, false);
  Dep::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dep_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dep_2eproto {
  StaticDescriptorInitializer_dep_2eproto() {
    protobuf_AddDesc_dep_2eproto();
  }
} static_descriptor_initializer_dep_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Dep::kHeadFieldNumber;
const int Dep::kModFieldNumber;
#endif  // !_MSC_VER

Dep::Dep()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Dep::InitAsDefaultInstance() {
}

Dep::Dep(const Dep& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Dep::SharedCtor() {
  _cached_size_ = 0;
  head_ = 0;
  mod_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Dep::~Dep() {
  SharedDtor();
}

void Dep::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Dep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dep::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dep_descriptor_;
}

const Dep& Dep::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dep_2eproto();  return *default_instance_;
}

Dep* Dep::default_instance_ = NULL;

Dep* Dep::New() const {
  return new Dep;
}

void Dep::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    head_ = 0;
    mod_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Dep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 head = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &head_)));
          set_has_head();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mod;
        break;
      }
      
      // required int32 mod = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mod:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mod_)));
          set_has_mod();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Dep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 head = 1;
  if (has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->head(), output);
  }
  
  // required int32 mod = 2;
  if (has_mod()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mod(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Dep::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 head = 1;
  if (has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->head(), target);
  }
  
  // required int32 mod = 2;
  if (has_mod()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mod(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Dep::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 head = 1;
    if (has_head()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->head());
    }
    
    // required int32 mod = 2;
    if (has_mod()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mod());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dep::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Dep* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Dep*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Dep::MergeFrom(const Dep& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_head()) {
      set_head(from.head());
    }
    if (from.has_mod()) {
      set_mod(from.mod());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Dep::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dep::CopyFrom(const Dep& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dep::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Dep::Swap(Dep* other) {
  if (other != this) {
    std::swap(head_, other->head_);
    std::swap(mod_, other->mod_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Dep::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dep_descriptor_;
  metadata.reflection = Dep_reflection_;
  return metadata;
}

::google::protobuf::internal::ExtensionIdentifier< ::Hypergraph_Edge,
    ::google::protobuf::internal::MessageTypeTraits< ::Dep >, 11, false >
  dep(kDepFieldNumber, ::Dep::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::Hypergraph_Edge,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  has_dep(kHasDepFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::Hypergraph,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  len(kLenFieldNumber, 0);

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
