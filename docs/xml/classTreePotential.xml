<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classTreePotential" kind="class" prot="public">
    <compoundname>TreePotential</compoundname>
    <includes refid="semirings_8h" local="no">semirings.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classTreePotential_1a251dd8734c86e2fa860634de78db212a" prot="public" static="no">
        <type><ref refid="classHypernode" kindref="compound">Hypernode</ref> *</type>
        <definition>typedef Hypernode* TreePotential::ValType</definition>
        <argsstring></argsstring>
        <name>ValType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="568" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classTreePotential_1a5fd661777edaab1288dc9a151984bffd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
        <definition>static ValType TreePotential::add</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classHypernode" kindref="compound">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="570" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="570" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1a7ebee86bfb2540f8a97d63167f9383d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
        <definition>static ValType TreePotential::times</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>times</name>
        <param>
          <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classHypernode" kindref="compound">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="573" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="573" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1a7df4b6cb5febea850952ee9b22f8a93d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
        <definition>static ValType TreePotential::safe_add</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>safe_add</name>
        <param>
          <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classHypernode" kindref="compound">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="588" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="588" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1a7c204995437b2086c2d271e692b488cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
        <definition>static ValType TreePotential::safe_times</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>safe_times</name>
        <param>
          <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classHypernode" kindref="compound">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="591" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="591" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1ab5cb3ba08be9d9ca4d067373f62ec1fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
        <definition>static ValType TreePotential::one</definition>
        <argsstring>()</argsstring>
        <name>one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="606" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="606" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1a071e37a6a4f4c7a741343e0ef00b44cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
        <definition>static ValType TreePotential::zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="607" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="607" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1a036347e1dcf1901dbc15ae465b104df7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHypernode" kindref="compound">ValType</ref> &amp;</type>
        <definition>static ValType&amp; TreePotential::normalize</definition>
        <argsstring>(ValType &amp;val)</argsstring>
        <name>normalize</name>
        <param>
          <type><ref refid="classHypernode" kindref="compound">ValType</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="609" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="609" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1a9517de575d50988b2a710733ed86fa70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHypernode" kindref="compound">ValType</ref></type>
        <definition>static ValType TreePotential::randValue</definition>
        <argsstring>()</argsstring>
        <name>randValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="614" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="614" bodyend="617"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Tree. <emphasis>Experimental</emphasis></para><para>+: No action *: NULL if either is NULL. Otherwise create a new node with rhs and lhs as tails 0: Empty Vector 1: Empty Vector </para>    </detaileddescription>
    <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="566" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="566" bodyend="618"/>
    <listofallmembers>
      <member refid="classTreePotential_1a5fd661777edaab1288dc9a151984bffd" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>add</name></member>
      <member refid="classTreePotential_1a036347e1dcf1901dbc15ae465b104df7" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>normalize</name></member>
      <member refid="classTreePotential_1ab5cb3ba08be9d9ca4d067373f62ec1fd" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>one</name></member>
      <member refid="classTreePotential_1a9517de575d50988b2a710733ed86fa70" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>randValue</name></member>
      <member refid="classTreePotential_1a7df4b6cb5febea850952ee9b22f8a93d" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>safe_add</name></member>
      <member refid="classTreePotential_1a7c204995437b2086c2d271e692b488cd" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>safe_times</name></member>
      <member refid="classTreePotential_1a7ebee86bfb2540f8a97d63167f9383d6" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>times</name></member>
      <member refid="classTreePotential_1a251dd8734c86e2fa860634de78db212a" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>ValType</name></member>
      <member refid="classTreePotential_1a071e37a6a4f4c7a741343e0ef00b44cd" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
