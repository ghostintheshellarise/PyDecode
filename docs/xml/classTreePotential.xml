<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="classTreePotential" kind="class" prot="public">
    <compoundname>TreePotential</compoundname>
    <basecompoundref refid="classBaseSemiringPotential" prot="public" virt="non-virtual">BaseSemiringPotential&lt; Hypernode *, TreePotential &gt;</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTreePotential_1a26366c31fcf24b779040006994ba325f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TreePotential::TreePotential</definition>
        <argsstring>(Hypernode *value)</argsstring>
        <name>TreePotential</name>
        <param>
          <type><ref refid="classHypernode" kindref="compound">Hypernode</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="380" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="380" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1a090aa67497ffd39813ed2625262bc972" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classTreePotential" kindref="compound">TreePotential</ref> &amp;</type>
        <definition>TreePotential&amp; TreePotential::operator+=</definition>
        <argsstring>(const TreePotential &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classTreePotential" kindref="compound">TreePotential</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="382" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="382" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1a32f2334c73b7adb081b44792b4d28ae2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classTreePotential" kindref="compound">TreePotential</ref> &amp;</type>
        <definition>TreePotential&amp; TreePotential::operator*=</definition>
        <argsstring>(const TreePotential &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classTreePotential" kindref="compound">TreePotential</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="386" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="386" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1a96d258a9162e944fe4cd48a3da41865b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHypernode" kindref="compound">Hypernode</ref> *</type>
        <definition>Hypernode* TreePotential::normalize</definition>
        <argsstring>(Hypernode *val) const </argsstring>
        <name>normalize</name>
        <param>
          <type><ref refid="classHypernode" kindref="compound">Hypernode</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="406" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="406" bodyend="408"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classTreePotential_1acf69c69a8a4bbcaf3d798277bea63613" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classTreePotential" kindref="compound">TreePotential</ref></type>
        <definition>static const TreePotential TreePotential::one</definition>
        <argsstring>()</argsstring>
        <name>one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="401" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="401" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classTreePotential_1af1aec6695671e9b11673276682e5b2d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classTreePotential" kindref="compound">TreePotential</ref></type>
        <definition>static const TreePotential TreePotential::zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="404" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="404" bodyend="404"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="87">
        <label>BaseSemiringPotential&lt; Hypernode *, TreePotential &gt;</label>
        <link refid="classBaseSemiringPotential"/>
      </node>
      <node id="86">
        <label>TreePotential</label>
        <link refid="classTreePotential"/>
        <childnode refid="87" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="89">
        <label>BaseSemiringPotential&lt; Hypernode *, TreePotential &gt;</label>
        <link refid="classBaseSemiringPotential"/>
        <childnode refid="90" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="90">
        <label>Hypernode</label>
        <link refid="classHypernode"/>
      </node>
      <node id="88">
        <label>TreePotential</label>
        <link refid="classTreePotential"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="378" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="378" bodyend="409"/>
    <listofallmembers>
      <member refid="classBaseSemiringPotential_1a3ccf8b43dd32e794f7a546caa2e8ffd9" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>add</name></member>
      <member refid="classBaseSemiringPotential_1a54bb42020981d47a9ee5edbefdd0f4b3" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>BaseSemiringPotential</name></member>
      <member refid="classBaseSemiringPotential_1ae70438bcff496bff89daf4c4eac38ce4" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>BaseSemiringPotential</name></member>
      <member refid="classBaseSemiringPotential_1ac4f432c81a12368ae2b1d5230cc762c2" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>BaseSemiringPotential</name></member>
      <member refid="classTreePotential_1a96d258a9162e944fe4cd48a3da41865b" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>normalize</name></member>
      <member refid="classBaseSemiringPotential_1a87949cd4f8b8aceedaaac1a446c82190" prot="public" virt="non-virtual" ambiguityscope="BaseSemiringPotential&lt; Hypernode *, TreePotential &gt;::"><scope>TreePotential</scope><name>normalize</name></member>
      <member refid="classTreePotential_1acf69c69a8a4bbcaf3d798277bea63613" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>one</name></member>
      <member refid="classBaseSemiringPotential_1a57bbc01de90082ca201dc151d821f0e9" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>operator Hypernode *</name></member>
      <member refid="classTreePotential_1a32f2334c73b7adb081b44792b4d28ae2" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>operator*=</name></member>
      <member refid="classTreePotential_1a090aa67497ffd39813ed2625262bc972" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>operator+=</name></member>
      <member refid="classBaseSemiringPotential_1af3f7108cca054ed98908a2d536cfcec8" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>operator=</name></member>
      <member refid="classBaseSemiringPotential_1a688918a5566844351e4fb4ddc95e9784" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>operator=</name></member>
      <member refid="classBaseSemiringPotential_1a90188fa749f13b11996f2e328dfb4045" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>times</name></member>
      <member refid="classTreePotential_1a26366c31fcf24b779040006994ba325f" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>TreePotential</name></member>
      <member refid="classBaseSemiringPotential_1a8ab78c41be222b13d87894877608567e" prot="protected" virt="non-virtual"><scope>TreePotential</scope><name>value</name></member>
      <member refid="classTreePotential_1af1aec6695671e9b11673276682e5b2d4" prot="public" virt="non-virtual"><scope>TreePotential</scope><name>zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
