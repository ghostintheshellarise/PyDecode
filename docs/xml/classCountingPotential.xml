<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classCountingPotential" kind="class" prot="public">
    <compoundname>CountingPotential</compoundname>
    <includes refid="semirings_8h" local="no">semirings.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" prot="public" static="no">
        <type>int</type>
        <definition>typedef int CountingPotential::ValType</definition>
        <argsstring></argsstring>
        <name>ValType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This semiring is represented by integers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="380" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classCountingPotential_1ab21c428c65b241fbb1c6c821b2893490" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
        <definition>static ValType CountingPotential::add</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add is performed by returning the addition of the two elements. NOT domain-safe. <simplesect kind="return"><para>The addition of the two elements. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="386" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="386" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classCountingPotential_1a7b4498e962e58e5c21807f5fc4b9069c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
        <definition>static ValType CountingPotential::times</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>times</name>
        <param>
          <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Times is the same as the underlying * operation. NOT domain-safe. <simplesect kind="return"><para>The multiplication of the two elements. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="394" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="394" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classCountingPotential_1aa41fea42a411c6fb6397a52a5afeb300" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
        <definition>static ValType CountingPotential::safe_add</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>safe_add</name>
        <param>
          <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A normalized version of the add operation. Domain Safe. <simplesect kind="return"><para>Normalized addition of the two arguments. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="403" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="403" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classCountingPotential_1a50a29a96f58536402c998df2523c13bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
        <definition>static ValType CountingPotential::safe_times</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>safe_times</name>
        <param>
          <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A normalized version of the times operation. Domain Safe. <simplesect kind="return"><para>Normalized multiplication of the two arguments. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="411" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="411" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classCountingPotential_1a91f9a62f9e0b2b09d07069fa2e39cc7b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref> &amp;</type>
        <definition>static ValType&amp; CountingPotential::normalize</definition>
        <argsstring>(ValType &amp;val)</argsstring>
        <name>normalize</name>
        <param>
          <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normalizes a ValType to the specific domain of this Semiring. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>ValType reference to normalize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the modified argument after it is normalized to the correct domain. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="422" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="422" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="classCountingPotential_1ac6e15e0d8eb7589dd8bd5a0d250dfa3a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
        <definition>static ValType CountingPotential::one</definition>
        <argsstring>()</argsstring>
        <name>one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The identity element of the semiring. <simplesect kind="return"><para>1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="430" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classCountingPotential_1aa3dc15a948a950c10cd05a0988c5f5c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
        <definition>static ValType CountingPotential::zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The annihlator element of the semiring. <simplesect kind="return"><para>0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="435" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="435" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classCountingPotential_1aa1c29a8a0b614af536286ac7177ff4c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" kindref="member">ValType</ref></type>
        <definition>static ValType CountingPotential::randValue</definition>
        <argsstring>()</argsstring>
        <name>randValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provides a semi-random ValType that is within the domain specified by the semiring. <simplesect kind="return"><para>A random value between 0 and infinity (here 1e8) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="442" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="442" bodyend="444"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Counting Semiring Potential for tracking the number of derivations. Concept from Huang 2006. </para>    </detaileddescription>
    <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="378" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="378" bodyend="445"/>
    <listofallmembers>
      <member refid="classCountingPotential_1ab21c428c65b241fbb1c6c821b2893490" prot="public" virt="non-virtual"><scope>CountingPotential</scope><name>add</name></member>
      <member refid="classCountingPotential_1a91f9a62f9e0b2b09d07069fa2e39cc7b" prot="public" virt="non-virtual"><scope>CountingPotential</scope><name>normalize</name></member>
      <member refid="classCountingPotential_1ac6e15e0d8eb7589dd8bd5a0d250dfa3a" prot="public" virt="non-virtual"><scope>CountingPotential</scope><name>one</name></member>
      <member refid="classCountingPotential_1aa1c29a8a0b614af536286ac7177ff4c7" prot="public" virt="non-virtual"><scope>CountingPotential</scope><name>randValue</name></member>
      <member refid="classCountingPotential_1aa41fea42a411c6fb6397a52a5afeb300" prot="public" virt="non-virtual"><scope>CountingPotential</scope><name>safe_add</name></member>
      <member refid="classCountingPotential_1a50a29a96f58536402c998df2523c13bf" prot="public" virt="non-virtual"><scope>CountingPotential</scope><name>safe_times</name></member>
      <member refid="classCountingPotential_1a7b4498e962e58e5c21807f5fc4b9069c" prot="public" virt="non-virtual"><scope>CountingPotential</scope><name>times</name></member>
      <member refid="classCountingPotential_1a2ed1837e2d43715bd6c7caf6d2afd62d" prot="public" virt="non-virtual"><scope>CountingPotential</scope><name>ValType</name></member>
      <member refid="classCountingPotential_1aa3dc15a948a950c10cd05a0988c5f5c4" prot="public" virt="non-virtual"><scope>CountingPotential</scope><name>zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
