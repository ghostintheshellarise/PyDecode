<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="classCompPotential" kind="class" prot="public">
    <compoundname>CompPotential</compoundname>
    <basecompoundref refid="classBaseSemiringPotential" prot="public" virt="non-virtual">BaseSemiringPotential&lt; std::pair&lt; SemiringComp, SemiringOther &gt;, CompPotential&lt; SemiringComp, SemiringOther &gt; &gt;</basecompoundref>
    <includes refid="Semirings_8h" local="no">Semirings.h</includes>
    <templateparamlist>
      <param>
        <type>typename SemiringComp</type>
      </param>
      <param>
        <type>typename SemiringOther</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCompPotential_1a42dd452a0f0b7ac20c57a1bbfb4c6e3c" prot="public" static="no">
        <type>std::pair&lt; SemiringComp, SemiringOther &gt;</type>
        <definition>typedef std::pair&lt;SemiringComp, SemiringOther&gt; CompPotential&lt; SemiringComp, SemiringOther &gt;::MyVal</definition>
        <argsstring></argsstring>
        <name>MyVal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="301" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCompPotential_1aef85bc527abe317fe3ea19c8602646c7" prot="public" static="no">
        <type><ref refid="classCompPotential" kindref="compound">CompPotential</ref>&lt; SemiringComp, SemiringOther &gt;</type>
        <definition>typedef CompPotential&lt;SemiringComp, SemiringOther&gt; CompPotential&lt; SemiringComp, SemiringOther &gt;::MyClass</definition>
        <argsstring></argsstring>
        <name>MyClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="302" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCompPotential_1a547a880119fb9db322229cfa3fbc6a03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CompPotential&lt; SemiringComp, SemiringOther &gt;::CompPotential</definition>
        <argsstring>(MyVal value)</argsstring>
        <name>CompPotential</name>
        <param>
          <type>MyVal</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="305" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classCompPotential_1aed1c278ea8d48e3058904c61dffba2f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCompPotential" kindref="compound">MyClass</ref> &amp;</type>
        <definition>MyClass&amp; CompPotential&lt; SemiringComp, SemiringOther &gt;::operator+=</definition>
        <argsstring>(const MyClass &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classCompPotential" kindref="compound">MyClass</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="307" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classCompPotential_1ad948bbd62039bd38b342f8fe87a7bfa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCompPotential" kindref="compound">MyClass</ref> &amp;</type>
        <definition>MyClass&amp; CompPotential&lt; SemiringComp, SemiringOther &gt;::operator*=</definition>
        <argsstring>(const MyClass &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classCompPotential" kindref="compound">MyClass</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="312" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="312" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classCompPotential_1ac9ccdc30b242c7c1b0cc33c6543fdf12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>MyVal</type>
        <definition>MyVal CompPotential&lt; SemiringComp, SemiringOther &gt;::normalize</definition>
        <argsstring>(MyVal val) const </argsstring>
        <name>normalize</name>
        <param>
          <type>MyVal</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="321" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="321" bodyend="325"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classCompPotential_1a6b211beb16af97eb0188a2baa376b537" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCompPotential" kindref="compound">MyClass</ref></type>
        <definition>static const MyClass CompPotential&lt; SemiringComp, SemiringOther &gt;::one</definition>
        <argsstring>()</argsstring>
        <name>one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="318" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classCompPotential_1ab1558df2fab390472f1e507f8737d18f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCompPotential" kindref="compound">MyClass</ref></type>
        <definition>static const MyClass CompPotential&lt; SemiringComp, SemiringOther &gt;::zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="319" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="319" bodyend="319"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Comparison pair. <emphasis>Experimental</emphasis> Type (s, t) op (s&apos;, t&apos;) +: if (s &gt; s&apos;) then (s, t) else (s&apos;, t&apos;) *: (s * s&apos;, t * t&apos;) 0: (0, 0) 1: (1, 1) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="19">
        <label>CompPotential&lt; SemiringComp, SemiringOther &gt;</label>
        <link refid="classCompPotential"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>BaseSemiringPotential&lt; std::pair&lt; SemiringComp, SemiringOther &gt;, CompPotential&lt; SemiringComp, SemiringOther &gt; &gt;</label>
        <link refid="classBaseSemiringPotential"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="21">
        <label>CompPotential&lt; SemiringComp, SemiringOther &gt;</label>
        <link refid="classCompPotential"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>BaseSemiringPotential&lt; std::pair&lt; SemiringComp, SemiringOther &gt;, CompPotential&lt; SemiringComp, SemiringOther &gt; &gt;</label>
        <link refid="classBaseSemiringPotential"/>
      </node>
    </collaborationgraph>
    <location file="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" line="299" bodyfile="/home/srush/Projects/decoding/src/Hypergraph/Semirings.h" bodystart="299" bodyend="326"/>
    <listofallmembers>
      <member refid="classBaseSemiringPotential_1a3ccf8b43dd32e794f7a546caa2e8ffd9" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>add</name></member>
      <member refid="classBaseSemiringPotential_1a54bb42020981d47a9ee5edbefdd0f4b3" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>BaseSemiringPotential</name></member>
      <member refid="classBaseSemiringPotential_1ae70438bcff496bff89daf4c4eac38ce4" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>BaseSemiringPotential</name></member>
      <member refid="classBaseSemiringPotential_1ac4f432c81a12368ae2b1d5230cc762c2" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>BaseSemiringPotential</name></member>
      <member refid="classCompPotential_1a547a880119fb9db322229cfa3fbc6a03" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>CompPotential</name></member>
      <member refid="classCompPotential_1aef85bc527abe317fe3ea19c8602646c7" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>MyClass</name></member>
      <member refid="classCompPotential_1a42dd452a0f0b7ac20c57a1bbfb4c6e3c" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>MyVal</name></member>
      <member refid="classCompPotential_1ac9ccdc30b242c7c1b0cc33c6543fdf12" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>normalize</name></member>
      <member refid="classBaseSemiringPotential_1a87949cd4f8b8aceedaaac1a446c82190" prot="public" virt="non-virtual" ambiguityscope="BaseSemiringPotential&lt; std::pair&lt; SemiringComp, SemiringOther &gt;, CompPotential&lt; SemiringComp, SemiringOther &gt; &gt;::"><scope>CompPotential</scope><name>normalize</name></member>
      <member refid="classCompPotential_1a6b211beb16af97eb0188a2baa376b537" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>one</name></member>
      <member refid="classBaseSemiringPotential_1a57bbc01de90082ca201dc151d821f0e9" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>operator std::pair&lt; SemiringComp, SemiringOther &gt;</name></member>
      <member refid="classCompPotential_1ad948bbd62039bd38b342f8fe87a7bfa7" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>operator*=</name></member>
      <member refid="classCompPotential_1aed1c278ea8d48e3058904c61dffba2f0" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>operator+=</name></member>
      <member refid="classBaseSemiringPotential_1af3f7108cca054ed98908a2d536cfcec8" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>operator=</name></member>
      <member refid="classBaseSemiringPotential_1a688918a5566844351e4fb4ddc95e9784" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>operator=</name></member>
      <member refid="classBaseSemiringPotential_1a90188fa749f13b11996f2e328dfb4045" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>times</name></member>
      <member refid="classBaseSemiringPotential_1a8ab78c41be222b13d87894877608567e" prot="protected" virt="non-virtual"><scope>CompPotential</scope><name>value</name></member>
      <member refid="classCompPotential_1ab1558df2fab390472f1e507f8737d18f" prot="public" virt="non-virtual"><scope>CompPotential</scope><name>zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
