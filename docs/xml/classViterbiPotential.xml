<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classViterbiPotential" kind="class" prot="public">
    <compoundname>ViterbiPotential</compoundname>
    <derivedcompoundref refid="classInsidePotential" prot="public" virt="non-virtual">InsidePotential</derivedcompoundref>
    <derivedcompoundref refid="classLogViterbiPotential" prot="public" virt="non-virtual">LogViterbiPotential</derivedcompoundref>
    <includes refid="semirings_8h" local="no">semirings.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" prot="public" static="no">
        <type>double</type>
        <definition>typedef double ViterbiPotential::ValType</definition>
        <argsstring></argsstring>
        <name>ValType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This semiring is represented by doubles. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="27" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classViterbiPotential_1aa498764eb675bca7ae5633d140049aba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
        <definition>static ValType ViterbiPotential::add</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add is performed by returning the max of the two elements. NOT domain-safe. <simplesect kind="return"><para>The max of the two elements. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="33" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classViterbiPotential_1a001ecb72b415808eeb92ef103cd47fa6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
        <definition>static ValType ViterbiPotential::times</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>times</name>
        <param>
          <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Times is the same as the underlying * operation. NOT domain-safe. <simplesect kind="return"><para>The multiplication of the two elements. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="41" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classViterbiPotential_1a8b0e67cdd92046477a3428c18d0a5f67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
        <definition>static ValType ViterbiPotential::safe_add</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>safe_add</name>
        <param>
          <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A normalized version of the add operation. Domain Safe. <simplesect kind="return"><para>Normalized max of the two arguments. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="50" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classViterbiPotential_1a0e2d68c29589a327d316495b2dba21e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
        <definition>static ValType ViterbiPotential::safe_times</definition>
        <argsstring>(ValType lhs, const ValType &amp;rhs)</argsstring>
        <name>safe_times</name>
        <param>
          <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A normalized version of the times operation. Domain Safe. <simplesect kind="return"><para>Normalized times of the two arguments. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="58" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classViterbiPotential_1a399a339744f11e45a5eb663d5f696341" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref> &amp;</type>
        <definition>static ValType&amp; ViterbiPotential::normalize</definition>
        <argsstring>(ValType &amp;val)</argsstring>
        <name>normalize</name>
        <param>
          <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normalizes a ValType to the specific domain of this Semiring. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>ValType reference to normalize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the modified argument after it is normalized to the correct domain. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="69" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classViterbiPotential_1ad541ba415b6784405dba2a934b938206" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
        <definition>static ValType ViterbiPotential::zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The annihlator element of the semiring. <simplesect kind="return"><para>0.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="79" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classViterbiPotential_1a609b3afe096a44e2d54adbc954414ef3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
        <definition>static ValType ViterbiPotential::one</definition>
        <argsstring>()</argsstring>
        <name>one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The identity element of the semiring. <simplesect kind="return"><para>1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="84" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classViterbiPotential_1abd257b5f70ad6f9c70c78f710f69938d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" kindref="member">ValType</ref></type>
        <definition>static ValType ViterbiPotential::randValue</definition>
        <argsstring>()</argsstring>
        <name>randValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provides a semi-random ValType that is within the domain specified by the semiring. <simplesect kind="return"><para>A random value between 0.0 and 1.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="91" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="91" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>When deriving or creating your own semiring type, you must specify: -add/times &amp; safe_add/safe_times (mainly for testing) -one/zero -normalize -randValue</para><para>These properties must also hold: Viterbi Semiring Potential for tracking the probability of the highest scoring derivation. Concept from Huang 2006. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="88">
        <label>LogViterbiPotential</label>
        <link refid="classLogViterbiPotential"/>
        <childnode refid="86" relation="public-inheritance">
        </childnode>
      </node>
      <node id="87">
        <label>InsidePotential</label>
        <link refid="classInsidePotential"/>
        <childnode refid="86" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>ViterbiPotential</label>
        <link refid="classViterbiPotential"/>
      </node>
    </inheritancegraph>
    <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="25" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="25" bodyend="92"/>
    <listofallmembers>
      <member refid="classViterbiPotential_1aa498764eb675bca7ae5633d140049aba" prot="public" virt="non-virtual"><scope>ViterbiPotential</scope><name>add</name></member>
      <member refid="classViterbiPotential_1a399a339744f11e45a5eb663d5f696341" prot="public" virt="non-virtual"><scope>ViterbiPotential</scope><name>normalize</name></member>
      <member refid="classViterbiPotential_1a609b3afe096a44e2d54adbc954414ef3" prot="public" virt="non-virtual"><scope>ViterbiPotential</scope><name>one</name></member>
      <member refid="classViterbiPotential_1abd257b5f70ad6f9c70c78f710f69938d" prot="public" virt="non-virtual"><scope>ViterbiPotential</scope><name>randValue</name></member>
      <member refid="classViterbiPotential_1a8b0e67cdd92046477a3428c18d0a5f67" prot="public" virt="non-virtual"><scope>ViterbiPotential</scope><name>safe_add</name></member>
      <member refid="classViterbiPotential_1a0e2d68c29589a327d316495b2dba21e2" prot="public" virt="non-virtual"><scope>ViterbiPotential</scope><name>safe_times</name></member>
      <member refid="classViterbiPotential_1a001ecb72b415808eeb92ef103cd47fa6" prot="public" virt="non-virtual"><scope>ViterbiPotential</scope><name>times</name></member>
      <member refid="classViterbiPotential_1a60ac3f3d90fe981c569c34af52dc8c2e" prot="public" virt="non-virtual"><scope>ViterbiPotential</scope><name>ValType</name></member>
      <member refid="classViterbiPotential_1ad541ba415b6784405dba2a934b938206" prot="public" virt="non-virtual"><scope>ViterbiPotential</scope><name>zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
