<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="Tests_8cpp" kind="file">
    <compoundname>Tests.cpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="Hypergraph_8h" local="yes">Hypergraph/Hypergraph.h</includes>
    <includes refid="Semirings_8h" local="yes">Hypergraph/Semirings.h</includes>
    <incdepgraph>
      <node id="80">
        <label>src/Tests.cpp</label>
        <link refid="Tests.cpp"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>./foreach.h</label>
        <link refid="foreach_8h_source"/>
      </node>
      <node id="84">
        <label>cassert</label>
      </node>
      <node id="81">
        <label>string</label>
      </node>
      <node id="85">
        <label>exception</label>
      </node>
      <node id="91">
        <label>Hypergraph/Semirings.h</label>
        <link refid="Semirings_8h_source"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>ctime</label>
      </node>
      <node id="87">
        <label>vector</label>
      </node>
      <node id="82">
        <label>gtest/gtest.h</label>
      </node>
      <node id="88">
        <label>./common.h</label>
        <link refid="common_8h_source"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>Hypergraph/Hypergraph.h</label>
        <link refid="Hypergraph_8h_source"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>set</label>
      </node>
      <node id="92">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="Tests_8cpp_1a3e1543cfb1418106c463639f26be6c88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Decode, TestHypergraph)</argsstring>
        <name>TEST</name>
        <param>
          <type>Decode</type>
        </param>
        <param>
          <type>TestHypergraph</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Tests.cpp" line="7" bodyfile="/home/srush/Projects/decoding/src/Tests.cpp" bodystart="7" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="Tests_8cpp_1afe0abb7608d540011ba4319a768b7456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Decode, ViterbiPotential)</argsstring>
        <name>TEST</name>
        <param>
          <type>Decode</type>
        </param>
        <param>
          <type><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Tests.cpp" line="23" bodyfile="/home/srush/Projects/decoding/src/Tests.cpp" bodystart="23" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="Tests_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/decoding/src/Tests.cpp" line="54" bodyfile="/home/srush/Projects/decoding/src/Tests.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//test.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Hypergraph/Hypergraph.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Hypergraph/Semirings.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">TEST(Decode,<sp/>TestHypergraph)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><ref refid="classHypergraph" kindref="compound">Hypergraph</ref><sp/>test;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>vector&lt;HNode&gt;<sp/>nodes;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>nodes.push_back(test.<ref refid="classHypergraph_1aef5172b80c30235a7491a41096b34071" kindref="member">add_terminal_node</ref>(</highlight><highlight class="stringliteral">&quot;one&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>nodes.push_back(test.<ref refid="classHypergraph_1aef5172b80c30235a7491a41096b34071" kindref="member">add_terminal_node</ref>(</highlight><highlight class="stringliteral">&quot;two&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>nodes.push_back(test.<ref refid="classHypergraph_1aef5172b80c30235a7491a41096b34071" kindref="member">add_terminal_node</ref>(</highlight><highlight class="stringliteral">&quot;three&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>test.start_node(</highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>test.add_edge(nodes,<sp/></highlight><highlight class="stringliteral">&quot;Edgy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>test.<ref refid="classHypergraph_1af6474ea50a210bb4fb2055d0539c0033" kindref="member">end_node</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>test.<ref refid="classHypergraph_1a1e5f8c394f30d6cb35f20949e2c70fc2" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>ASSERT_EQ(test.<ref refid="classHypergraph_1a6ac40aa4309b5d828bee31fc03ebde0a" kindref="member">nodes</ref>().size(),<sp/>4);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>ASSERT_EQ(test.<ref refid="classHypergraph_1abf51be949d9e736679a4b51594b4de08" kindref="member">edges</ref>().size(),<sp/>1);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">TEST(Decode,<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>correct<sp/>normalization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref><sp/>high<sp/>=<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>(1.1);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>high;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>ASSERT_EQ(high,<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>(1.0));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref><sp/>low<sp/>=<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>(-0.1);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>ASSERT_EQ(low,<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>(0.0));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>high<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>ASSERT_EQ(high,<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>(0.5));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>Operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>high<sp/>+=<sp/>low;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>ASSERT_EQ(high,<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>(0.5));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>low<sp/>+=<sp/>high;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>ASSERT_EQ(low,<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>(0.5));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>high<sp/>*=<sp/>low;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>ASSERT_EQ(high,<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>(0.25));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>high<sp/>*=<sp/>ViterbiPotential::one();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>ASSERT_EQ(high,<sp/><ref refid="classViterbiPotential" kindref="compound">ViterbiPotential</ref>(0.25));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>high<sp/>*=<sp/>ViterbiPotential::zero();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>ASSERT_EQ(high,<sp/>ViterbiPotential::zero());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>casting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>high<sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>d<sp/>=<sp/>(double)high<sp/>+<sp/>d;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>ASSERT_EQ(d,<sp/>0.75);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>::testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/decoding/src/Tests.cpp"/>
  </compounddef>
</doxygen>
