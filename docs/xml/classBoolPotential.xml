<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classBoolPotential" kind="class" prot="public">
    <compoundname>BoolPotential</compoundname>
    <includes refid="semirings_8h" local="no">semirings.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" prot="public" static="no">
        <type>bool</type>
        <definition>typedef bool BoolPotential::ValType</definition>
        <argsstring></argsstring>
        <name>ValType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This semiring is represented by booleans. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="311" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBoolPotential_1a4fcf10bf6b6673270bccc1c265b7c336" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref></type>
        <definition>static ValType BoolPotential::add</definition>
        <argsstring>(const ValType &amp;lhs, const ValType &amp;rhs)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add is performed by returning the logical OR of the two elements. Domain safe due to ValType domain restrictions. <simplesect kind="return"><para>Logical OR of the two elements. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="318" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="318" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classBoolPotential_1a356aace811e41b670da701233768d6ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref></type>
        <definition>static ValType BoolPotential::times</definition>
        <argsstring>(const ValType &amp;lhs, const ValType &amp;rhs)</argsstring>
        <name>times</name>
        <param>
          <type>const <ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Times is performed by returning the logical AND of the two elements. Domain safe due to ValType domain restrictions. <simplesect kind="return"><para>Logical AND of the two elements. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="326" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classBoolPotential_1a3a6cb387107cd8ac176d4310ca88b15a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref></type>
        <definition>static ValType BoolPotential::safe_add</definition>
        <argsstring>(const ValType &amp;lhs, const ValType &amp;rhs)</argsstring>
        <name>safe_add</name>
        <param>
          <type>const <ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No difference from above add <simplesect kind="return"><para>Logical OR of the two arguments. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="334" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="334" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classBoolPotential_1a1d77a6053c018aa1396fc255de797a15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref></type>
        <definition>static ValType BoolPotential::safe_times</definition>
        <argsstring>(const ValType &amp;lhs, const ValType &amp;rhs)</argsstring>
        <name>safe_times</name>
        <param>
          <type>const <ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No difference from above times <simplesect kind="return"><para>Logical AND of the two arguments. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="341" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="341" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classBoolPotential_1aa6468758c5fcc3e9f95bff579f7663d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
        <definition>static ValType&amp; BoolPotential::normalize</definition>
        <argsstring>(ValType &amp;val)</argsstring>
        <name>normalize</name>
        <param>
          <type><ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function has no implementation due to the type specific domain. It merely returns a reference to the argument, and due to it being inlined, will likely result in no extra operation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>ValType reference to normalize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the given argument </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="352" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="352" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classBoolPotential_1aa7f489a3a7c7c01fc7b34b8e999cdb61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref></type>
        <definition>static ValType BoolPotential::one</definition>
        <argsstring>()</argsstring>
        <name>one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The identity element of the semiring. <simplesect kind="return"><para>true </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="360" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="360" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classBoolPotential_1af6ddf32f56caf7e24afd284531520af8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref></type>
        <definition>static ValType BoolPotential::zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The annihlator element of the semiring. <simplesect kind="return"><para>false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="365" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="365" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classBoolPotential_1a75a6c61aebbf4d0a44678dbc6f267011" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" kindref="member">ValType</ref></type>
        <definition>static ValType BoolPotential::randValue</definition>
        <argsstring>()</argsstring>
        <name>randValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provides a semi-random ValType. <simplesect kind="return"><para>A semi-random value either true or false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="371" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="371" bodyend="371"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Boolean Semiring Potential for use in logical deductions, and recognition. Concept from Huang 2006. </para>    </detaileddescription>
    <location file="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" line="309" column="1" bodyfile="/Volumes/Enki_Files/Documents/school/research/PyDecode/src/Hypergraph/semirings.h" bodystart="309" bodyend="372"/>
    <listofallmembers>
      <member refid="classBoolPotential_1a4fcf10bf6b6673270bccc1c265b7c336" prot="public" virt="non-virtual"><scope>BoolPotential</scope><name>add</name></member>
      <member refid="classBoolPotential_1aa6468758c5fcc3e9f95bff579f7663d7" prot="public" virt="non-virtual"><scope>BoolPotential</scope><name>normalize</name></member>
      <member refid="classBoolPotential_1aa7f489a3a7c7c01fc7b34b8e999cdb61" prot="public" virt="non-virtual"><scope>BoolPotential</scope><name>one</name></member>
      <member refid="classBoolPotential_1a75a6c61aebbf4d0a44678dbc6f267011" prot="public" virt="non-virtual"><scope>BoolPotential</scope><name>randValue</name></member>
      <member refid="classBoolPotential_1a3a6cb387107cd8ac176d4310ca88b15a" prot="public" virt="non-virtual"><scope>BoolPotential</scope><name>safe_add</name></member>
      <member refid="classBoolPotential_1a1d77a6053c018aa1396fc255de797a15" prot="public" virt="non-virtual"><scope>BoolPotential</scope><name>safe_times</name></member>
      <member refid="classBoolPotential_1a356aace811e41b670da701233768d6ab" prot="public" virt="non-virtual"><scope>BoolPotential</scope><name>times</name></member>
      <member refid="classBoolPotential_1ad93d2ed3b5b4394b500b8c18cddc6c7e" prot="public" virt="non-virtual"><scope>BoolPotential</scope><name>ValType</name></member>
      <member refid="classBoolPotential_1af6ddf32f56caf7e24afd284531520af8" prot="public" virt="non-virtual"><scope>BoolPotential</scope><name>zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
