{"name":"PyDecode","tagline":"A simple dynamic programming toolkit for natural language processing.","body":"PyDecode is a pragmatic toolkit for dynamic programming with a focus on natural language processing (NLP).  \r\nThe interface is in Python, the core code is in C++. \r\n\r\nWe built this toolkit because:\r\n\r\n* Dynamic programming is hard to get right and painful to debug.\r\n* Run-time efficiency is crucial for many NLP tasks.\r\n* Extensions to dynamic programming often require extensive extra programming.\r\n\r\nCurrently the toolkit is in early development. The code now includes:\r\n\r\nDynamic programming:\r\n\r\n* Construction of a dynamic program (using hypergraphs).\r\n* Graphical output for debugging.\r\n* Finding the best path, inside scores, outside scores, and oracle scores.\r\n* Pruning.\r\n* Integration with an LP solver.\r\n\r\nConstrained dynamic programming:\r\n\r\n* Hypergraphs with additional side-constraints. \r\n* Subgradient-style optimization for side-constraints \r\n\r\nFuture additions:\r\n\r\n* Hooks for features and training.\r\n* Formal A* and beam search extensions.\r\n* K-best algorithms.\r\n\r\nWhile the interface is in Python, the underlying algorithms and data\r\nstructures are written in C++ with Cython bindings. Our aim is to keep\r\nthe C++ codebase as small as possible.\r\n\r\nIt is being developed with the hope of\r\n(1) simplifying and formalizing the process of writing decoding\r\nalgorithms and (2) trying out new experimental algorithms for\r\nconstrained decoding problems. The main application for the library is\r\nnatural language processing (NLP), however it should be applicable to\r\nother areas that use dynamic programming.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}